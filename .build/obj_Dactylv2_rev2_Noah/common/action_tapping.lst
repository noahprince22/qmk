   1               		.file	"action_tapping.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.debug_waiting_buffer,"ax",@progbits
  12               	debug_waiting_buffer:
  13               	.LFB12:
  14               		.file 1 "./tmk_core/common/action_tapping.c"
   1:./tmk_core/common/action_tapping.c **** #include <stdint.h>
   2:./tmk_core/common/action_tapping.c **** #include <stdbool.h>
   3:./tmk_core/common/action_tapping.c **** #include "action.h"
   4:./tmk_core/common/action_tapping.c **** #include "action_layer.h"
   5:./tmk_core/common/action_tapping.c **** #include "action_tapping.h"
   6:./tmk_core/common/action_tapping.c **** #include "keycode.h"
   7:./tmk_core/common/action_tapping.c **** #include "timer.h"
   8:./tmk_core/common/action_tapping.c **** 
   9:./tmk_core/common/action_tapping.c **** #ifdef DEBUG_ACTION
  10:./tmk_core/common/action_tapping.c **** #include "debug.h"
  11:./tmk_core/common/action_tapping.c **** #else
  12:./tmk_core/common/action_tapping.c **** #include "nodebug.h"
  13:./tmk_core/common/action_tapping.c **** #endif
  14:./tmk_core/common/action_tapping.c **** 
  15:./tmk_core/common/action_tapping.c **** #ifndef NO_ACTION_TAPPING
  16:./tmk_core/common/action_tapping.c **** 
  17:./tmk_core/common/action_tapping.c **** #define IS_TAPPING()            !IS_NOEVENT(tapping_key.event)
  18:./tmk_core/common/action_tapping.c **** #define IS_TAPPING_PRESSED()    (IS_TAPPING() && tapping_key.event.pressed)
  19:./tmk_core/common/action_tapping.c **** #define IS_TAPPING_RELEASED()   (IS_TAPPING() && !tapping_key.event.pressed)
  20:./tmk_core/common/action_tapping.c **** #define IS_TAPPING_KEY(k)       (IS_TAPPING() && KEYEQ(tapping_key.event.key, (k)))
  21:./tmk_core/common/action_tapping.c **** #define WITHIN_TAPPING_TERM(e)  (TIMER_DIFF_16(e.time, tapping_key.event.time) < TAPPING_TERM)
  22:./tmk_core/common/action_tapping.c **** 
  23:./tmk_core/common/action_tapping.c **** 
  24:./tmk_core/common/action_tapping.c **** static keyrecord_t tapping_key = {};
  25:./tmk_core/common/action_tapping.c **** static keyrecord_t waiting_buffer[WAITING_BUFFER_SIZE] = {};
  26:./tmk_core/common/action_tapping.c **** static uint8_t waiting_buffer_head = 0;
  27:./tmk_core/common/action_tapping.c **** static uint8_t waiting_buffer_tail = 0;
  28:./tmk_core/common/action_tapping.c **** 
  29:./tmk_core/common/action_tapping.c **** static bool process_tapping(keyrecord_t *record);
  30:./tmk_core/common/action_tapping.c **** static bool waiting_buffer_enq(keyrecord_t record);
  31:./tmk_core/common/action_tapping.c **** static void waiting_buffer_clear(void);
  32:./tmk_core/common/action_tapping.c **** static bool waiting_buffer_typed(keyevent_t event);
  33:./tmk_core/common/action_tapping.c **** static bool waiting_buffer_has_anykey_pressed(void);
  34:./tmk_core/common/action_tapping.c **** static void waiting_buffer_scan_tap(void);
  35:./tmk_core/common/action_tapping.c **** static void debug_tapping_key(void);
  36:./tmk_core/common/action_tapping.c **** static void debug_waiting_buffer(void);
  37:./tmk_core/common/action_tapping.c **** 
  38:./tmk_core/common/action_tapping.c **** 
  39:./tmk_core/common/action_tapping.c **** /** \brief Action Tapping Process
  40:./tmk_core/common/action_tapping.c ****  *
  41:./tmk_core/common/action_tapping.c ****  * FIXME: Needs doc
  42:./tmk_core/common/action_tapping.c ****  */
  43:./tmk_core/common/action_tapping.c **** void action_tapping_process(keyrecord_t record)
  44:./tmk_core/common/action_tapping.c **** {
  45:./tmk_core/common/action_tapping.c ****     if (process_tapping(&record)) {
  46:./tmk_core/common/action_tapping.c ****         if (!IS_NOEVENT(record.event)) {
  47:./tmk_core/common/action_tapping.c ****             debug("processed: "); debug_record(record); debug("\n");
  48:./tmk_core/common/action_tapping.c ****         }
  49:./tmk_core/common/action_tapping.c ****     } else {
  50:./tmk_core/common/action_tapping.c ****         if (!waiting_buffer_enq(record)) {
  51:./tmk_core/common/action_tapping.c ****             // clear all in case of overflow.
  52:./tmk_core/common/action_tapping.c ****             debug("OVERFLOW: CLEAR ALL STATES\n");
  53:./tmk_core/common/action_tapping.c ****             clear_keyboard();
  54:./tmk_core/common/action_tapping.c ****             waiting_buffer_clear();
  55:./tmk_core/common/action_tapping.c ****             tapping_key = (keyrecord_t){};
  56:./tmk_core/common/action_tapping.c ****         }
  57:./tmk_core/common/action_tapping.c ****     }
  58:./tmk_core/common/action_tapping.c **** 
  59:./tmk_core/common/action_tapping.c ****     // process waiting_buffer
  60:./tmk_core/common/action_tapping.c ****     if (!IS_NOEVENT(record.event) && waiting_buffer_head != waiting_buffer_tail) {
  61:./tmk_core/common/action_tapping.c ****         debug("---- action_exec: process waiting_buffer -----\n");
  62:./tmk_core/common/action_tapping.c ****     }
  63:./tmk_core/common/action_tapping.c ****     for (; waiting_buffer_tail != waiting_buffer_head; waiting_buffer_tail = (waiting_buffer_tail +
  64:./tmk_core/common/action_tapping.c ****         if (process_tapping(&waiting_buffer[waiting_buffer_tail])) {
  65:./tmk_core/common/action_tapping.c ****             debug("processed: waiting_buffer["); debug_dec(waiting_buffer_tail); debug("] = ");
  66:./tmk_core/common/action_tapping.c ****             debug_record(waiting_buffer[waiting_buffer_tail]); debug("\n\n");
  67:./tmk_core/common/action_tapping.c ****         } else {
  68:./tmk_core/common/action_tapping.c ****             break;
  69:./tmk_core/common/action_tapping.c ****         }
  70:./tmk_core/common/action_tapping.c ****     }
  71:./tmk_core/common/action_tapping.c ****     if (!IS_NOEVENT(record.event)) {
  72:./tmk_core/common/action_tapping.c ****         debug("\n");
  73:./tmk_core/common/action_tapping.c ****     }
  74:./tmk_core/common/action_tapping.c **** }
  75:./tmk_core/common/action_tapping.c **** 
  76:./tmk_core/common/action_tapping.c **** 
  77:./tmk_core/common/action_tapping.c **** /** \brief Tapping
  78:./tmk_core/common/action_tapping.c ****  *
  79:./tmk_core/common/action_tapping.c ****  * Rule: Tap key is typed(pressed and released) within TAPPING_TERM.
  80:./tmk_core/common/action_tapping.c ****  *       (without interfering by typing other key)
  81:./tmk_core/common/action_tapping.c ****  */
  82:./tmk_core/common/action_tapping.c **** /* return true when key event is processed or consumed. */
  83:./tmk_core/common/action_tapping.c **** bool process_tapping(keyrecord_t *keyp)
  84:./tmk_core/common/action_tapping.c **** {
  85:./tmk_core/common/action_tapping.c ****     keyevent_t event = keyp->event;
  86:./tmk_core/common/action_tapping.c **** 
  87:./tmk_core/common/action_tapping.c ****     // if tapping
  88:./tmk_core/common/action_tapping.c ****     if (IS_TAPPING_PRESSED()) {
  89:./tmk_core/common/action_tapping.c ****         if (WITHIN_TAPPING_TERM(event)) {
  90:./tmk_core/common/action_tapping.c ****             if (tapping_key.tap.count == 0) {
  91:./tmk_core/common/action_tapping.c ****                 if (IS_TAPPING_KEY(event.key) && !event.pressed) {
  92:./tmk_core/common/action_tapping.c ****                     // first tap!
  93:./tmk_core/common/action_tapping.c ****                     debug("Tapping: First tap(0->1).\n");
  94:./tmk_core/common/action_tapping.c ****                     tapping_key.tap.count = 1;
  95:./tmk_core/common/action_tapping.c ****                     debug_tapping_key();
  96:./tmk_core/common/action_tapping.c ****                     process_record(&tapping_key);
  97:./tmk_core/common/action_tapping.c **** 
  98:./tmk_core/common/action_tapping.c ****                     // copy tapping state
  99:./tmk_core/common/action_tapping.c ****                     keyp->tap = tapping_key.tap;
 100:./tmk_core/common/action_tapping.c ****                     // enqueue
 101:./tmk_core/common/action_tapping.c ****                     return false;
 102:./tmk_core/common/action_tapping.c ****                 }
 103:./tmk_core/common/action_tapping.c **** #if TAPPING_TERM >= 500 || defined PERMISSIVE_HOLD
 104:./tmk_core/common/action_tapping.c ****                 /* Process a key typed within TAPPING_TERM
 105:./tmk_core/common/action_tapping.c ****                  * This can register the key before settlement of tapping,
 106:./tmk_core/common/action_tapping.c ****                  * useful for long TAPPING_TERM but may prevent fast typing.
 107:./tmk_core/common/action_tapping.c ****                  */
 108:./tmk_core/common/action_tapping.c ****                 else if (IS_RELEASED(event) && waiting_buffer_typed(event)) {
 109:./tmk_core/common/action_tapping.c ****                     debug("Tapping: End. No tap. Interfered by typing key\n");
 110:./tmk_core/common/action_tapping.c ****                     process_record(&tapping_key);
 111:./tmk_core/common/action_tapping.c ****                     tapping_key = (keyrecord_t){};
 112:./tmk_core/common/action_tapping.c ****                     debug_tapping_key();
 113:./tmk_core/common/action_tapping.c ****                     // enqueue
 114:./tmk_core/common/action_tapping.c ****                     return false;
 115:./tmk_core/common/action_tapping.c ****                 }
 116:./tmk_core/common/action_tapping.c **** #endif
 117:./tmk_core/common/action_tapping.c ****                 /* Process release event of a key pressed before tapping starts
 118:./tmk_core/common/action_tapping.c ****                  * Without this unexpected repeating will occur with having fast repeating setting
 119:./tmk_core/common/action_tapping.c ****                  * https://github.com/tmk/tmk_keyboard/issues/60
 120:./tmk_core/common/action_tapping.c ****                  */
 121:./tmk_core/common/action_tapping.c ****                 else if (IS_RELEASED(event) && !waiting_buffer_typed(event)) {
 122:./tmk_core/common/action_tapping.c ****                     // Modifier should be retained till end of this tapping.
 123:./tmk_core/common/action_tapping.c ****                     action_t action = layer_switch_get_action(event.key);
 124:./tmk_core/common/action_tapping.c ****                     switch (action.kind.id) {
 125:./tmk_core/common/action_tapping.c ****                         case ACT_LMODS:
 126:./tmk_core/common/action_tapping.c ****                         case ACT_RMODS:
 127:./tmk_core/common/action_tapping.c ****                             if (action.key.mods && !action.key.code) return false;
 128:./tmk_core/common/action_tapping.c ****                             if (IS_MOD(action.key.code)) return false;
 129:./tmk_core/common/action_tapping.c ****                             break;
 130:./tmk_core/common/action_tapping.c ****                         case ACT_LMODS_TAP:
 131:./tmk_core/common/action_tapping.c ****                         case ACT_RMODS_TAP:
 132:./tmk_core/common/action_tapping.c ****                             if (action.key.mods && keyp->tap.count == 0) return false;
 133:./tmk_core/common/action_tapping.c ****                             if (IS_MOD(action.key.code)) return false;
 134:./tmk_core/common/action_tapping.c ****                             break;
 135:./tmk_core/common/action_tapping.c ****                     }
 136:./tmk_core/common/action_tapping.c ****                     // Release of key should be process immediately.
 137:./tmk_core/common/action_tapping.c ****                     debug("Tapping: release event of a key pressed before tapping\n");
 138:./tmk_core/common/action_tapping.c ****                     process_record(keyp);
 139:./tmk_core/common/action_tapping.c ****                     return true;
 140:./tmk_core/common/action_tapping.c ****                 }
 141:./tmk_core/common/action_tapping.c ****                 else {
 142:./tmk_core/common/action_tapping.c ****                     // set interrupted flag when other key preesed during tapping
 143:./tmk_core/common/action_tapping.c ****                     if (event.pressed) {
 144:./tmk_core/common/action_tapping.c ****                         tapping_key.tap.interrupted = true;
 145:./tmk_core/common/action_tapping.c ****                     }
 146:./tmk_core/common/action_tapping.c ****                     // enqueue
 147:./tmk_core/common/action_tapping.c ****                     return false;
 148:./tmk_core/common/action_tapping.c ****                 }
 149:./tmk_core/common/action_tapping.c ****             }
 150:./tmk_core/common/action_tapping.c ****             // tap_count > 0
 151:./tmk_core/common/action_tapping.c ****             else {
 152:./tmk_core/common/action_tapping.c ****                 if (IS_TAPPING_KEY(event.key) && !event.pressed) {
 153:./tmk_core/common/action_tapping.c ****                     debug("Tapping: Tap release("); debug_dec(tapping_key.tap.count); debug(")\n");
 154:./tmk_core/common/action_tapping.c ****                     keyp->tap = tapping_key.tap;
 155:./tmk_core/common/action_tapping.c ****                     process_record(keyp);
 156:./tmk_core/common/action_tapping.c ****                     tapping_key = *keyp;
 157:./tmk_core/common/action_tapping.c ****                     debug_tapping_key();
 158:./tmk_core/common/action_tapping.c ****                     return true;
 159:./tmk_core/common/action_tapping.c ****                 }
 160:./tmk_core/common/action_tapping.c ****                 else if (is_tap_key(event.key) && event.pressed) {
 161:./tmk_core/common/action_tapping.c ****                     if (tapping_key.tap.count > 1) {
 162:./tmk_core/common/action_tapping.c ****                         debug("Tapping: Start new tap with releasing last tap(>1).\n");
 163:./tmk_core/common/action_tapping.c ****                         // unregister key
 164:./tmk_core/common/action_tapping.c ****                         process_record(&(keyrecord_t){
 165:./tmk_core/common/action_tapping.c ****                                 .tap = tapping_key.tap,
 166:./tmk_core/common/action_tapping.c ****                                 .event.key = tapping_key.event.key,
 167:./tmk_core/common/action_tapping.c ****                                 .event.time = event.time,
 168:./tmk_core/common/action_tapping.c ****                                 .event.pressed = false
 169:./tmk_core/common/action_tapping.c ****                         });
 170:./tmk_core/common/action_tapping.c ****                     } else {
 171:./tmk_core/common/action_tapping.c ****                         debug("Tapping: Start while last tap(1).\n");
 172:./tmk_core/common/action_tapping.c ****                     }
 173:./tmk_core/common/action_tapping.c ****                     tapping_key = *keyp;
 174:./tmk_core/common/action_tapping.c ****                     waiting_buffer_scan_tap();
 175:./tmk_core/common/action_tapping.c ****                     debug_tapping_key();
 176:./tmk_core/common/action_tapping.c ****                     return true;
 177:./tmk_core/common/action_tapping.c ****                 }
 178:./tmk_core/common/action_tapping.c ****                 else {
 179:./tmk_core/common/action_tapping.c ****                     if (!IS_NOEVENT(event)) {
 180:./tmk_core/common/action_tapping.c ****                         debug("Tapping: key event while last tap(>0).\n");
 181:./tmk_core/common/action_tapping.c ****                     }
 182:./tmk_core/common/action_tapping.c ****                     process_record(keyp);
 183:./tmk_core/common/action_tapping.c ****                     return true;
 184:./tmk_core/common/action_tapping.c ****                 }
 185:./tmk_core/common/action_tapping.c ****             }
 186:./tmk_core/common/action_tapping.c ****         }
 187:./tmk_core/common/action_tapping.c ****         // after TAPPING_TERM
 188:./tmk_core/common/action_tapping.c ****         else {
 189:./tmk_core/common/action_tapping.c ****             if (tapping_key.tap.count == 0) {
 190:./tmk_core/common/action_tapping.c ****                 debug("Tapping: End. Timeout. Not tap(0): ");
 191:./tmk_core/common/action_tapping.c ****                 debug_event(event); debug("\n");
 192:./tmk_core/common/action_tapping.c ****                 process_record(&tapping_key);
 193:./tmk_core/common/action_tapping.c ****                 tapping_key = (keyrecord_t){};
 194:./tmk_core/common/action_tapping.c ****                 debug_tapping_key();
 195:./tmk_core/common/action_tapping.c ****                 return false;
 196:./tmk_core/common/action_tapping.c ****             }  else {
 197:./tmk_core/common/action_tapping.c ****                 if (IS_TAPPING_KEY(event.key) && !event.pressed) {
 198:./tmk_core/common/action_tapping.c ****                     debug("Tapping: End. last timeout tap release(>0).");
 199:./tmk_core/common/action_tapping.c ****                     keyp->tap = tapping_key.tap;
 200:./tmk_core/common/action_tapping.c ****                     process_record(keyp);
 201:./tmk_core/common/action_tapping.c ****                     tapping_key = (keyrecord_t){};
 202:./tmk_core/common/action_tapping.c ****                     return true;
 203:./tmk_core/common/action_tapping.c ****                 }
 204:./tmk_core/common/action_tapping.c ****                 else if (is_tap_key(event.key) && event.pressed) {
 205:./tmk_core/common/action_tapping.c ****                     if (tapping_key.tap.count > 1) {
 206:./tmk_core/common/action_tapping.c ****                         debug("Tapping: Start new tap with releasing last timeout tap(>1).\n");
 207:./tmk_core/common/action_tapping.c ****                         // unregister key
 208:./tmk_core/common/action_tapping.c ****                         process_record(&(keyrecord_t){
 209:./tmk_core/common/action_tapping.c ****                                 .tap = tapping_key.tap,
 210:./tmk_core/common/action_tapping.c ****                                 .event.key = tapping_key.event.key,
 211:./tmk_core/common/action_tapping.c ****                                 .event.time = event.time,
 212:./tmk_core/common/action_tapping.c ****                                 .event.pressed = false
 213:./tmk_core/common/action_tapping.c ****                         });
 214:./tmk_core/common/action_tapping.c ****                     } else {
 215:./tmk_core/common/action_tapping.c ****                         debug("Tapping: Start while last timeout tap(1).\n");
 216:./tmk_core/common/action_tapping.c ****                     }
 217:./tmk_core/common/action_tapping.c ****                     tapping_key = *keyp;
 218:./tmk_core/common/action_tapping.c ****                     waiting_buffer_scan_tap();
 219:./tmk_core/common/action_tapping.c ****                     debug_tapping_key();
 220:./tmk_core/common/action_tapping.c ****                     return true;
 221:./tmk_core/common/action_tapping.c ****                 }
 222:./tmk_core/common/action_tapping.c ****                 else {
 223:./tmk_core/common/action_tapping.c ****                     if (!IS_NOEVENT(event)) {
 224:./tmk_core/common/action_tapping.c ****                         debug("Tapping: key event while last timeout tap(>0).\n");
 225:./tmk_core/common/action_tapping.c ****                     }
 226:./tmk_core/common/action_tapping.c ****                     process_record(keyp);
 227:./tmk_core/common/action_tapping.c ****                     return true;
 228:./tmk_core/common/action_tapping.c ****                 }
 229:./tmk_core/common/action_tapping.c ****             }
 230:./tmk_core/common/action_tapping.c ****         }
 231:./tmk_core/common/action_tapping.c ****     } else if (IS_TAPPING_RELEASED()) {
 232:./tmk_core/common/action_tapping.c ****         if (WITHIN_TAPPING_TERM(event)) {
 233:./tmk_core/common/action_tapping.c ****             if (event.pressed) {
 234:./tmk_core/common/action_tapping.c ****                 if (IS_TAPPING_KEY(event.key)) {
 235:./tmk_core/common/action_tapping.c **** #ifndef TAPPING_FORCE_HOLD
 236:./tmk_core/common/action_tapping.c ****                     if (!tapping_key.tap.interrupted && tapping_key.tap.count > 0) {
 237:./tmk_core/common/action_tapping.c ****                         // sequential tap.
 238:./tmk_core/common/action_tapping.c ****                         keyp->tap = tapping_key.tap;
 239:./tmk_core/common/action_tapping.c ****                         if (keyp->tap.count < 15) keyp->tap.count += 1;
 240:./tmk_core/common/action_tapping.c ****                         debug("Tapping: Tap press("); debug_dec(keyp->tap.count); debug(")\n");
 241:./tmk_core/common/action_tapping.c ****                         process_record(keyp);
 242:./tmk_core/common/action_tapping.c ****                         tapping_key = *keyp;
 243:./tmk_core/common/action_tapping.c ****                         debug_tapping_key();
 244:./tmk_core/common/action_tapping.c ****                         return true;
 245:./tmk_core/common/action_tapping.c ****                     }
 246:./tmk_core/common/action_tapping.c **** #endif
 247:./tmk_core/common/action_tapping.c ****                     // FIX: start new tap again
 248:./tmk_core/common/action_tapping.c ****                     tapping_key = *keyp;
 249:./tmk_core/common/action_tapping.c ****                     return true;
 250:./tmk_core/common/action_tapping.c ****                 } else if (is_tap_key(event.key)) {
 251:./tmk_core/common/action_tapping.c ****                     // Sequential tap can be interfered with other tap key.
 252:./tmk_core/common/action_tapping.c ****                     debug("Tapping: Start with interfering other tap.\n");
 253:./tmk_core/common/action_tapping.c ****                     tapping_key = *keyp;
 254:./tmk_core/common/action_tapping.c ****                     waiting_buffer_scan_tap();
 255:./tmk_core/common/action_tapping.c ****                     debug_tapping_key();
 256:./tmk_core/common/action_tapping.c ****                     return true;
 257:./tmk_core/common/action_tapping.c ****                 } else {
 258:./tmk_core/common/action_tapping.c ****                     // should none in buffer
 259:./tmk_core/common/action_tapping.c ****                     // FIX: interrupted when other key is pressed
 260:./tmk_core/common/action_tapping.c ****                     tapping_key.tap.interrupted = true;
 261:./tmk_core/common/action_tapping.c ****                     process_record(keyp);
 262:./tmk_core/common/action_tapping.c ****                     return true;
 263:./tmk_core/common/action_tapping.c ****                 }
 264:./tmk_core/common/action_tapping.c ****             } else {
 265:./tmk_core/common/action_tapping.c ****                 if (!IS_NOEVENT(event)) debug("Tapping: other key just after tap.\n");
 266:./tmk_core/common/action_tapping.c ****                 process_record(keyp);
 267:./tmk_core/common/action_tapping.c ****                 return true;
 268:./tmk_core/common/action_tapping.c ****             }
 269:./tmk_core/common/action_tapping.c ****         } else {
 270:./tmk_core/common/action_tapping.c ****             // FIX: process_action here?
 271:./tmk_core/common/action_tapping.c ****             // timeout. no sequential tap.
 272:./tmk_core/common/action_tapping.c ****             debug("Tapping: End(Timeout after releasing last tap): ");
 273:./tmk_core/common/action_tapping.c ****             debug_event(event); debug("\n");
 274:./tmk_core/common/action_tapping.c ****             tapping_key = (keyrecord_t){};
 275:./tmk_core/common/action_tapping.c ****             debug_tapping_key();
 276:./tmk_core/common/action_tapping.c ****             return false;
 277:./tmk_core/common/action_tapping.c ****         }
 278:./tmk_core/common/action_tapping.c ****     }
 279:./tmk_core/common/action_tapping.c ****     // not tapping state
 280:./tmk_core/common/action_tapping.c ****     else {
 281:./tmk_core/common/action_tapping.c ****         if (event.pressed && is_tap_key(event.key)) {
 282:./tmk_core/common/action_tapping.c ****             debug("Tapping: Start(Press tap key).\n");
 283:./tmk_core/common/action_tapping.c ****             tapping_key = *keyp;
 284:./tmk_core/common/action_tapping.c ****             process_record_tap_hint(&tapping_key);
 285:./tmk_core/common/action_tapping.c ****             waiting_buffer_scan_tap();
 286:./tmk_core/common/action_tapping.c ****             debug_tapping_key();
 287:./tmk_core/common/action_tapping.c ****             return true;
 288:./tmk_core/common/action_tapping.c ****         } else {
 289:./tmk_core/common/action_tapping.c ****             process_record(keyp);
 290:./tmk_core/common/action_tapping.c ****             return true;
 291:./tmk_core/common/action_tapping.c ****         }
 292:./tmk_core/common/action_tapping.c ****     }
 293:./tmk_core/common/action_tapping.c **** }
 294:./tmk_core/common/action_tapping.c **** 
 295:./tmk_core/common/action_tapping.c **** 
 296:./tmk_core/common/action_tapping.c **** /** \brief Waiting buffer enq
 297:./tmk_core/common/action_tapping.c ****  *
 298:./tmk_core/common/action_tapping.c ****  * FIXME: Needs docs
 299:./tmk_core/common/action_tapping.c ****  */
 300:./tmk_core/common/action_tapping.c **** bool waiting_buffer_enq(keyrecord_t record)
 301:./tmk_core/common/action_tapping.c **** {
 302:./tmk_core/common/action_tapping.c ****     if (IS_NOEVENT(record.event)) {
 303:./tmk_core/common/action_tapping.c ****         return true;
 304:./tmk_core/common/action_tapping.c ****     }
 305:./tmk_core/common/action_tapping.c **** 
 306:./tmk_core/common/action_tapping.c ****     if ((waiting_buffer_head + 1) % WAITING_BUFFER_SIZE == waiting_buffer_tail) {
 307:./tmk_core/common/action_tapping.c ****         debug("waiting_buffer_enq: Over flow.\n");
 308:./tmk_core/common/action_tapping.c ****         return false;
 309:./tmk_core/common/action_tapping.c ****     }
 310:./tmk_core/common/action_tapping.c **** 
 311:./tmk_core/common/action_tapping.c ****     waiting_buffer[waiting_buffer_head] = record;
 312:./tmk_core/common/action_tapping.c ****     waiting_buffer_head = (waiting_buffer_head + 1) % WAITING_BUFFER_SIZE;
 313:./tmk_core/common/action_tapping.c **** 
 314:./tmk_core/common/action_tapping.c ****     debug("waiting_buffer_enq: "); debug_waiting_buffer();
 315:./tmk_core/common/action_tapping.c ****     return true;
 316:./tmk_core/common/action_tapping.c **** }
 317:./tmk_core/common/action_tapping.c **** 
 318:./tmk_core/common/action_tapping.c **** /** \brief Waiting buffer clear
 319:./tmk_core/common/action_tapping.c ****  *
 320:./tmk_core/common/action_tapping.c ****  * FIXME: Needs docs
 321:./tmk_core/common/action_tapping.c ****  */
 322:./tmk_core/common/action_tapping.c **** void waiting_buffer_clear(void)
 323:./tmk_core/common/action_tapping.c **** {
 324:./tmk_core/common/action_tapping.c ****     waiting_buffer_head = 0;
 325:./tmk_core/common/action_tapping.c ****     waiting_buffer_tail = 0;
 326:./tmk_core/common/action_tapping.c **** }
 327:./tmk_core/common/action_tapping.c **** 
 328:./tmk_core/common/action_tapping.c **** /** \brief Waiting buffer typed
 329:./tmk_core/common/action_tapping.c ****  *
 330:./tmk_core/common/action_tapping.c ****  * FIXME: Needs docs
 331:./tmk_core/common/action_tapping.c ****  */
 332:./tmk_core/common/action_tapping.c **** bool waiting_buffer_typed(keyevent_t event)
 333:./tmk_core/common/action_tapping.c **** {
 334:./tmk_core/common/action_tapping.c ****     for (uint8_t i = waiting_buffer_tail; i != waiting_buffer_head; i = (i + 1) % WAITING_BUFFER_SI
 335:./tmk_core/common/action_tapping.c ****         if (KEYEQ(event.key, waiting_buffer[i].event.key) && event.pressed !=  waiting_buffer[i].ev
 336:./tmk_core/common/action_tapping.c ****             return true;
 337:./tmk_core/common/action_tapping.c ****         }
 338:./tmk_core/common/action_tapping.c ****     }
 339:./tmk_core/common/action_tapping.c ****     return false;
 340:./tmk_core/common/action_tapping.c **** }
 341:./tmk_core/common/action_tapping.c **** 
 342:./tmk_core/common/action_tapping.c **** /** \brief Waiting buffer has anykey pressed
 343:./tmk_core/common/action_tapping.c ****  *
 344:./tmk_core/common/action_tapping.c ****  * FIXME: Needs docs
 345:./tmk_core/common/action_tapping.c ****  */
 346:./tmk_core/common/action_tapping.c **** __attribute__((unused))
 347:./tmk_core/common/action_tapping.c **** bool waiting_buffer_has_anykey_pressed(void)
 348:./tmk_core/common/action_tapping.c **** {
 349:./tmk_core/common/action_tapping.c ****     for (uint8_t i = waiting_buffer_tail; i != waiting_buffer_head; i = (i + 1) % WAITING_BUFFER_SI
 350:./tmk_core/common/action_tapping.c ****         if (waiting_buffer[i].event.pressed) return true;
 351:./tmk_core/common/action_tapping.c ****     }
 352:./tmk_core/common/action_tapping.c ****     return false;
 353:./tmk_core/common/action_tapping.c **** }
 354:./tmk_core/common/action_tapping.c **** 
 355:./tmk_core/common/action_tapping.c **** /** \brief Scan buffer for tapping
 356:./tmk_core/common/action_tapping.c ****  *
 357:./tmk_core/common/action_tapping.c ****  * FIXME: Needs docs
 358:./tmk_core/common/action_tapping.c ****  */
 359:./tmk_core/common/action_tapping.c **** void waiting_buffer_scan_tap(void)
 360:./tmk_core/common/action_tapping.c **** {
 361:./tmk_core/common/action_tapping.c ****     // tapping already is settled
 362:./tmk_core/common/action_tapping.c ****     if (tapping_key.tap.count > 0) return;
 363:./tmk_core/common/action_tapping.c ****     // invalid state: tapping_key released && tap.count == 0
 364:./tmk_core/common/action_tapping.c ****     if (!tapping_key.event.pressed) return;
 365:./tmk_core/common/action_tapping.c **** 
 366:./tmk_core/common/action_tapping.c ****     for (uint8_t i = waiting_buffer_tail; i != waiting_buffer_head; i = (i + 1) % WAITING_BUFFER_SI
 367:./tmk_core/common/action_tapping.c ****         if (IS_TAPPING_KEY(waiting_buffer[i].event.key) &&
 368:./tmk_core/common/action_tapping.c ****                 !waiting_buffer[i].event.pressed &&
 369:./tmk_core/common/action_tapping.c ****                 WITHIN_TAPPING_TERM(waiting_buffer[i].event)) {
 370:./tmk_core/common/action_tapping.c ****             tapping_key.tap.count = 1;
 371:./tmk_core/common/action_tapping.c ****             waiting_buffer[i].tap.count = 1;
 372:./tmk_core/common/action_tapping.c ****             process_record(&tapping_key);
 373:./tmk_core/common/action_tapping.c **** 
 374:./tmk_core/common/action_tapping.c ****             debug("waiting_buffer_scan_tap: found at ["); debug_dec(i); debug("]\n");
 375:./tmk_core/common/action_tapping.c ****             debug_waiting_buffer();
 376:./tmk_core/common/action_tapping.c ****             return;
 377:./tmk_core/common/action_tapping.c ****         }
 378:./tmk_core/common/action_tapping.c ****     }
 379:./tmk_core/common/action_tapping.c **** }
 380:./tmk_core/common/action_tapping.c **** 
 381:./tmk_core/common/action_tapping.c **** 
 382:./tmk_core/common/action_tapping.c **** /** \brief Tapping key debug print
 383:./tmk_core/common/action_tapping.c ****  *
 384:./tmk_core/common/action_tapping.c ****  * FIXME: Needs docs
 385:./tmk_core/common/action_tapping.c ****  */
 386:./tmk_core/common/action_tapping.c **** static void debug_tapping_key(void)
 387:./tmk_core/common/action_tapping.c **** {
 388:./tmk_core/common/action_tapping.c ****     debug("TAPPING_KEY="); debug_record(tapping_key); debug("\n");
 389:./tmk_core/common/action_tapping.c **** }
 390:./tmk_core/common/action_tapping.c **** 
 391:./tmk_core/common/action_tapping.c **** /** \brief Waiting buffer debug print
 392:./tmk_core/common/action_tapping.c ****  *
 393:./tmk_core/common/action_tapping.c ****  * FIXME: Needs docs
 394:./tmk_core/common/action_tapping.c ****  */
 395:./tmk_core/common/action_tapping.c **** static void debug_waiting_buffer(void)
 396:./tmk_core/common/action_tapping.c **** {
  15               		.loc 1 396 0
  16               		.cfi_startproc
  17 0000 1F93      		push r17
  18               	.LCFI0:
  19               		.cfi_def_cfa_offset 3
  20               		.cfi_offset 17, -2
  21 0002 CF93      		push r28
  22               	.LCFI1:
  23               		.cfi_def_cfa_offset 4
  24               		.cfi_offset 28, -3
  25 0004 DF93      		push r29
  26               	.LCFI2:
  27               		.cfi_def_cfa_offset 5
  28               		.cfi_offset 29, -4
  29               	/* prologue: function */
  30               	/* frame size = 0 */
  31               	/* stack size = 3 */
  32               	.L__stack_usage = 3
  33               	.LBB3:
 397:./tmk_core/common/action_tapping.c ****     debug("{ ");
 398:./tmk_core/common/action_tapping.c ****     for (uint8_t i = waiting_buffer_tail; i != waiting_buffer_head; i = (i + 1) % WAITING_BUFFER_SI
  34               		.loc 1 398 0
  35 0006 C091 0000 		lds r28,waiting_buffer_tail
  36               	.LVL0:
 399:./tmk_core/common/action_tapping.c ****         debug("["); debug_dec(i); debug("]="); debug_record(waiting_buffer[i]); debug(" ");
  37               		.loc 1 399 0
  38 000a 16E0      		ldi r17,lo8(6)
  39               	.LVL1:
  40               	.L2:
 398:./tmk_core/common/action_tapping.c ****         debug("["); debug_dec(i); debug("]="); debug_record(waiting_buffer[i]); debug(" ");
  41               		.loc 1 398 0 discriminator 1
  42 000c 8091 0000 		lds r24,waiting_buffer_head
  43 0010 C817      		cp r28,r24
  44 0012 01F0      		breq .L5
  45               		.loc 1 399 0 discriminator 3
  46 0014 D0E0      		ldi r29,0
  47 0016 1C9F      		mul r17,r28
  48 0018 F001      		movw r30,r0
  49 001a 1D9F      		mul r17,r29
  50 001c F00D      		add r31,r0
  51 001e 1124      		clr __zero_reg__
  52 0020 E050      		subi r30,lo8(-(waiting_buffer))
  53 0022 F040      		sbci r31,hi8(-(waiting_buffer))
  54 0024 4081      		ld r20,Z
  55 0026 5181      		ldd r21,Z+1
  56 0028 6281      		ldd r22,Z+2
  57 002a 7381      		ldd r23,Z+3
  58 002c 8481      		ldd r24,Z+4
  59 002e 9581      		ldd r25,Z+5
  60 0030 0E94 0000 		call debug_record
  61               	.LVL2:
 398:./tmk_core/common/action_tapping.c ****         debug("["); debug_dec(i); debug("]="); debug_record(waiting_buffer[i]); debug(" ");
  62               		.loc 1 398 0 discriminator 3
  63 0034 2196      		adiw r28,1
  64               	.LVL3:
  65 0036 C770      		andi r28,lo8(7)
  66 0038 00C0      		rjmp .L2
  67               	.LVL4:
  68               	.L5:
  69               	/* epilogue start */
  70               	.LBE3:
 400:./tmk_core/common/action_tapping.c ****     }
 401:./tmk_core/common/action_tapping.c ****     debug("}\n");
 402:./tmk_core/common/action_tapping.c **** }
  71               		.loc 1 402 0
  72 003a DF91      		pop r29
  73 003c CF91      		pop r28
  74               	.LVL5:
  75 003e 1F91      		pop r17
  76 0040 0895      		ret
  77               		.cfi_endproc
  78               	.LFE12:
  80               		.section	.text.debug_tapping_key,"ax",@progbits
  82               	debug_tapping_key:
  83               	.LFB11:
 387:./tmk_core/common/action_tapping.c ****     debug("TAPPING_KEY="); debug_record(tapping_key); debug("\n");
  84               		.loc 1 387 0
  85               		.cfi_startproc
  86               	/* prologue: function */
  87               	/* frame size = 0 */
  88               	/* stack size = 0 */
  89               	.L__stack_usage = 0
 388:./tmk_core/common/action_tapping.c **** }
  90               		.loc 1 388 0
  91 0000 4091 0000 		lds r20,tapping_key
  92 0004 5091 0000 		lds r21,tapping_key+1
  93 0008 6091 0000 		lds r22,tapping_key+2
  94 000c 7091 0000 		lds r23,tapping_key+3
  95 0010 8091 0000 		lds r24,tapping_key+4
  96 0014 9091 0000 		lds r25,tapping_key+5
  97 0018 0C94 0000 		jmp debug_record
  98               	.LVL6:
  99               		.cfi_endproc
 100               	.LFE11:
 102               		.section	.text.waiting_buffer_typed.isra.1,"ax",@progbits
 104               	waiting_buffer_typed.isra.1:
 105               	.LFB14:
 332:./tmk_core/common/action_tapping.c **** {
 106               		.loc 1 332 0
 107               		.cfi_startproc
 108               	/* prologue: function */
 109               	/* frame size = 0 */
 110               	/* stack size = 0 */
 111               	.L__stack_usage = 0
 112               	.LBB4:
 334:./tmk_core/common/action_tapping.c ****         if (KEYEQ(event.key, waiting_buffer[i].event.key) && event.pressed !=  waiting_buffer[i].ev
 113               		.loc 1 334 0
 114 0000 2091 0000 		lds r18,waiting_buffer_tail
 115               	.LVL7:
 116 0004 9091 0000 		lds r25,waiting_buffer_head
 335:./tmk_core/common/action_tapping.c ****             return true;
 117               		.loc 1 335 0
 118 0008 56E0      		ldi r21,lo8(6)
 119               	.LVL8:
 120               	.L8:
 334:./tmk_core/common/action_tapping.c ****         if (KEYEQ(event.key, waiting_buffer[i].event.key) && event.pressed !=  waiting_buffer[i].ev
 121               		.loc 1 334 0
 122 000a 2917      		cp r18,r25
 123 000c 01F0      		breq .L13
 335:./tmk_core/common/action_tapping.c ****             return true;
 124               		.loc 1 335 0
 125 000e 30E0      		ldi r19,0
 126 0010 529F      		mul r21,r18
 127 0012 F001      		movw r30,r0
 128 0014 539F      		mul r21,r19
 129 0016 F00D      		add r31,r0
 130 0018 1124      		clr __zero_reg__
 131 001a E050      		subi r30,lo8(-(waiting_buffer))
 132 001c F040      		sbci r31,hi8(-(waiting_buffer))
 133 001e 7181      		ldd r23,Z+1
 134 0020 7613      		cpse r23,r22
 135 0022 00C0      		rjmp .L9
 136 0024 7081      		ld r23,Z
 137 0026 7813      		cpse r23,r24
 138 0028 00C0      		rjmp .L9
 139 002a 7281      		ldd r23,Z+2
 140 002c 7413      		cpse r23,r20
 141 002e 00C0      		rjmp .L12
 142               	.L9:
 334:./tmk_core/common/action_tapping.c ****         if (KEYEQ(event.key, waiting_buffer[i].event.key) && event.pressed !=  waiting_buffer[i].ev
 143               		.loc 1 334 0
 144 0030 2F5F      		subi r18,-1
 145 0032 3F4F      		sbci r19,-1
 146               	.LVL9:
 147 0034 2770      		andi r18,lo8(7)
 148 0036 00C0      		rjmp .L8
 149               	.LVL10:
 150               	.L13:
 151               	.LBE4:
 339:./tmk_core/common/action_tapping.c **** }
 152               		.loc 1 339 0
 153 0038 80E0      		ldi r24,0
 154 003a 0895      		ret
 155               	.L12:
 156               	.LBB5:
 336:./tmk_core/common/action_tapping.c ****         }
 157               		.loc 1 336 0
 158 003c 81E0      		ldi r24,lo8(1)
 159               	.LBE5:
 340:./tmk_core/common/action_tapping.c **** 
 160               		.loc 1 340 0
 161 003e 0895      		ret
 162               		.cfi_endproc
 163               	.LFE14:
 165               		.section	.text.waiting_buffer_scan_tap,"ax",@progbits
 167               	waiting_buffer_scan_tap:
 168               	.LFB10:
 360:./tmk_core/common/action_tapping.c ****     // tapping already is settled
 169               		.loc 1 360 0
 170               		.cfi_startproc
 171 0000 CF93      		push r28
 172               	.LCFI3:
 173               		.cfi_def_cfa_offset 3
 174               		.cfi_offset 28, -2
 175               	/* prologue: function */
 176               	/* frame size = 0 */
 177               	/* stack size = 1 */
 178               	.L__stack_usage = 1
 362:./tmk_core/common/action_tapping.c ****     // invalid state: tapping_key released && tap.count == 0
 179               		.loc 1 362 0
 180 0002 8091 0000 		lds r24,tapping_key+5
 181 0006 8295      		swap r24
 182 0008 8F70      		andi r24,lo8(15)
 183 000a 01F0      		breq .+2
 184 000c 00C0      		rjmp .L14
 364:./tmk_core/common/action_tapping.c **** 
 185               		.loc 1 364 0
 186 000e 8091 0000 		lds r24,tapping_key+2
 187 0012 8823      		tst r24
 188 0014 01F4      		brne .+2
 189 0016 00C0      		rjmp .L14
 190               	.LBB9:
 366:./tmk_core/common/action_tapping.c ****         if (IS_TAPPING_KEY(waiting_buffer[i].event.key) &&
 191               		.loc 1 366 0
 192 0018 8091 0000 		lds r24,waiting_buffer_tail
 193               	.LVL11:
 194 001c B091 0000 		lds r27,waiting_buffer_head
 195 0020 7091 0000 		lds r23,tapping_key
 196 0024 A091 0000 		lds r26,tapping_key+1
 197 0028 4091 0000 		lds r20,tapping_key+3
 198 002c 5091 0000 		lds r21,tapping_key+3+1
 199               	.LBB10:
 200               	.LBB11:
 201               		.file 2 "./tmk_core/common/keyboard.h"
   1:./tmk_core/common/keyboard.h **** /*
   2:./tmk_core/common/keyboard.h **** Copyright 2011,2012,2013 Jun Wako <wakojun@gmail.com>
   3:./tmk_core/common/keyboard.h **** 
   4:./tmk_core/common/keyboard.h **** This program is free software: you can redistribute it and/or modify
   5:./tmk_core/common/keyboard.h **** it under the terms of the GNU General Public License as published by
   6:./tmk_core/common/keyboard.h **** the Free Software Foundation, either version 2 of the License, or
   7:./tmk_core/common/keyboard.h **** (at your option) any later version.
   8:./tmk_core/common/keyboard.h **** 
   9:./tmk_core/common/keyboard.h **** This program is distributed in the hope that it will be useful,
  10:./tmk_core/common/keyboard.h **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:./tmk_core/common/keyboard.h **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:./tmk_core/common/keyboard.h **** GNU General Public License for more details.
  13:./tmk_core/common/keyboard.h **** 
  14:./tmk_core/common/keyboard.h **** You should have received a copy of the GNU General Public License
  15:./tmk_core/common/keyboard.h **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:./tmk_core/common/keyboard.h **** */
  17:./tmk_core/common/keyboard.h **** 
  18:./tmk_core/common/keyboard.h **** #ifndef KEYBOARD_H
  19:./tmk_core/common/keyboard.h **** #define KEYBOARD_H
  20:./tmk_core/common/keyboard.h **** 
  21:./tmk_core/common/keyboard.h **** #include <stdbool.h>
  22:./tmk_core/common/keyboard.h **** #include <stdint.h>
  23:./tmk_core/common/keyboard.h **** 
  24:./tmk_core/common/keyboard.h **** 
  25:./tmk_core/common/keyboard.h **** #ifdef __cplusplus
  26:./tmk_core/common/keyboard.h **** extern "C" {
  27:./tmk_core/common/keyboard.h **** #endif
  28:./tmk_core/common/keyboard.h **** 
  29:./tmk_core/common/keyboard.h **** /* key matrix position */
  30:./tmk_core/common/keyboard.h **** typedef struct {
  31:./tmk_core/common/keyboard.h ****     uint8_t col;
  32:./tmk_core/common/keyboard.h ****     uint8_t row;
  33:./tmk_core/common/keyboard.h **** } keypos_t;
  34:./tmk_core/common/keyboard.h **** 
  35:./tmk_core/common/keyboard.h **** /* key event */
  36:./tmk_core/common/keyboard.h **** typedef struct {
  37:./tmk_core/common/keyboard.h ****     keypos_t key;
  38:./tmk_core/common/keyboard.h ****     bool     pressed;
  39:./tmk_core/common/keyboard.h ****     uint16_t time;
  40:./tmk_core/common/keyboard.h **** } keyevent_t;
  41:./tmk_core/common/keyboard.h **** 
  42:./tmk_core/common/keyboard.h **** /* equivalent test of keypos_t */
  43:./tmk_core/common/keyboard.h **** #define KEYEQ(keya, keyb)       ((keya).row == (keyb).row && (keya).col == (keyb).col)
  44:./tmk_core/common/keyboard.h **** 
  45:./tmk_core/common/keyboard.h **** /* Rules for No Event:
  46:./tmk_core/common/keyboard.h ****  * 1) (time == 0) to handle (keyevent_t){} as empty event
  47:./tmk_core/common/keyboard.h ****  * 2) Matrix(255, 255) to make TICK event available
  48:./tmk_core/common/keyboard.h ****  */
  49:./tmk_core/common/keyboard.h **** static inline bool IS_NOEVENT(keyevent_t event) { return event.time == 0 || (event.key.row == 255 &
 202               		.loc 2 49 0
 203 0030 91E0      		ldi r25,lo8(1)
 204 0032 7F3F      		cpi r23,lo8(-1)
 205 0034 01F0      		breq .L16
 206 0036 90E0      		ldi r25,0
 207               	.L16:
 208 0038 692F      		mov r22,r25
 209               	.LBE11:
 210               	.LBE10:
 367:./tmk_core/common/action_tapping.c ****                 !waiting_buffer[i].event.pressed &&
 211               		.loc 1 367 0
 212 003a C6E0      		ldi r28,lo8(6)
 213               	.LVL12:
 214               	.L17:
 366:./tmk_core/common/action_tapping.c ****         if (IS_TAPPING_KEY(waiting_buffer[i].event.key) &&
 215               		.loc 1 366 0 discriminator 1
 216 003c 8B17      		cp r24,r27
 217 003e 01F4      		brne .+2
 218 0040 00C0      		rjmp .L14
 219               	.LBB13:
 220               	.LBB12:
 221               		.loc 2 49 0
 222 0042 4115      		cp r20,__zero_reg__
 223 0044 5105      		cpc r21,__zero_reg__
 224 0046 01F0      		breq .L25
 225 0048 AF3F      		cpi r26,lo8(-1)
 226 004a 01F0      		breq .L26
 227 004c 20E0      		ldi r18,0
 228 004e 00C0      		rjmp .L18
 229               	.L25:
 230 0050 21E0      		ldi r18,lo8(1)
 231 0052 00C0      		rjmp .L18
 232               	.L26:
 233 0054 262F      		mov r18,r22
 234               	.L18:
 235 0056 90E0      		ldi r25,0
 236               	.LBE12:
 237               	.LBE13:
 367:./tmk_core/common/action_tapping.c ****                 !waiting_buffer[i].event.pressed &&
 238               		.loc 1 367 0
 239 0058 20FD      		sbrc r18,0
 240 005a 00C0      		rjmp .L19
 367:./tmk_core/common/action_tapping.c ****                 !waiting_buffer[i].event.pressed &&
 241               		.loc 1 367 0 is_stmt 0 discriminator 1
 242 005c C89F      		mul r28,r24
 243 005e F001      		movw r30,r0
 244 0060 C99F      		mul r28,r25
 245 0062 F00D      		add r31,r0
 246 0064 1124      		clr __zero_reg__
 247 0066 E050      		subi r30,lo8(-(waiting_buffer))
 248 0068 F040      		sbci r31,hi8(-(waiting_buffer))
 249 006a 2181      		ldd r18,Z+1
 250 006c 2A13      		cpse r18,r26
 251 006e 00C0      		rjmp .L19
 367:./tmk_core/common/action_tapping.c ****                 !waiting_buffer[i].event.pressed &&
 252               		.loc 1 367 0 discriminator 2
 253 0070 2081      		ld r18,Z
 254 0072 2713      		cpse r18,r23
 255 0074 00C0      		rjmp .L19
 367:./tmk_core/common/action_tapping.c ****                 !waiting_buffer[i].event.pressed &&
 256               		.loc 1 367 0 discriminator 3
 257 0076 2281      		ldd r18,Z+2
 258 0078 2111      		cpse r18,__zero_reg__
 259 007a 00C0      		rjmp .L19
 369:./tmk_core/common/action_tapping.c ****             tapping_key.tap.count = 1;
 260               		.loc 1 369 0 is_stmt 1
 261 007c 2381      		ldd r18,Z+3
 262 007e 3481      		ldd r19,Z+4
 263 0080 2417      		cp r18,r20
 264 0082 3507      		cpc r19,r21
 265 0084 00F4      		brsh .L35
 369:./tmk_core/common/action_tapping.c ****             tapping_key.tap.count = 1;
 266               		.loc 1 369 0 is_stmt 0 discriminator 2
 267 0086 2150      		subi r18,1
 268 0088 3109      		sbc r19,__zero_reg__
 269               	.L35:
 270 008a 241B      		sub r18,r20
 271 008c 350B      		sbc r19,r21
 272 008e 283C      		cpi r18,-56
 273 0090 3105      		cpc r19,__zero_reg__
 274 0092 00F4      		brsh .L19
 370:./tmk_core/common/action_tapping.c ****             waiting_buffer[i].tap.count = 1;
 275               		.loc 1 370 0 is_stmt 1
 276 0094 2091 0000 		lds r18,tapping_key+5
 277 0098 2F70      		andi r18,lo8(15)
 278 009a 2061      		ori r18,lo8(16)
 279 009c 2093 0000 		sts tapping_key+5,r18
 371:./tmk_core/common/action_tapping.c ****             process_record(&tapping_key);
 280               		.loc 1 371 0
 281 00a0 26E0      		ldi r18,lo8(6)
 282 00a2 289F      		mul r18,r24
 283 00a4 F001      		movw r30,r0
 284 00a6 299F      		mul r18,r25
 285 00a8 F00D      		add r31,r0
 286 00aa 1124      		clr __zero_reg__
 287 00ac E050      		subi r30,lo8(-(waiting_buffer+5))
 288 00ae F040      		sbci r31,hi8(-(waiting_buffer+5))
 289 00b0 8081      		ld r24,Z
 290               	.LVL13:
 291 00b2 8F70      		andi r24,lo8(15)
 292 00b4 8061      		ori r24,lo8(16)
 293 00b6 8083      		st Z,r24
 372:./tmk_core/common/action_tapping.c **** 
 294               		.loc 1 372 0
 295 00b8 80E0      		ldi r24,lo8(tapping_key)
 296 00ba 90E0      		ldi r25,hi8(tapping_key)
 297 00bc 0E94 0000 		call process_record
 298               	.LVL14:
 299               	/* epilogue start */
 300               	.LBE9:
 379:./tmk_core/common/action_tapping.c **** 
 301               		.loc 1 379 0
 302 00c0 CF91      		pop r28
 303               	.LBB14:
 375:./tmk_core/common/action_tapping.c ****             return;
 304               		.loc 1 375 0
 305 00c2 0C94 0000 		jmp debug_waiting_buffer
 306               	.LVL15:
 307               	.L19:
 366:./tmk_core/common/action_tapping.c ****         if (IS_TAPPING_KEY(waiting_buffer[i].event.key) &&
 308               		.loc 1 366 0 discriminator 2
 309 00c6 0196      		adiw r24,1
 310               	.LVL16:
 311 00c8 8770      		andi r24,lo8(7)
 312 00ca 00C0      		rjmp .L17
 313               	.L14:
 314               	/* epilogue start */
 315               	.LBE14:
 379:./tmk_core/common/action_tapping.c **** 
 316               		.loc 1 379 0
 317 00cc CF91      		pop r28
 318 00ce 0895      		ret
 319               		.cfi_endproc
 320               	.LFE10:
 322               		.section	.text.process_tapping,"ax",@progbits
 324               	process_tapping:
 325               	.LFB5:
  84:./tmk_core/common/action_tapping.c ****     keyevent_t event = keyp->event;
 326               		.loc 1 84 0
 327               		.cfi_startproc
 328               	.LVL17:
 329 0000 9F92      		push r9
 330               	.LCFI4:
 331               		.cfi_def_cfa_offset 3
 332               		.cfi_offset 9, -2
 333 0002 AF92      		push r10
 334               	.LCFI5:
 335               		.cfi_def_cfa_offset 4
 336               		.cfi_offset 10, -3
 337 0004 BF92      		push r11
 338               	.LCFI6:
 339               		.cfi_def_cfa_offset 5
 340               		.cfi_offset 11, -4
 341 0006 CF92      		push r12
 342               	.LCFI7:
 343               		.cfi_def_cfa_offset 6
 344               		.cfi_offset 12, -5
 345 0008 DF92      		push r13
 346               	.LCFI8:
 347               		.cfi_def_cfa_offset 7
 348               		.cfi_offset 13, -6
 349 000a EF92      		push r14
 350               	.LCFI9:
 351               		.cfi_def_cfa_offset 8
 352               		.cfi_offset 14, -7
 353 000c FF92      		push r15
 354               	.LCFI10:
 355               		.cfi_def_cfa_offset 9
 356               		.cfi_offset 15, -8
 357 000e 0F93      		push r16
 358               	.LCFI11:
 359               		.cfi_def_cfa_offset 10
 360               		.cfi_offset 16, -9
 361 0010 1F93      		push r17
 362               	.LCFI12:
 363               		.cfi_def_cfa_offset 11
 364               		.cfi_offset 17, -10
 365 0012 CF93      		push r28
 366               	.LCFI13:
 367               		.cfi_def_cfa_offset 12
 368               		.cfi_offset 28, -11
 369 0014 DF93      		push r29
 370               	.LCFI14:
 371               		.cfi_def_cfa_offset 13
 372               		.cfi_offset 29, -12
 373 0016 CDB7      		in r28,__SP_L__
 374 0018 DEB7      		in r29,__SP_H__
 375               	.LCFI15:
 376               		.cfi_def_cfa_register 28
 377 001a 6197      		sbiw r28,17
 378               	.LCFI16:
 379               		.cfi_def_cfa_offset 30
 380 001c 0FB6      		in __tmp_reg__,__SREG__
 381 001e F894      		cli
 382 0020 DEBF      		out __SP_H__,r29
 383 0022 0FBE      		out __SREG__,__tmp_reg__
 384 0024 CDBF      		out __SP_L__,r28
 385               	/* prologue: function */
 386               	/* frame size = 17 */
 387               	/* stack size = 28 */
 388               	.L__stack_usage = 28
 389 0026 7C01      		movw r14,r24
  85:./tmk_core/common/action_tapping.c **** 
 390               		.loc 1 85 0
 391 0028 85E0      		ldi r24,lo8(5)
 392               	.LVL18:
 393 002a F701      		movw r30,r14
 394 002c DE01      		movw r26,r28
 395 002e 1D96      		adiw r26,13
 396               		0:
 397 0030 0190      		ld r0,Z+
 398 0032 0D92      		st X+,r0
 399 0034 8A95      		dec r24
 400 0036 01F4      		brne 0b
 401 0038 D701      		movw r26,r14
 402 003a DC90      		ld r13,X
 403               	.LVL19:
 404 003c 1196      		adiw r26,1
 405 003e 0C91      		ld r16,X
 406 0040 1197      		sbiw r26,1
 407               	.LVL20:
 408 0042 1296      		adiw r26,2
 409 0044 CC90      		ld r12,X
 410               	.LVL21:
 411 0046 3091 0000 		lds r19,tapping_key
 412 004a 4091 0000 		lds r20,tapping_key+1
 413 004e 8091 0000 		lds r24,tapping_key+3
 414 0052 9091 0000 		lds r25,tapping_key+3+1
 415               	.LBB26:
 416               	.LBB27:
 417               		.loc 2 49 0
 418 0056 0097      		sbiw r24,0
 419 0058 01F0      		breq .L79
 420 005a 4F3F      		cpi r20,lo8(-1)
 421 005c 01F4      		brne .L80
 422 005e 21E0      		ldi r18,lo8(1)
 423 0060 3F3F      		cpi r19,lo8(-1)
 424 0062 01F4      		brne .L80
 425 0064 00C0      		rjmp .L37
 426               	.L79:
 427 0066 21E0      		ldi r18,lo8(1)
 428 0068 00C0      		rjmp .L37
 429               	.L80:
 430 006a 20E0      		ldi r18,0
 431               	.L37:
 432               	.LBE27:
 433               	.LBE26:
  88:./tmk_core/common/action_tapping.c ****         if (WITHIN_TAPPING_TERM(event)) {
 434               		.loc 1 88 0
 435 006c 20FD      		sbrc r18,0
 436 006e 00C0      		rjmp .L39
  85:./tmk_core/common/action_tapping.c **** 
 437               		.loc 1 85 0 discriminator 1
 438 0070 F701      		movw r30,r14
 439 0072 A380      		ldd r10,Z+3
 440 0074 B480      		ldd r11,Z+4
  88:./tmk_core/common/action_tapping.c ****         if (WITHIN_TAPPING_TERM(event)) {
 441               		.loc 1 88 0 discriminator 1
 442 0076 9090 0000 		lds r9,tapping_key+2
 443 007a 9920      		tst r9
 444 007c 01F4      		brne .+2
 445 007e 00C0      		rjmp .L40
 446 0080 2091 0000 		lds r18,tapping_key+5
  89:./tmk_core/common/action_tapping.c ****             if (tapping_key.tap.count == 0) {
 447               		.loc 1 89 0
 448 0084 A816      		cp r10,r24
 449 0086 B906      		cpc r11,r25
 450 0088 00F0      		brlo .L41
  89:./tmk_core/common/action_tapping.c ****             if (tapping_key.tap.count == 0) {
 451               		.loc 1 89 0 is_stmt 0 discriminator 1
 452 008a B501      		movw r22,r10
 453 008c 681B      		sub r22,r24
 454 008e 790B      		sbc r23,r25
 455 0090 CB01      		movw r24,r22
 456 0092 00C0      		rjmp .L157
 457               	.L41:
  89:./tmk_core/common/action_tapping.c ****             if (tapping_key.tap.count == 0) {
 458               		.loc 1 89 0 discriminator 2
 459 0094 8095      		com r24
 460 0096 9095      		com r25
 461 0098 8A0D      		add r24,r10
 462 009a 9B1D      		adc r25,r11
 463               	.L157:
 464 009c 11E0      		ldi r17,lo8(1)
 465 009e 883C      		cpi r24,-56
 466 00a0 9105      		cpc r25,__zero_reg__
 467 00a2 00F0      		brlo .L107
 468 00a4 10E0      		ldi r17,0
 189:./tmk_core/common/action_tapping.c ****                 debug("Tapping: End. Timeout. Not tap(0): ");
 469               		.loc 1 189 0 is_stmt 1 discriminator 2
 470 00a6 207F      		andi r18,lo8(-16)
 471 00a8 01F0      		breq .+2
 472 00aa 00C0      		rjmp .L67
 191:./tmk_core/common/action_tapping.c ****                 process_record(&tapping_key);
 473               		.loc 1 191 0
 474 00ac 7A2D      		mov r23,r10
 475 00ae B98A      		std Y+17,r11
 476 00b0 A88A      		std Y+16,r10
 477 00b2 4D2D      		mov r20,r13
 478 00b4 502F      		mov r21,r16
 479 00b6 6C2D      		mov r22,r12
 480 00b8 8989      		ldd r24,Y+17
 481 00ba 0E94 0000 		call debug_event
 482               	.LVL22:
 192:./tmk_core/common/action_tapping.c ****                 tapping_key = (keyrecord_t){};
 483               		.loc 1 192 0
 484 00be 80E0      		ldi r24,lo8(tapping_key)
 485 00c0 90E0      		ldi r25,hi8(tapping_key)
 486 00c2 0E94 0000 		call process_record
 487               	.LVL23:
 488 00c6 00C0      		rjmp .L160
 489               	.LVL24:
 490               	.L107:
  90:./tmk_core/common/action_tapping.c ****                 if (IS_TAPPING_KEY(event.key) && !event.pressed) {
 491               		.loc 1 90 0
 492 00c8 822F      		mov r24,r18
 493 00ca 807F      		andi r24,lo8(-16)
 494 00cc 01F0      		breq .+2
 495 00ce 00C0      		rjmp .L46
  91:./tmk_core/common/action_tapping.c ****                     // first tap!
 496               		.loc 1 91 0 discriminator 1
 497 00d0 0413      		cpse r16,r20
 498 00d2 00C0      		rjmp .L47
  91:./tmk_core/common/action_tapping.c ****                     // first tap!
 499               		.loc 1 91 0 is_stmt 0 discriminator 2
 500 00d4 D312      		cpse r13,r19
 501 00d6 00C0      		rjmp .L47
  91:./tmk_core/common/action_tapping.c ****                     // first tap!
 502               		.loc 1 91 0 discriminator 3
 503 00d8 1C2D      		mov r17,r12
 504 00da C110      		cpse r12,__zero_reg__
 505 00dc 00C0      		rjmp .L47
  94:./tmk_core/common/action_tapping.c ****                     debug_tapping_key();
 506               		.loc 1 94 0 is_stmt 1
 507 00de 2F70      		andi r18,lo8(15)
 508 00e0 2061      		ori r18,lo8(16)
 509 00e2 2093 0000 		sts tapping_key+5,r18
 510               	.LVL25:
  95:./tmk_core/common/action_tapping.c ****                     process_record(&tapping_key);
 511               		.loc 1 95 0
 512 00e6 0E94 0000 		call debug_tapping_key
 513               	.LVL26:
  96:./tmk_core/common/action_tapping.c **** 
 514               		.loc 1 96 0
 515 00ea 80E0      		ldi r24,lo8(tapping_key)
 516 00ec 90E0      		ldi r25,hi8(tapping_key)
 517 00ee 0E94 0000 		call process_record
 518               	.LVL27:
  99:./tmk_core/common/action_tapping.c ****                     // enqueue
 519               		.loc 1 99 0
 520 00f2 8091 0000 		lds r24,tapping_key+5
 521 00f6 D701      		movw r26,r14
 522 00f8 1596      		adiw r26,5
 523 00fa 8C93      		st X,r24
 101:./tmk_core/common/action_tapping.c ****                 }
 524               		.loc 1 101 0
 525 00fc 00C0      		rjmp .L48
 526               	.LVL28:
 527               	.L47:
 528               	.LBB28:
 529               	.LBB29:
 530               	.LBB30:
 531               	.LBB31:
 532               		.loc 2 49 0
 533 00fe A114      		cp r10,__zero_reg__
 534 0100 B104      		cpc r11,__zero_reg__
 535 0102 01F0      		breq .L81
 536 0104 0F3F      		cpi r16,lo8(-1)
 537 0106 01F4      		brne .L82
 538 0108 81E0      		ldi r24,lo8(1)
 539 010a BFEF      		ldi r27,lo8(-1)
 540 010c DB12      		cpse r13,r27
 541 010e 00C0      		rjmp .L82
 542 0110 00C0      		rjmp .L49
 543               	.L81:
 544 0112 81E0      		ldi r24,lo8(1)
 545 0114 00C0      		rjmp .L49
 546               	.L82:
 547 0116 80E0      		ldi r24,0
 548               	.L49:
 549               	.LBE31:
 550               	.LBE30:
  50:./tmk_core/common/keyboard.h **** static inline bool IS_PRESSED(keyevent_t event) { return (!IS_NOEVENT(event) && event.pressed); }
  51:./tmk_core/common/keyboard.h **** static inline bool IS_RELEASED(keyevent_t event) { return (!IS_NOEVENT(event) && !event.pressed); }
 551               		.loc 2 51 0
 552 0118 80FD      		sbrc r24,0
 553 011a 00C0      		rjmp .L83
 554 011c 81E0      		ldi r24,lo8(1)
 555 011e 8C25      		eor r24,r12
 556 0120 00C0      		rjmp .L51
 557               	.L83:
 558 0122 80E0      		ldi r24,0
 559 0124 90E0      		ldi r25,0
 560               	.L51:
 561               	.LBE29:
 562               	.LBE28:
 108:./tmk_core/common/action_tapping.c ****                     debug("Tapping: End. No tap. Interfered by typing key\n");
 563               		.loc 1 108 0
 564 0126 80FF      		sbrs r24,0
 565 0128 00C0      		rjmp .L52
 108:./tmk_core/common/action_tapping.c ****                     debug("Tapping: End. No tap. Interfered by typing key\n");
 566               		.loc 1 108 0 is_stmt 0 discriminator 1
 567 012a 4C2D      		mov r20,r12
 568 012c 602F      		mov r22,r16
 569 012e 8D2D      		mov r24,r13
 570 0130 0E94 0000 		call waiting_buffer_typed.isra.1
 571               	.LVL29:
 572 0134 8823      		tst r24
 573 0136 01F0      		breq .L52
 110:./tmk_core/common/action_tapping.c ****                     tapping_key = (keyrecord_t){};
 574               		.loc 1 110 0 is_stmt 1
 575 0138 80E0      		ldi r24,lo8(tapping_key)
 576 013a 90E0      		ldi r25,hi8(tapping_key)
 577 013c 0E94 0000 		call process_record
 578               	.LVL30:
 111:./tmk_core/common/action_tapping.c ****                     debug_tapping_key();
 579               		.loc 1 111 0
 580 0140 E0E0      		ldi r30,lo8(tapping_key)
 581 0142 F0E0      		ldi r31,hi8(tapping_key)
 582 0144 86E0      		ldi r24,lo8(6)
 583 0146 DF01      		movw r26,r30
 584               		0:
 585 0148 1D92      		st X+,__zero_reg__
 586 014a 8A95      		dec r24
 587 014c 01F4      		brne 0b
 112:./tmk_core/common/action_tapping.c ****                     // enqueue
 588               		.loc 1 112 0
 589 014e 0E94 0000 		call debug_tapping_key
 590               	.LVL31:
 591 0152 00C0      		rjmp .L155
 592               	.L52:
 593               	.LVL32:
 594               	.LBB32:
 595               	.LBB33:
 596               	.LBB34:
 597               	.LBB35:
  49:./tmk_core/common/keyboard.h **** static inline bool IS_PRESSED(keyevent_t event) { return (!IS_NOEVENT(event) && event.pressed); }
 598               		.loc 2 49 0
 599 0154 AB28      		or r10,r11
 600 0156 01F0      		breq .L84
 601 0158 0F3F      		cpi r16,lo8(-1)
 602 015a 01F4      		brne .L85
 603               	.LVL33:
 604 015c 81E0      		ldi r24,lo8(1)
 605 015e BFEF      		ldi r27,lo8(-1)
 606 0160 DB12      		cpse r13,r27
 607 0162 00C0      		rjmp .L85
 608 0164 00C0      		rjmp .L53
 609               	.LVL34:
 610               	.L84:
 611 0166 81E0      		ldi r24,lo8(1)
 612 0168 00C0      		rjmp .L53
 613               	.LVL35:
 614               	.L85:
 615 016a 80E0      		ldi r24,0
 616               	.L53:
 617               	.LBE35:
 618               	.LBE34:
 619               		.loc 2 51 0
 620 016c 80FD      		sbrc r24,0
 621 016e 00C0      		rjmp .L86
 622 0170 81E0      		ldi r24,lo8(1)
 623 0172 8C25      		eor r24,r12
 624 0174 00C0      		rjmp .L55
 625               	.L86:
 626 0176 80E0      		ldi r24,0
 627 0178 90E0      		ldi r25,0
 628               	.L55:
 629               	.LBE33:
 630               	.LBE32:
 121:./tmk_core/common/action_tapping.c ****                     // Modifier should be retained till end of this tapping.
 631               		.loc 1 121 0
 632 017a E82F      		mov r30,r24
 633 017c E170      		andi r30,lo8(1)
 634 017e BE2E      		mov r11,r30
 635 0180 80FF      		sbrs r24,0
 636 0182 00C0      		rjmp .L56
 121:./tmk_core/common/action_tapping.c ****                     // Modifier should be retained till end of this tapping.
 637               		.loc 1 121 0 is_stmt 0 discriminator 1
 638 0184 4C2D      		mov r20,r12
 639 0186 602F      		mov r22,r16
 640 0188 8D2D      		mov r24,r13
 641 018a 0E94 0000 		call waiting_buffer_typed.isra.1
 642               	.LVL36:
 643 018e 182F      		mov r17,r24
 644 0190 8111      		cpse r24,__zero_reg__
 645 0192 00C0      		rjmp .L56
 646               	.LBB36:
 123:./tmk_core/common/action_tapping.c ****                     switch (action.kind.id) {
 647               		.loc 1 123 0 is_stmt 1
 648 0194 DD86      		std Y+13,r13
 649 0196 0E87      		std Y+14,r16
 650 0198 8D85      		ldd r24,Y+13
 651 019a 9E85      		ldd r25,Y+14
 652 019c 0E94 0000 		call layer_switch_get_action
 653               	.LVL37:
 124:./tmk_core/common/action_tapping.c ****                         case ACT_LMODS:
 654               		.loc 1 124 0
 655 01a0 292F      		mov r18,r25
 656 01a2 2295      		swap r18
 657 01a4 2F70      		andi r18,lo8(15)
 658 01a6 2230      		cpi r18,lo8(2)
 659 01a8 00F0      		brlo .L58
 660 01aa 2430      		cpi r18,lo8(4)
 661 01ac 00F4      		brsh .L57
 662 01ae 00C0      		rjmp .L161
 663               	.L58:
 127:./tmk_core/common/action_tapping.c ****                             if (IS_MOD(action.key.code)) return false;
 664               		.loc 1 127 0
 665 01b0 9F70      		andi r25,lo8(15)
 666               	.LVL38:
 667 01b2 01F0      		breq .L62
 127:./tmk_core/common/action_tapping.c ****                             if (IS_MOD(action.key.code)) return false;
 668               		.loc 1 127 0 is_stmt 0 discriminator 1
 669 01b4 8111      		cpse r24,__zero_reg__
 670 01b6 00C0      		rjmp .L62
 671 01b8 00C0      		rjmp .L48
 672               	.LVL39:
 673               	.L161:
 132:./tmk_core/common/action_tapping.c ****                             if (IS_MOD(action.key.code)) return false;
 674               		.loc 1 132 0 is_stmt 1
 675 01ba 9F70      		andi r25,lo8(15)
 676               	.LVL40:
 677 01bc 01F0      		breq .L62
 132:./tmk_core/common/action_tapping.c ****                             if (IS_MOD(action.key.code)) return false;
 678               		.loc 1 132 0 is_stmt 0 discriminator 1
 679 01be D701      		movw r26,r14
 680 01c0 1596      		adiw r26,5
 681 01c2 9C91      		ld r25,X
 682 01c4 907F      		andi r25,lo8(-16)
 683 01c6 01F4      		brne .+2
 684 01c8 00C0      		rjmp .L48
 685               	.L62:
 133:./tmk_core/common/action_tapping.c ****                             break;
 686               		.loc 1 133 0 is_stmt 1
 687 01ca 805E      		subi r24,lo8(-(32))
 688               	.LVL41:
 689 01cc 8830      		cpi r24,lo8(8)
 690 01ce 00F4      		brsh .+2
 691 01d0 00C0      		rjmp .L48
 692               	.LVL42:
 693               	.L57:
 138:./tmk_core/common/action_tapping.c ****                     return true;
 694               		.loc 1 138 0
 695 01d2 C701      		movw r24,r14
 696               	.LVL43:
 697 01d4 0E94 0000 		call process_record
 698               	.LVL44:
 139:./tmk_core/common/action_tapping.c ****                 }
 699               		.loc 1 139 0
 700 01d8 1B2D      		mov r17,r11
 701               	.LVL45:
 702 01da 00C0      		rjmp .L48
 703               	.L56:
 704               	.LBE36:
 143:./tmk_core/common/action_tapping.c ****                         tapping_key.tap.interrupted = true;
 705               		.loc 1 143 0
 706 01dc 1C2D      		mov r17,r12
 707 01de CC20      		tst r12
 708 01e0 01F4      		brne .+2
 709 01e2 00C0      		rjmp .L48
 144:./tmk_core/common/action_tapping.c ****                     }
 710               		.loc 1 144 0
 711 01e4 8091 0000 		lds r24,tapping_key+5
 712 01e8 8160      		ori r24,lo8(1<<0)
 713 01ea 8093 0000 		sts tapping_key+5,r24
 714               	.LVL46:
 715               	.L155:
 147:./tmk_core/common/action_tapping.c ****                 }
 716               		.loc 1 147 0
 717 01ee 10E0      		ldi r17,0
 718 01f0 00C0      		rjmp .L48
 719               	.LVL47:
 720               	.L46:
 152:./tmk_core/common/action_tapping.c ****                     debug("Tapping: Tap release("); debug_dec(tapping_key.tap.count); debug(")\n");
 721               		.loc 1 152 0 discriminator 1
 722 01f2 0413      		cpse r16,r20
 723 01f4 00C0      		rjmp .L63
 152:./tmk_core/common/action_tapping.c ****                     debug("Tapping: Tap release("); debug_dec(tapping_key.tap.count); debug(")\n");
 724               		.loc 1 152 0 is_stmt 0 discriminator 2
 725 01f6 D312      		cpse r13,r19
 726 01f8 00C0      		rjmp .L63
 152:./tmk_core/common/action_tapping.c ****                     debug("Tapping: Tap release("); debug_dec(tapping_key.tap.count); debug(")\n");
 727               		.loc 1 152 0 discriminator 3
 728 01fa C110      		cpse r12,__zero_reg__
 729 01fc 00C0      		rjmp .L63
 154:./tmk_core/common/action_tapping.c ****                     process_record(keyp);
 730               		.loc 1 154 0 is_stmt 1
 731 01fe 8091 0000 		lds r24,tapping_key+5
 732 0202 F701      		movw r30,r14
 733 0204 8583      		std Z+5,r24
 734 0206 00C0      		rjmp .L78
 735               	.L63:
 160:./tmk_core/common/action_tapping.c ****                     if (tapping_key.tap.count > 1) {
 736               		.loc 1 160 0
 737 0208 DD86      		std Y+13,r13
 738 020a 0E87      		std Y+14,r16
 739 020c 8D85      		ldd r24,Y+13
 740 020e 9E85      		ldd r25,Y+14
 741 0210 0E94 0000 		call is_tap_key
 742               	.LVL48:
 743 0214 8823      		tst r24
 744 0216 01F0      		breq .L75
 160:./tmk_core/common/action_tapping.c ****                     if (tapping_key.tap.count > 1) {
 745               		.loc 1 160 0 is_stmt 0 discriminator 1
 746 0218 CC20      		tst r12
 747 021a 01F0      		breq .L75
 161:./tmk_core/common/action_tapping.c ****                         debug("Tapping: Start new tap with releasing last tap(>1).\n");
 748               		.loc 1 161 0 is_stmt 1
 749 021c 2091 0000 		lds r18,tapping_key+5
 750 0220 822F      		mov r24,r18
 751 0222 8295      		swap r24
 752 0224 8F70      		andi r24,lo8(15)
 753 0226 90E0      		ldi r25,0
 754 0228 0297      		sbiw r24,2
 755 022a 04F0      		brlt .L66
 164:./tmk_core/common/action_tapping.c ****                                 .tap = tapping_key.tap,
 756               		.loc 1 164 0
 757 022c 8091 0000 		lds r24,tapping_key
 758 0230 9091 0000 		lds r25,tapping_key+1
 759 0234 9887      		std Y+8,r25
 760 0236 8F83      		std Y+7,r24
 761 0238 1986      		std Y+9,__zero_reg__
 762 023a BB86      		std Y+11,r11
 763 023c AA86      		std Y+10,r10
 764 023e 2C87      		std Y+12,r18
 765 0240 CE01      		movw r24,r28
 766 0242 0796      		adiw r24,7
 767               	.L150:
 768 0244 0E94 0000 		call process_record
 769               	.LVL49:
 770               	.L66:
 173:./tmk_core/common/action_tapping.c ****                     waiting_buffer_scan_tap();
 771               		.loc 1 173 0
 772 0248 86E0      		ldi r24,lo8(6)
 773 024a F701      		movw r30,r14
 774 024c A0E0      		ldi r26,lo8(tapping_key)
 775 024e B0E0      		ldi r27,hi8(tapping_key)
 776               		0:
 777 0250 0190      		ld r0,Z+
 778 0252 0D92      		st X+,r0
 779 0254 8A95      		dec r24
 780 0256 01F4      		brne 0b
 174:./tmk_core/common/action_tapping.c ****                     debug_tapping_key();
 781               		.loc 1 174 0
 782 0258 0E94 0000 		call waiting_buffer_scan_tap
 783               	.LVL50:
 175:./tmk_core/common/action_tapping.c ****                     return true;
 784               		.loc 1 175 0
 785 025c 0E94 0000 		call debug_tapping_key
 786               	.LVL51:
 787 0260 00C0      		rjmp .L154
 788               	.LVL52:
 789               	.L67:
 197:./tmk_core/common/action_tapping.c ****                     debug("Tapping: End. last timeout tap release(>0).");
 790               		.loc 1 197 0 discriminator 1
 791 0262 0417      		cp r16,r20
 792 0264 01F0      		breq .L162
 793               	.L68:
 204:./tmk_core/common/action_tapping.c ****                     if (tapping_key.tap.count > 1) {
 794               		.loc 1 204 0
 795 0266 DD86      		std Y+13,r13
 796 0268 0E87      		std Y+14,r16
 797 026a 8D85      		ldd r24,Y+13
 798 026c 9E85      		ldd r25,Y+14
 799 026e 0E94 0000 		call is_tap_key
 800               	.LVL53:
 801 0272 8111      		cpse r24,__zero_reg__
 802 0274 00C0      		rjmp .L163
 803               	.L75:
 182:./tmk_core/common/action_tapping.c ****                     return true;
 804               		.loc 1 182 0
 805 0276 C701      		movw r24,r14
 806 0278 0E94 0000 		call process_record
 807               	.LVL54:
 808               	.L154:
 183:./tmk_core/common/action_tapping.c ****                 }
 809               		.loc 1 183 0
 810 027c 11E0      		ldi r17,lo8(1)
 811 027e 00C0      		rjmp .L48
 812               	.LVL55:
 813               	.L162:
 197:./tmk_core/common/action_tapping.c ****                     debug("Tapping: End. last timeout tap release(>0).");
 814               		.loc 1 197 0 discriminator 2
 815 0280 D312      		cpse r13,r19
 816 0282 00C0      		rjmp .L68
 197:./tmk_core/common/action_tapping.c ****                     debug("Tapping: End. last timeout tap release(>0).");
 817               		.loc 1 197 0 is_stmt 0 discriminator 3
 818 0284 C110      		cpse r12,__zero_reg__
 819 0286 00C0      		rjmp .L68
 199:./tmk_core/common/action_tapping.c ****                     process_record(keyp);
 820               		.loc 1 199 0 is_stmt 1
 821 0288 8091 0000 		lds r24,tapping_key+5
 822 028c F701      		movw r30,r14
 823 028e 8583      		std Z+5,r24
 200:./tmk_core/common/action_tapping.c ****                     tapping_key = (keyrecord_t){};
 824               		.loc 1 200 0
 825 0290 C701      		movw r24,r14
 826 0292 0E94 0000 		call process_record
 827               	.LVL56:
 201:./tmk_core/common/action_tapping.c ****                     return true;
 828               		.loc 1 201 0
 829 0296 86E0      		ldi r24,lo8(6)
 830 0298 E0E0      		ldi r30,lo8(tapping_key)
 831 029a F0E0      		ldi r31,hi8(tapping_key)
 832 029c DF01      		movw r26,r30
 833               		0:
 834 029e 1D92      		st X+,__zero_reg__
 835 02a0 8A95      		dec r24
 836 02a2 01F4      		brne 0b
 202:./tmk_core/common/action_tapping.c ****                 }
 837               		.loc 1 202 0
 838 02a4 192D      		mov r17,r9
 839 02a6 00C0      		rjmp .L48
 840               	.L163:
 204:./tmk_core/common/action_tapping.c ****                     if (tapping_key.tap.count > 1) {
 841               		.loc 1 204 0 discriminator 1
 842 02a8 CC20      		tst r12
 843 02aa 01F0      		breq .L75
 205:./tmk_core/common/action_tapping.c ****                         debug("Tapping: Start new tap with releasing last timeout tap(>1).\n");
 844               		.loc 1 205 0
 845 02ac 2091 0000 		lds r18,tapping_key+5
 846 02b0 822F      		mov r24,r18
 847 02b2 8295      		swap r24
 848 02b4 8F70      		andi r24,lo8(15)
 849 02b6 90E0      		ldi r25,0
 850 02b8 0297      		sbiw r24,2
 851 02ba 04F0      		brlt .L66
 208:./tmk_core/common/action_tapping.c ****                                 .tap = tapping_key.tap,
 852               		.loc 1 208 0
 853 02bc 8091 0000 		lds r24,tapping_key
 854 02c0 9091 0000 		lds r25,tapping_key+1
 855 02c4 9A83      		std Y+2,r25
 856 02c6 8983      		std Y+1,r24
 857 02c8 1B82      		std Y+3,__zero_reg__
 858 02ca BD82      		std Y+5,r11
 859 02cc AC82      		std Y+4,r10
 860 02ce 2E83      		std Y+6,r18
 861 02d0 CE01      		movw r24,r28
 862 02d2 0196      		adiw r24,1
 863 02d4 00C0      		rjmp .L150
 864               	.LVL57:
 865               	.L40:
 232:./tmk_core/common/action_tapping.c ****             if (event.pressed) {
 866               		.loc 1 232 0 discriminator 1
 867 02d6 A816      		cp r10,r24
 868 02d8 B906      		cpc r11,r25
 869 02da 00F0      		brlo .L70
 870 02dc F501      		movw r30,r10
 871 02de E81B      		sub r30,r24
 872 02e0 F90B      		sbc r31,r25
 873 02e2 CF01      		movw r24,r30
 874 02e4 00C0      		rjmp .L159
 875               	.L70:
 232:./tmk_core/common/action_tapping.c ****             if (event.pressed) {
 876               		.loc 1 232 0 is_stmt 0 discriminator 2
 877 02e6 8095      		com r24
 878 02e8 9095      		com r25
 879 02ea 8A0D      		add r24,r10
 880 02ec 9B1D      		adc r25,r11
 881               	.L159:
 882 02ee 883C      		cpi r24,-56
 883 02f0 9105      		cpc r25,__zero_reg__
 884 02f2 00F0      		brlo .L108
 885 02f4 10E0      		ldi r17,0
 273:./tmk_core/common/action_tapping.c ****             tapping_key = (keyrecord_t){};
 886               		.loc 1 273 0 is_stmt 1 discriminator 2
 887 02f6 7A2D      		mov r23,r10
 888 02f8 B98A      		std Y+17,r11
 889 02fa A88A      		std Y+16,r10
 890 02fc 4D2D      		mov r20,r13
 891 02fe 502F      		mov r21,r16
 892 0300 6C2D      		mov r22,r12
 893 0302 8989      		ldd r24,Y+17
 894 0304 0E94 0000 		call debug_event
 895               	.LVL58:
 896 0308 00C0      		rjmp .L160
 897               	.LVL59:
 898               	.L108:
 233:./tmk_core/common/action_tapping.c ****                 if (IS_TAPPING_KEY(event.key)) {
 899               		.loc 1 233 0
 900 030a 1C2D      		mov r17,r12
 901 030c CC20      		tst r12
 902 030e 01F4      		brne .+2
 903 0310 00C0      		rjmp .L75
 234:./tmk_core/common/action_tapping.c **** #ifndef TAPPING_FORCE_HOLD
 904               		.loc 1 234 0 discriminator 1
 905 0312 0413      		cpse r16,r20
 906 0314 00C0      		rjmp .L76
 234:./tmk_core/common/action_tapping.c **** #ifndef TAPPING_FORCE_HOLD
 907               		.loc 1 234 0 is_stmt 0 discriminator 2
 908 0316 D312      		cpse r13,r19
 909 0318 00C0      		rjmp .L76
 236:./tmk_core/common/action_tapping.c ****                         // sequential tap.
 910               		.loc 1 236 0 is_stmt 1
 911 031a 2091 0000 		lds r18,tapping_key+5
 912 031e 20FD      		sbrc r18,0
 913 0320 00C0      		rjmp .L77
 236:./tmk_core/common/action_tapping.c ****                         // sequential tap.
 914               		.loc 1 236 0 is_stmt 0 discriminator 1
 915 0322 822F      		mov r24,r18
 916 0324 8295      		swap r24
 917 0326 8F70      		andi r24,lo8(15)
 918 0328 482F      		mov r20,r24
 919 032a 50E0      		ldi r21,0
 920 032c 4115      		cp r20,__zero_reg__
 921 032e 5105      		cpc r21,__zero_reg__
 922 0330 01F0      		breq .L77
 238:./tmk_core/common/action_tapping.c ****                         if (keyp->tap.count < 15) keyp->tap.count += 1;
 923               		.loc 1 238 0 is_stmt 1
 924 0332 D701      		movw r26,r14
 925 0334 1596      		adiw r26,5
 926 0336 2C93      		st X,r18
 927 0338 1597      		sbiw r26,5
 239:./tmk_core/common/action_tapping.c ****                         debug("Tapping: Tap press("); debug_dec(keyp->tap.count); debug(")\n");
 928               		.loc 1 239 0
 929 033a 4F30      		cpi r20,15
 930 033c 5105      		cpc r21,__zero_reg__
 931 033e 01F0      		breq .L78
 239:./tmk_core/common/action_tapping.c ****                         debug("Tapping: Tap press("); debug_dec(keyp->tap.count); debug(")\n");
 932               		.loc 1 239 0 is_stmt 0 discriminator 1
 933 0340 8F5F      		subi r24,lo8(-(1))
 934 0342 982F      		mov r25,r24
 935 0344 9295      		swap r25
 936 0346 907F      		andi r25,lo8(-16)
 937 0348 822F      		mov r24,r18
 938 034a 8F70      		andi r24,lo8(15)
 939 034c 892B      		or r24,r25
 940 034e 1596      		adiw r26,5
 941 0350 8C93      		st X,r24
 942               	.L78:
 241:./tmk_core/common/action_tapping.c ****                         tapping_key = *keyp;
 943               		.loc 1 241 0 is_stmt 1
 944 0352 C701      		movw r24,r14
 945 0354 0E94 0000 		call process_record
 946               	.LVL60:
 242:./tmk_core/common/action_tapping.c ****                         debug_tapping_key();
 947               		.loc 1 242 0
 948 0358 86E0      		ldi r24,lo8(6)
 949 035a F701      		movw r30,r14
 950 035c A0E0      		ldi r26,lo8(tapping_key)
 951 035e B0E0      		ldi r27,hi8(tapping_key)
 952               		0:
 953 0360 0190      		ld r0,Z+
 954 0362 0D92      		st X+,r0
 955 0364 8A95      		dec r24
 956 0366 01F4      		brne 0b
 957 0368 00C0      		rjmp .L153
 958               	.LVL61:
 959               	.L77:
 248:./tmk_core/common/action_tapping.c ****                     return true;
 960               		.loc 1 248 0
 961 036a 86E0      		ldi r24,lo8(6)
 962 036c F701      		movw r30,r14
 963 036e A0E0      		ldi r26,lo8(tapping_key)
 964 0370 B0E0      		ldi r27,hi8(tapping_key)
 965               		0:
 966 0372 0190      		ld r0,Z+
 967 0374 0D92      		st X+,r0
 968 0376 8A95      		dec r24
 969 0378 01F4      		brne 0b
 249:./tmk_core/common/action_tapping.c ****                 } else if (is_tap_key(event.key)) {
 970               		.loc 1 249 0
 971 037a 00C0      		rjmp .L48
 972               	.L76:
 250:./tmk_core/common/action_tapping.c ****                     // Sequential tap can be interfered with other tap key.
 973               		.loc 1 250 0
 974 037c DD86      		std Y+13,r13
 975 037e 0E87      		std Y+14,r16
 976 0380 8D85      		ldd r24,Y+13
 977 0382 9E85      		ldd r25,Y+14
 978 0384 0E94 0000 		call is_tap_key
 979               	.LVL62:
 980 0388 8111      		cpse r24,__zero_reg__
 981 038a 00C0      		rjmp .L66
 260:./tmk_core/common/action_tapping.c ****                     process_record(keyp);
 982               		.loc 1 260 0
 983 038c 8091 0000 		lds r24,tapping_key+5
 984 0390 8160      		ori r24,lo8(1<<0)
 985 0392 8093 0000 		sts tapping_key+5,r24
 261:./tmk_core/common/action_tapping.c ****                     return true;
 986               		.loc 1 261 0
 987 0396 C701      		movw r24,r14
 988 0398 0E94 0000 		call process_record
 989               	.LVL63:
 262:./tmk_core/common/action_tapping.c ****                 }
 990               		.loc 1 262 0
 991 039c 00C0      		rjmp .L48
 992               	.L160:
 274:./tmk_core/common/action_tapping.c ****             debug_tapping_key();
 993               		.loc 1 274 0
 994 039e E0E0      		ldi r30,lo8(tapping_key)
 995 03a0 F0E0      		ldi r31,hi8(tapping_key)
 996 03a2 86E0      		ldi r24,lo8(6)
 997 03a4 DF01      		movw r26,r30
 998               		0:
 999 03a6 1D92      		st X+,__zero_reg__
 1000 03a8 8A95      		dec r24
 1001 03aa 01F4      		brne 0b
 1002 03ac 00C0      		rjmp .L153
 1003               	.LVL64:
 1004               	.L39:
 281:./tmk_core/common/action_tapping.c ****             debug("Tapping: Start(Press tap key).\n");
 1005               		.loc 1 281 0
 1006 03ae CC20      		tst r12
 1007 03b0 01F4      		brne .+2
 1008 03b2 00C0      		rjmp .L75
 281:./tmk_core/common/action_tapping.c ****             debug("Tapping: Start(Press tap key).\n");
 1009               		.loc 1 281 0 is_stmt 0 discriminator 1
 1010 03b4 DD86      		std Y+13,r13
 1011 03b6 0E87      		std Y+14,r16
 1012 03b8 8D85      		ldd r24,Y+13
 1013 03ba 9E85      		ldd r25,Y+14
 1014 03bc 0E94 0000 		call is_tap_key
 1015               	.LVL65:
 1016 03c0 182F      		mov r17,r24
 1017 03c2 8823      		tst r24
 1018 03c4 01F4      		brne .+2
 1019 03c6 00C0      		rjmp .L75
 283:./tmk_core/common/action_tapping.c ****             process_record_tap_hint(&tapping_key);
 1020               		.loc 1 283 0 is_stmt 1
 1021 03c8 86E0      		ldi r24,lo8(6)
 1022 03ca F701      		movw r30,r14
 1023 03cc A0E0      		ldi r26,lo8(tapping_key)
 1024 03ce B0E0      		ldi r27,hi8(tapping_key)
 1025               		0:
 1026 03d0 0190      		ld r0,Z+
 1027 03d2 0D92      		st X+,r0
 1028 03d4 8A95      		dec r24
 1029 03d6 01F4      		brne 0b
 284:./tmk_core/common/action_tapping.c ****             waiting_buffer_scan_tap();
 1030               		.loc 1 284 0
 1031 03d8 80E0      		ldi r24,lo8(tapping_key)
 1032 03da 90E0      		ldi r25,hi8(tapping_key)
 1033 03dc 0E94 0000 		call process_record_tap_hint
 1034               	.LVL66:
 285:./tmk_core/common/action_tapping.c ****             debug_tapping_key();
 1035               		.loc 1 285 0
 1036 03e0 0E94 0000 		call waiting_buffer_scan_tap
 1037               	.LVL67:
 1038               	.L153:
 286:./tmk_core/common/action_tapping.c ****             return true;
 1039               		.loc 1 286 0
 1040 03e4 0E94 0000 		call debug_tapping_key
 1041               	.LVL68:
 1042               	.L48:
 293:./tmk_core/common/action_tapping.c **** 
 1043               		.loc 1 293 0 discriminator 1
 1044 03e8 812F      		mov r24,r17
 1045               	/* epilogue start */
 1046 03ea 6196      		adiw r28,17
 1047 03ec 0FB6      		in __tmp_reg__,__SREG__
 1048 03ee F894      		cli
 1049 03f0 DEBF      		out __SP_H__,r29
 1050 03f2 0FBE      		out __SREG__,__tmp_reg__
 1051 03f4 CDBF      		out __SP_L__,r28
 1052 03f6 DF91      		pop r29
 1053 03f8 CF91      		pop r28
 1054 03fa 1F91      		pop r17
 1055 03fc 0F91      		pop r16
 1056 03fe FF90      		pop r15
 1057 0400 EF90      		pop r14
 1058               	.LVL69:
 1059 0402 DF90      		pop r13
 1060 0404 CF90      		pop r12
 1061 0406 BF90      		pop r11
 1062 0408 AF90      		pop r10
 1063 040a 9F90      		pop r9
 1064 040c 0895      		ret
 1065               		.cfi_endproc
 1066               	.LFE5:
 1068               		.section	.text.action_tapping_process,"ax",@progbits
 1069               	.global	action_tapping_process
 1071               	action_tapping_process:
 1072               	.LFB4:
  44:./tmk_core/common/action_tapping.c ****     if (process_tapping(&record)) {
 1073               		.loc 1 44 0
 1074               		.cfi_startproc
 1075 0000 1F93      		push r17
 1076               	.LCFI17:
 1077               		.cfi_def_cfa_offset 3
 1078               		.cfi_offset 17, -2
 1079 0002 CF93      		push r28
 1080               	.LCFI18:
 1081               		.cfi_def_cfa_offset 4
 1082               		.cfi_offset 28, -3
 1083 0004 DF93      		push r29
 1084               	.LCFI19:
 1085               		.cfi_def_cfa_offset 5
 1086               		.cfi_offset 29, -4
 1087 0006 CDB7      		in r28,__SP_L__
 1088 0008 DEB7      		in r29,__SP_H__
 1089               	.LCFI20:
 1090               		.cfi_def_cfa_register 28
 1091 000a 2C97      		sbiw r28,12
 1092               	.LCFI21:
 1093               		.cfi_def_cfa_offset 17
 1094 000c 0FB6      		in __tmp_reg__,__SREG__
 1095 000e F894      		cli
 1096 0010 DEBF      		out __SP_H__,r29
 1097 0012 0FBE      		out __SREG__,__tmp_reg__
 1098 0014 CDBF      		out __SP_L__,r28
 1099               	/* prologue: function */
 1100               	/* frame size = 12 */
 1101               	/* stack size = 15 */
 1102               	.L__stack_usage = 15
 1103 0016 4F83      		std Y+7,r20
 1104 0018 5887      		std Y+8,r21
 1105 001a 6987      		std Y+9,r22
 1106 001c 7A87      		std Y+10,r23
 1107 001e 8B87      		std Y+11,r24
 1108 0020 9C87      		std Y+12,r25
  45:./tmk_core/common/action_tapping.c ****         if (!IS_NOEVENT(record.event)) {
 1109               		.loc 1 45 0
 1110 0022 CE01      		movw r24,r28
 1111 0024 0796      		adiw r24,7
 1112 0026 0E94 0000 		call process_tapping
 1113               	.LVL70:
 1114 002a 8823      		tst r24
 1115 002c 01F0      		breq .L165
 1116 002e 9F81      		ldd r25,Y+7
 1117 0030 8885      		ldd r24,Y+8
 1118               	.LBB45:
 1119               	.LBB46:
  49:./tmk_core/common/keyboard.h **** static inline bool IS_PRESSED(keyevent_t event) { return (!IS_NOEVENT(event) && event.pressed); }
 1120               		.loc 2 49 0
 1121 0032 2A85      		ldd r18,Y+10
 1122 0034 3B85      		ldd r19,Y+11
 1123 0036 232B      		or r18,r19
 1124 0038 01F0      		breq .L178
 1125 003a 8F3F      		cpi r24,lo8(-1)
 1126 003c 01F4      		brne .L179
 1127 003e 81E0      		ldi r24,lo8(1)
 1128 0040 9F3F      		cpi r25,lo8(-1)
 1129 0042 01F4      		brne .L179
 1130 0044 00C0      		rjmp .L166
 1131               	.L178:
 1132 0046 81E0      		ldi r24,lo8(1)
 1133 0048 00C0      		rjmp .L166
 1134               	.L179:
 1135 004a 80E0      		ldi r24,0
 1136               	.L166:
 1137               	.LBE46:
 1138               	.LBE45:
  46:./tmk_core/common/action_tapping.c ****             debug("processed: "); debug_record(record); debug("\n");
 1139               		.loc 1 46 0
 1140 004c 80FD      		sbrc r24,0
 1141 004e 00C0      		rjmp .L169
  47:./tmk_core/common/action_tapping.c ****         }
 1142               		.loc 1 47 0
 1143 0050 4F81      		ldd r20,Y+7
 1144 0052 5885      		ldd r21,Y+8
 1145 0054 6985      		ldd r22,Y+9
 1146 0056 7A85      		ldd r23,Y+10
 1147 0058 8B85      		ldd r24,Y+11
 1148 005a 9C85      		ldd r25,Y+12
 1149 005c 0E94 0000 		call debug_record
 1150               	.LVL71:
 1151 0060 00C0      		rjmp .L169
 1152               	.L165:
 1153 0062 86E0      		ldi r24,lo8(6)
 1154 0064 FE01      		movw r30,r28
 1155 0066 3796      		adiw r30,7
 1156 0068 DE01      		movw r26,r28
 1157 006a 1196      		adiw r26,1
 1158               		0:
 1159 006c 0190      		ld r0,Z+
 1160 006e 0D92      		st X+,r0
 1161 0070 8A95      		dec r24
 1162 0072 01F4      		brne 0b
 1163 0074 FF81      		ldd r31,Y+7
 1164               	.LVL72:
 1165 0076 E885      		ldd r30,Y+8
 1166               	.LVL73:
 1167 0078 6A85      		ldd r22,Y+10
 1168 007a 7B85      		ldd r23,Y+11
 1169               	.LVL74:
 1170               	.LBB47:
 1171               	.LBB48:
 1172               	.LBB49:
 1173               	.LBB50:
  49:./tmk_core/common/keyboard.h **** static inline bool IS_PRESSED(keyevent_t event) { return (!IS_NOEVENT(event) && event.pressed); }
 1174               		.loc 2 49 0
 1175 007c 6115      		cp r22,__zero_reg__
 1176 007e 7105      		cpc r23,__zero_reg__
 1177 0080 01F0      		breq .L180
 1178 0082 EF3F      		cpi r30,lo8(-1)
 1179 0084 01F4      		brne .L181
 1180 0086 81E0      		ldi r24,lo8(1)
 1181 0088 FF3F      		cpi r31,lo8(-1)
 1182 008a 01F4      		brne .L181
 1183 008c 00C0      		rjmp .L170
 1184               	.L180:
 1185 008e 81E0      		ldi r24,lo8(1)
 1186 0090 00C0      		rjmp .L170
 1187               	.L181:
 1188 0092 80E0      		ldi r24,0
 1189               	.L170:
 1190               	.LBE50:
 1191               	.LBE49:
 302:./tmk_core/common/action_tapping.c ****         return true;
 1192               		.loc 1 302 0
 1193 0094 80FD      		sbrc r24,0
 1194 0096 00C0      		rjmp .L169
 306:./tmk_core/common/action_tapping.c ****         debug("waiting_buffer_enq: Over flow.\n");
 1195               		.loc 1 306 0
 1196 0098 2091 0000 		lds r18,waiting_buffer_head
 1197 009c 30E0      		ldi r19,0
 1198 009e C901      		movw r24,r18
 1199 00a0 0196      		adiw r24,1
 1200 00a2 8770      		andi r24,7
 1201 00a4 9927      		clr r25
 1202 00a6 4091 0000 		lds r20,waiting_buffer_tail
 1203 00aa 50E0      		ldi r21,0
 1204 00ac 8417      		cp r24,r20
 1205 00ae 9507      		cpc r25,r21
 1206 00b0 01F0      		breq .L172
 311:./tmk_core/common/action_tapping.c ****     waiting_buffer_head = (waiting_buffer_head + 1) % WAITING_BUFFER_SIZE;
 1207               		.loc 1 311 0
 1208 00b2 F983      		std Y+1,r31
 1209 00b4 EA83      		std Y+2,r30
 1210 00b6 7D83      		std Y+5,r23
 1211 00b8 6C83      		std Y+4,r22
 1212 00ba 96E0      		ldi r25,lo8(6)
 1213 00bc 929F      		mul r25,r18
 1214 00be D001      		movw r26,r0
 1215 00c0 939F      		mul r25,r19
 1216 00c2 B00D      		add r27,r0
 1217 00c4 1124      		clr __zero_reg__
 1218 00c6 A050      		subi r26,lo8(-(waiting_buffer))
 1219 00c8 B040      		sbci r27,hi8(-(waiting_buffer))
 1220 00ca FE01      		movw r30,r28
 1221               	.LVL75:
 1222 00cc 3196      		adiw r30,1
 1223               		0:
 1224 00ce 0190      		ld r0,Z+
 1225 00d0 0D92      		st X+,r0
 1226 00d2 9A95      		dec r25
 1227 00d4 01F4      		brne 0b
 312:./tmk_core/common/action_tapping.c **** 
 1228               		.loc 1 312 0
 1229 00d6 8093 0000 		sts waiting_buffer_head,r24
 314:./tmk_core/common/action_tapping.c ****     return true;
 1230               		.loc 1 314 0
 1231 00da 0E94 0000 		call debug_waiting_buffer
 1232               	.LVL76:
 1233               	.L169:
 1234               	.LBE48:
 1235               	.LBE47:
  64:./tmk_core/common/action_tapping.c ****             debug("processed: waiting_buffer["); debug_dec(waiting_buffer_tail); debug("] = ");
 1236               		.loc 1 64 0 discriminator 1
 1237 00de 16E0      		ldi r17,lo8(6)
 1238               	.L173:
  63:./tmk_core/common/action_tapping.c ****         if (process_tapping(&waiting_buffer[waiting_buffer_tail])) {
 1239               		.loc 1 63 0 discriminator 1
 1240 00e0 8091 0000 		lds r24,waiting_buffer_tail
 1241 00e4 9091 0000 		lds r25,waiting_buffer_head
 1242 00e8 8917      		cp r24,r25
 1243 00ea 01F0      		breq .L164
  64:./tmk_core/common/action_tapping.c ****             debug("processed: waiting_buffer["); debug_dec(waiting_buffer_tail); debug("] = ");
 1244               		.loc 1 64 0
 1245 00ec 189F      		mul r17,r24
 1246 00ee C001      		movw r24,r0
 1247 00f0 1124      		clr __zero_reg__
 1248 00f2 8050      		subi r24,lo8(-(waiting_buffer))
 1249 00f4 9040      		sbci r25,hi8(-(waiting_buffer))
 1250 00f6 0E94 0000 		call process_tapping
 1251               	.LVL77:
 1252 00fa 8823      		tst r24
 1253 00fc 01F0      		breq .L164
  66:./tmk_core/common/action_tapping.c ****         } else {
 1254               		.loc 1 66 0
 1255 00fe E091 0000 		lds r30,waiting_buffer_tail
 1256 0102 1E9F      		mul r17,r30
 1257 0104 F001      		movw r30,r0
 1258 0106 1124      		clr __zero_reg__
 1259 0108 E050      		subi r30,lo8(-(waiting_buffer))
 1260 010a F040      		sbci r31,hi8(-(waiting_buffer))
 1261 010c 4081      		ld r20,Z
 1262 010e 5181      		ldd r21,Z+1
 1263 0110 6281      		ldd r22,Z+2
 1264 0112 7381      		ldd r23,Z+3
 1265 0114 8481      		ldd r24,Z+4
 1266 0116 9581      		ldd r25,Z+5
 1267 0118 0E94 0000 		call debug_record
 1268               	.LVL78:
  63:./tmk_core/common/action_tapping.c ****         if (process_tapping(&waiting_buffer[waiting_buffer_tail])) {
 1269               		.loc 1 63 0
 1270 011c 8091 0000 		lds r24,waiting_buffer_tail
 1271 0120 90E0      		ldi r25,0
 1272 0122 0196      		adiw r24,1
 1273 0124 8770      		andi r24,7
 1274 0126 9927      		clr r25
 1275 0128 8093 0000 		sts waiting_buffer_tail,r24
 1276 012c 00C0      		rjmp .L173
 1277               	.LVL79:
 1278               	.L172:
  53:./tmk_core/common/action_tapping.c ****             waiting_buffer_clear();
 1279               		.loc 1 53 0
 1280 012e 0E94 0000 		call clear_keyboard
 1281               	.LVL80:
 1282               	.LBB51:
 1283               	.LBB52:
 324:./tmk_core/common/action_tapping.c ****     waiting_buffer_tail = 0;
 1284               		.loc 1 324 0
 1285 0132 1092 0000 		sts waiting_buffer_head,__zero_reg__
 325:./tmk_core/common/action_tapping.c **** }
 1286               		.loc 1 325 0
 1287 0136 1092 0000 		sts waiting_buffer_tail,__zero_reg__
 1288               	.LBE52:
 1289               	.LBE51:
  55:./tmk_core/common/action_tapping.c ****         }
 1290               		.loc 1 55 0
 1291 013a E0E0      		ldi r30,lo8(tapping_key)
 1292 013c F0E0      		ldi r31,hi8(tapping_key)
 1293 013e 86E0      		ldi r24,lo8(6)
 1294 0140 DF01      		movw r26,r30
 1295               		0:
 1296 0142 1D92      		st X+,__zero_reg__
 1297 0144 8A95      		dec r24
 1298 0146 01F4      		brne 0b
 1299               	.L164:
 1300               	/* epilogue start */
  74:./tmk_core/common/action_tapping.c **** 
 1301               		.loc 1 74 0
 1302 0148 2C96      		adiw r28,12
 1303 014a 0FB6      		in __tmp_reg__,__SREG__
 1304 014c F894      		cli
 1305 014e DEBF      		out __SP_H__,r29
 1306 0150 0FBE      		out __SREG__,__tmp_reg__
 1307 0152 CDBF      		out __SP_L__,r28
 1308 0154 DF91      		pop r29
 1309 0156 CF91      		pop r28
 1310 0158 1F91      		pop r17
 1311 015a 0895      		ret
 1312               		.cfi_endproc
 1313               	.LFE4:
 1315               		.section	.bss.waiting_buffer_tail,"aw",@nobits
 1318               	waiting_buffer_tail:
 1319 0000 00        		.zero	1
 1320               		.section	.bss.waiting_buffer_head,"aw",@nobits
 1323               	waiting_buffer_head:
 1324 0000 00        		.zero	1
 1325               		.section	.bss.waiting_buffer,"aw",@nobits
 1328               	waiting_buffer:
 1329 0000 0000 0000 		.zero	48
 1329      0000 0000 
 1329      0000 0000 
 1329      0000 0000 
 1329      0000 0000 
 1330               		.section	.bss.tapping_key,"aw",@nobits
 1333               	tapping_key:
 1334 0000 0000 0000 		.zero	6
 1334      0000 
 1335               		.text
 1336               	.Letext0:
 1337               		.file 3 "/usr/lib/avr/include/stdint.h"
 1338               		.file 4 "./tmk_core/common/keycode.h"
 1339               		.file 5 "./tmk_core/common/action_code.h"
 1340               		.file 6 "./tmk_core/common/action.h"
 1341               		.file 7 "./tmk_core/common/action_layer.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 action_tapping.c
     /tmp/ccChmrME.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccChmrME.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccChmrME.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccChmrME.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccChmrME.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccChmrME.s:12     .text.debug_waiting_buffer:0000000000000000 debug_waiting_buffer
     /tmp/ccChmrME.s:1318   .bss.waiting_buffer_tail:0000000000000000 waiting_buffer_tail
     /tmp/ccChmrME.s:1323   .bss.waiting_buffer_head:0000000000000000 waiting_buffer_head
     /tmp/ccChmrME.s:1328   .bss.waiting_buffer:0000000000000000 waiting_buffer
     /tmp/ccChmrME.s:82     .text.debug_tapping_key:0000000000000000 debug_tapping_key
     /tmp/ccChmrME.s:1333   .bss.tapping_key:0000000000000000 tapping_key
     /tmp/ccChmrME.s:104    .text.waiting_buffer_typed.isra.1:0000000000000000 waiting_buffer_typed.isra.1
     /tmp/ccChmrME.s:167    .text.waiting_buffer_scan_tap:0000000000000000 waiting_buffer_scan_tap
     /tmp/ccChmrME.s:324    .text.process_tapping:0000000000000000 process_tapping
     /tmp/ccChmrME.s:1071   .text.action_tapping_process:0000000000000000 action_tapping_process

UNDEFINED SYMBOLS
debug_record
process_record
debug_event
layer_switch_get_action
is_tap_key
process_record_tap_hint
clear_keyboard
__do_clear_bss
