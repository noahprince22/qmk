   1               		.file	"keymap_common.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.rgblight_toggle,"ax",@progbits
  11               		.weak	rgblight_toggle
  13               	rgblight_toggle:
  14               	.LFB11:
  15               		.file 1 "quantum/rgb.h"
   1:quantum/rgb.h **** /* Copyright 2017 Jack Humbert
   2:quantum/rgb.h ****  *
   3:quantum/rgb.h ****  * This program is free software: you can redistribute it and/or modify
   4:quantum/rgb.h ****  * it under the terms of the GNU General Public License as published by
   5:quantum/rgb.h ****  * the Free Software Foundation, either version 2 of the License, or
   6:quantum/rgb.h ****  * (at your option) any later version.
   7:quantum/rgb.h ****  *
   8:quantum/rgb.h ****  * This program is distributed in the hope that it will be useful,
   9:quantum/rgb.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:quantum/rgb.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:quantum/rgb.h ****  * GNU General Public License for more details.
  12:quantum/rgb.h ****  *
  13:quantum/rgb.h ****  * You should have received a copy of the GNU General Public License
  14:quantum/rgb.h ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:quantum/rgb.h ****  */
  16:quantum/rgb.h **** 
  17:quantum/rgb.h **** #ifndef RGB_H
  18:quantum/rgb.h **** #define RGB_H
  19:quantum/rgb.h **** 
  20:quantum/rgb.h **** __attribute__((weak))
  21:quantum/rgb.h **** void rgblight_toggle(void) {};
  16               		.loc 1 21 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  22               	/* epilogue start */
  23               		.loc 1 21 0
  24 0000 0895      		ret
  25               		.cfi_endproc
  26               	.LFE11:
  28               		.section	.text.rgblight_step,"ax",@progbits
  29               		.weak	rgblight_step
  31               	rgblight_step:
  32               	.LFB35:
  33               		.cfi_startproc
  34               	/* prologue: function */
  35               	/* frame size = 0 */
  36               	/* stack size = 0 */
  37               	.L__stack_usage = 0
  38               	/* epilogue start */
  39 0000 0895      		ret
  40               		.cfi_endproc
  41               	.LFE35:
  43               		.section	.text.rgblight_step_reverse,"ax",@progbits
  44               		.weak	rgblight_step_reverse
  46               	rgblight_step_reverse:
  47               	.LFB37:
  48               		.cfi_startproc
  49               	/* prologue: function */
  50               	/* frame size = 0 */
  51               	/* stack size = 0 */
  52               	.L__stack_usage = 0
  53               	/* epilogue start */
  54 0000 0895      		ret
  55               		.cfi_endproc
  56               	.LFE37:
  58               		.section	.text.rgblight_increase_hue,"ax",@progbits
  59               		.weak	rgblight_increase_hue
  61               	rgblight_increase_hue:
  62               	.LFB39:
  63               		.cfi_startproc
  64               	/* prologue: function */
  65               	/* frame size = 0 */
  66               	/* stack size = 0 */
  67               	.L__stack_usage = 0
  68               	/* epilogue start */
  69 0000 0895      		ret
  70               		.cfi_endproc
  71               	.LFE39:
  73               		.section	.text.rgblight_decrease_hue,"ax",@progbits
  74               		.weak	rgblight_decrease_hue
  76               	rgblight_decrease_hue:
  77               	.LFB41:
  78               		.cfi_startproc
  79               	/* prologue: function */
  80               	/* frame size = 0 */
  81               	/* stack size = 0 */
  82               	.L__stack_usage = 0
  83               	/* epilogue start */
  84 0000 0895      		ret
  85               		.cfi_endproc
  86               	.LFE41:
  88               		.section	.text.rgblight_increase_sat,"ax",@progbits
  89               		.weak	rgblight_increase_sat
  91               	rgblight_increase_sat:
  92               	.LFB43:
  93               		.cfi_startproc
  94               	/* prologue: function */
  95               	/* frame size = 0 */
  96               	/* stack size = 0 */
  97               	.L__stack_usage = 0
  98               	/* epilogue start */
  99 0000 0895      		ret
 100               		.cfi_endproc
 101               	.LFE43:
 103               		.section	.text.rgblight_decrease_sat,"ax",@progbits
 104               		.weak	rgblight_decrease_sat
 106               	rgblight_decrease_sat:
 107               	.LFB45:
 108               		.cfi_startproc
 109               	/* prologue: function */
 110               	/* frame size = 0 */
 111               	/* stack size = 0 */
 112               	.L__stack_usage = 0
 113               	/* epilogue start */
 114 0000 0895      		ret
 115               		.cfi_endproc
 116               	.LFE45:
 118               		.section	.text.rgblight_increase_val,"ax",@progbits
 119               		.weak	rgblight_increase_val
 121               	rgblight_increase_val:
 122               	.LFB47:
 123               		.cfi_startproc
 124               	/* prologue: function */
 125               	/* frame size = 0 */
 126               	/* stack size = 0 */
 127               	.L__stack_usage = 0
 128               	/* epilogue start */
 129 0000 0895      		ret
 130               		.cfi_endproc
 131               	.LFE47:
 133               		.section	.text.rgblight_decrease_val,"ax",@progbits
 134               		.weak	rgblight_decrease_val
 136               	rgblight_decrease_val:
 137               	.LFB49:
 138               		.cfi_startproc
 139               	/* prologue: function */
 140               	/* frame size = 0 */
 141               	/* stack size = 0 */
 142               	.L__stack_usage = 0
 143               	/* epilogue start */
 144 0000 0895      		ret
 145               		.cfi_endproc
 146               	.LFE49:
 148               		.section	.text.rgblight_increase_speed,"ax",@progbits
 149               		.weak	rgblight_increase_speed
 151               	rgblight_increase_speed:
 152               	.LFB51:
 153               		.cfi_startproc
 154               	/* prologue: function */
 155               	/* frame size = 0 */
 156               	/* stack size = 0 */
 157               	.L__stack_usage = 0
 158               	/* epilogue start */
 159 0000 0895      		ret
 160               		.cfi_endproc
 161               	.LFE51:
 163               		.section	.text.rgblight_decrease_speed,"ax",@progbits
 164               		.weak	rgblight_decrease_speed
 166               	rgblight_decrease_speed:
 167               	.LFB53:
 168               		.cfi_startproc
 169               	/* prologue: function */
 170               	/* frame size = 0 */
 171               	/* stack size = 0 */
 172               	.L__stack_usage = 0
 173               	/* epilogue start */
 174 0000 0895      		ret
 175               		.cfi_endproc
 176               	.LFE53:
 178               		.section	.text.action_get_macro,"ax",@progbits
 179               		.weak	action_get_macro
 181               	action_get_macro:
 182               	.LFB30:
 183               		.file 2 "quantum/keymap_common.c"
   1:quantum/keymap_common.c **** /*
   2:quantum/keymap_common.c **** Copyright 2012-2017 Jun Wako <wakojun@gmail.com>
   3:quantum/keymap_common.c **** 
   4:quantum/keymap_common.c **** This program is free software: you can redistribute it and/or modify
   5:quantum/keymap_common.c **** it under the terms of the GNU General Public License as published by
   6:quantum/keymap_common.c **** the Free Software Foundation, either version 2 of the License, or
   7:quantum/keymap_common.c **** (at your option) any later version.
   8:quantum/keymap_common.c **** 
   9:quantum/keymap_common.c **** This program is distributed in the hope that it will be useful,
  10:quantum/keymap_common.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/keymap_common.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/keymap_common.c **** GNU General Public License for more details.
  13:quantum/keymap_common.c **** 
  14:quantum/keymap_common.c **** You should have received a copy of the GNU General Public License
  15:quantum/keymap_common.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/keymap_common.c **** */
  17:quantum/keymap_common.c **** 
  18:quantum/keymap_common.c **** #include "keymap.h"
  19:quantum/keymap_common.c **** #include "report.h"
  20:quantum/keymap_common.c **** #include "keycode.h"
  21:quantum/keymap_common.c **** #include "action_layer.h"
  22:quantum/keymap_common.c **** #if defined(__AVR__)
  23:quantum/keymap_common.c **** #include <util/delay.h>
  24:quantum/keymap_common.c **** #include <stdio.h>
  25:quantum/keymap_common.c **** #endif
  26:quantum/keymap_common.c **** #include "action.h"
  27:quantum/keymap_common.c **** #include "action_macro.h"
  28:quantum/keymap_common.c **** #include "debug.h"
  29:quantum/keymap_common.c **** #include "backlight.h"
  30:quantum/keymap_common.c **** #include "quantum.h"
  31:quantum/keymap_common.c **** 
  32:quantum/keymap_common.c **** #ifdef MIDI_ENABLE
  33:quantum/keymap_common.c **** 	#include "process_midi.h"
  34:quantum/keymap_common.c **** #endif
  35:quantum/keymap_common.c **** 
  36:quantum/keymap_common.c **** extern keymap_config_t keymap_config;
  37:quantum/keymap_common.c **** 
  38:quantum/keymap_common.c **** #include <inttypes.h>
  39:quantum/keymap_common.c **** 
  40:quantum/keymap_common.c **** /* converts key to action */
  41:quantum/keymap_common.c **** action_t action_for_key(uint8_t layer, keypos_t key)
  42:quantum/keymap_common.c **** {
  43:quantum/keymap_common.c ****     // 16bit keycodes - important
  44:quantum/keymap_common.c ****     uint16_t keycode = keymap_key_to_keycode(layer, key);
  45:quantum/keymap_common.c **** 
  46:quantum/keymap_common.c ****     // keycode remapping
  47:quantum/keymap_common.c ****     keycode = keycode_config(keycode);
  48:quantum/keymap_common.c **** 
  49:quantum/keymap_common.c ****     action_t action;
  50:quantum/keymap_common.c ****     uint8_t action_layer, when, mod;
  51:quantum/keymap_common.c **** 
  52:quantum/keymap_common.c ****     switch (keycode) {
  53:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
  54:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action(FN_INDEX(keycode));
  55:quantum/keymap_common.c ****             break;
  56:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
  57:quantum/keymap_common.c ****         case KC_LCTRL ... KC_RGUI:
  58:quantum/keymap_common.c ****             action.code = ACTION_KEY(keycode);
  59:quantum/keymap_common.c ****             break;
  60:quantum/keymap_common.c ****         case KC_SYSTEM_POWER ... KC_SYSTEM_WAKE:
  61:quantum/keymap_common.c ****             action.code = ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
  62:quantum/keymap_common.c ****             break;
  63:quantum/keymap_common.c ****         case KC_AUDIO_MUTE ... KC_MEDIA_REWIND:
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
  65:quantum/keymap_common.c ****             break;
  66:quantum/keymap_common.c ****         case KC_MS_UP ... KC_MS_ACCEL2:
  67:quantum/keymap_common.c ****             action.code = ACTION_MOUSEKEY(keycode);
  68:quantum/keymap_common.c ****             break;
  69:quantum/keymap_common.c ****         case KC_TRNS:
  70:quantum/keymap_common.c ****             action.code = ACTION_TRANSPARENT;
  71:quantum/keymap_common.c ****             break;
  72:quantum/keymap_common.c ****         case QK_MODS ... QK_MODS_MAX: ;
  73:quantum/keymap_common.c ****             // Has a modifier
  74:quantum/keymap_common.c ****             // Split it up
  75:quantum/keymap_common.c ****             action.code = ACTION_MODS_KEY(keycode >> 8, keycode & 0xFF); // adds modifier to key
  76:quantum/keymap_common.c ****             break;
  77:quantum/keymap_common.c ****         case QK_FUNCTION ... QK_FUNCTION_MAX: ;
  78:quantum/keymap_common.c ****             // Is a shortcut for function action_layer, pull last 12bits
  79:quantum/keymap_common.c ****             // This means we have 4,096 FN macros at our disposal
  80:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action( (int)keycode & 0xFFF );
  81:quantum/keymap_common.c ****             break;
  82:quantum/keymap_common.c ****         case QK_MACRO ... QK_MACRO_MAX:
  83:quantum/keymap_common.c ****             if (keycode & 0x800) // tap macros have upper bit set
  84:quantum/keymap_common.c ****                 action.code = ACTION_MACRO_TAP(keycode & 0xFF);
  85:quantum/keymap_common.c ****             else
  86:quantum/keymap_common.c ****                 action.code = ACTION_MACRO(keycode & 0xFF);
  87:quantum/keymap_common.c ****             break;
  88:quantum/keymap_common.c ****         case QK_LAYER_TAP ... QK_LAYER_TAP_MAX:
  89:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_KEY((keycode >> 0x8) & 0xF, keycode & 0xFF);
  90:quantum/keymap_common.c ****             break;
  91:quantum/keymap_common.c ****         case QK_TO ... QK_TO_MAX: ;
  92:quantum/keymap_common.c ****             // Layer set "GOTO"
  93:quantum/keymap_common.c ****             when = (keycode >> 0x4) & 0x3;
  94:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
  95:quantum/keymap_common.c ****             action.code = ACTION_LAYER_SET(action_layer, when);
  96:quantum/keymap_common.c ****             break;
  97:quantum/keymap_common.c ****         case QK_MOMENTARY ... QK_MOMENTARY_MAX: ;
  98:quantum/keymap_common.c ****             // Momentary action_layer
  99:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 100:quantum/keymap_common.c ****             action.code = ACTION_LAYER_MOMENTARY(action_layer);
 101:quantum/keymap_common.c ****             break;
 102:quantum/keymap_common.c ****         case QK_DEF_LAYER ... QK_DEF_LAYER_MAX: ;
 103:quantum/keymap_common.c ****             // Set default action_layer
 104:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 105:quantum/keymap_common.c ****             action.code = ACTION_DEFAULT_LAYER_SET(action_layer);
 106:quantum/keymap_common.c ****             break;
 107:quantum/keymap_common.c ****         case QK_TOGGLE_LAYER ... QK_TOGGLE_LAYER_MAX: ;
 108:quantum/keymap_common.c ****             // Set toggle
 109:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 110:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TOGGLE(action_layer);
 111:quantum/keymap_common.c ****             break;
 112:quantum/keymap_common.c ****         case QK_ONE_SHOT_LAYER ... QK_ONE_SHOT_LAYER_MAX: ;
 113:quantum/keymap_common.c ****             // OSL(action_layer) - One-shot action_layer
 114:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 115:quantum/keymap_common.c ****             action.code = ACTION_LAYER_ONESHOT(action_layer);
 116:quantum/keymap_common.c ****             break;
 117:quantum/keymap_common.c ****         case QK_ONE_SHOT_MOD ... QK_ONE_SHOT_MOD_MAX: ;
 118:quantum/keymap_common.c ****             // OSM(mod) - One-shot mod
 119:quantum/keymap_common.c ****             mod = keycode & 0xFF;
 120:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 121:quantum/keymap_common.c ****             break;
 122:quantum/keymap_common.c ****         case QK_LAYER_TAP_TOGGLE ... QK_LAYER_TAP_TOGGLE_MAX:
 123:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_TOGGLE(keycode & 0xFF);
 124:quantum/keymap_common.c ****             break;
 125:quantum/keymap_common.c ****         case QK_LAYER_MOD ... QK_LAYER_MOD_MAX:
 126:quantum/keymap_common.c ****             mod = keycode & 0xF;
 127:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 128:quantum/keymap_common.c ****             action.code = ACTION_LAYER_MODS(action_layer, mod);
 129:quantum/keymap_common.c ****             break;
 130:quantum/keymap_common.c ****         case QK_MOD_TAP ... QK_MOD_TAP_MAX:
 131:quantum/keymap_common.c ****             mod = mod_config((keycode >> 0x8) & 0x1F);
 132:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 133:quantum/keymap_common.c ****             break;
 134:quantum/keymap_common.c ****     #ifdef BACKLIGHT_ENABLE
 135:quantum/keymap_common.c ****         case BL_ON:
 136:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_ON();
 137:quantum/keymap_common.c ****             break;
 138:quantum/keymap_common.c ****         case BL_OFF:
 139:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_OFF();
 140:quantum/keymap_common.c ****             break;
 141:quantum/keymap_common.c ****         case BL_DEC:
 142:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_DECREASE();
 143:quantum/keymap_common.c ****             break;
 144:quantum/keymap_common.c ****         case BL_INC:
 145:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_INCREASE();
 146:quantum/keymap_common.c ****             break;
 147:quantum/keymap_common.c ****         case BL_TOGG:
 148:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_TOGGLE();
 149:quantum/keymap_common.c ****             break;
 150:quantum/keymap_common.c ****         case BL_STEP:
 151:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_STEP();
 152:quantum/keymap_common.c ****             break;
 153:quantum/keymap_common.c ****     #endif
 154:quantum/keymap_common.c ****     #ifdef SWAP_HANDS_ENABLE
 155:quantum/keymap_common.c ****         case QK_SWAP_HANDS ... QK_SWAP_HANDS_MAX:
 156:quantum/keymap_common.c ****             action.code = ACTION(ACT_SWAP_HANDS, keycode & 0xff);
 157:quantum/keymap_common.c ****             break;
 158:quantum/keymap_common.c ****     #endif
 159:quantum/keymap_common.c **** 
 160:quantum/keymap_common.c ****         default:
 161:quantum/keymap_common.c ****             action.code = ACTION_NO;
 162:quantum/keymap_common.c ****             break;
 163:quantum/keymap_common.c ****     }
 164:quantum/keymap_common.c ****     return action;
 165:quantum/keymap_common.c **** }
 166:quantum/keymap_common.c **** 
 167:quantum/keymap_common.c **** __attribute__ ((weak))
 168:quantum/keymap_common.c **** const uint16_t PROGMEM fn_actions[] = {
 169:quantum/keymap_common.c **** 
 170:quantum/keymap_common.c **** };
 171:quantum/keymap_common.c **** 
 172:quantum/keymap_common.c **** /* Macro */
 173:quantum/keymap_common.c **** __attribute__ ((weak))
 174:quantum/keymap_common.c **** const macro_t *action_get_macro(keyrecord_t *record, uint8_t id, uint8_t opt)
 175:quantum/keymap_common.c **** {
 184               		.loc 2 175 0
 185               		.cfi_startproc
 186               	.LVL0:
 187               	/* prologue: function */
 188               	/* frame size = 0 */
 189               	/* stack size = 0 */
 190               	.L__stack_usage = 0
 176:quantum/keymap_common.c ****     return MACRO_NONE;
 177:quantum/keymap_common.c **** }
 191               		.loc 2 177 0
 192 0000 90E0      		ldi r25,0
 193 0002 80E0      		ldi r24,0
 194               	.LVL1:
 195               	/* epilogue start */
 196 0004 0895      		ret
 197               		.cfi_endproc
 198               	.LFE30:
 200               		.section	.text.action_function,"ax",@progbits
 201               		.weak	action_function
 203               	action_function:
 204               	.LFB31:
 178:quantum/keymap_common.c **** 
 179:quantum/keymap_common.c **** /* Function */
 180:quantum/keymap_common.c **** __attribute__ ((weak))
 181:quantum/keymap_common.c **** void action_function(keyrecord_t *record, uint8_t id, uint8_t opt)
 182:quantum/keymap_common.c **** {
 205               		.loc 2 182 0
 206               		.cfi_startproc
 207               	.LVL2:
 208               	/* prologue: function */
 209               	/* frame size = 0 */
 210               	/* stack size = 0 */
 211               	.L__stack_usage = 0
 212               	/* epilogue start */
 183:quantum/keymap_common.c **** }
 213               		.loc 2 183 0
 214 0000 0895      		ret
 215               		.cfi_endproc
 216               	.LFE31:
 218               		.section	.text.keymap_key_to_keycode,"ax",@progbits
 219               		.weak	keymap_key_to_keycode
 221               	keymap_key_to_keycode:
 222               	.LFB32:
 184:quantum/keymap_common.c **** 
 185:quantum/keymap_common.c **** // translates key to keycode
 186:quantum/keymap_common.c **** __attribute__ ((weak))
 187:quantum/keymap_common.c **** uint16_t keymap_key_to_keycode(uint8_t layer, keypos_t key)
 188:quantum/keymap_common.c **** {
 223               		.loc 2 188 0
 224               		.cfi_startproc
 225               	.LVL3:
 226               	/* prologue: function */
 227               	/* frame size = 0 */
 228               	/* stack size = 0 */
 229               	.L__stack_usage = 0
 230 0000 972F      		mov r25,r23
 231               	.LBB2:
 189:quantum/keymap_common.c ****     // Read entire word (16bits)
 190:quantum/keymap_common.c ****     return pgm_read_word(&keymaps[(layer)][(key.row)][(key.col)]);
 232               		.loc 2 190 0
 233 0002 70E0      		ldi r23,0
 234 0004 26E0      		ldi r18,lo8(6)
 235 0006 929F      		mul r25,r18
 236 0008 600D      		add r22,r0
 237 000a 711D      		adc r23,r1
 238 000c 1124      		clr __zero_reg__
 239               	.LVL4:
 240 000e FB01      		movw r30,r22
 241 0010 94E5      		ldi r25,lo8(84)
 242 0012 899F      		mul r24,r25
 243 0014 E00D      		add r30,r0
 244 0016 F11D      		adc r31,r1
 245 0018 1124      		clr __zero_reg__
 246 001a EE0F      		lsl r30
 247 001c FF1F      		rol r31
 248               	.LVL5:
 249 001e E050      		subi r30,lo8(-(keymaps))
 250 0020 F040      		sbci r31,hi8(-(keymaps))
 251               	.LVL6:
 252               	/* #APP */
 253               	 ;  190 "quantum/keymap_common.c" 1
 254 0022 8591      		lpm r24, Z+
 255 0024 9491      		lpm r25, Z
 256               		
 257               	 ;  0 "" 2
 258               	.LVL7:
 259               	/* epilogue start */
 260               	/* #NOAPP */
 261               	.LBE2:
 191:quantum/keymap_common.c **** }
 262               		.loc 2 191 0
 263 0026 0895      		ret
 264               		.cfi_endproc
 265               	.LFE32:
 267               		.section	.text.keymap_function_id_to_action,"ax",@progbits
 268               		.weak	keymap_function_id_to_action
 270               	keymap_function_id_to_action:
 271               	.LFB33:
 192:quantum/keymap_common.c **** 
 193:quantum/keymap_common.c **** // translates function id to action
 194:quantum/keymap_common.c **** __attribute__ ((weak))
 195:quantum/keymap_common.c **** uint16_t keymap_function_id_to_action( uint16_t function_id )
 196:quantum/keymap_common.c **** {
 272               		.loc 2 196 0
 273               		.cfi_startproc
 274               	.LVL8:
 275               	/* prologue: function */
 276               	/* frame size = 0 */
 277               	/* stack size = 0 */
 278               	.L__stack_usage = 0
 279               	.LBB3:
 197:quantum/keymap_common.c ****     // The compiler sees the empty (weak) fn_actions and generates a warning
 198:quantum/keymap_common.c ****     // This function should not be called in that case, so the warning is too strict
 199:quantum/keymap_common.c ****     // If this function is called however, the keymap should have overridden fn_actions, and then t
 200:quantum/keymap_common.c ****     // is comparing against the wrong array
 201:quantum/keymap_common.c ****     #pragma GCC diagnostic push
 202:quantum/keymap_common.c ****     #pragma GCC diagnostic ignored "-Warray-bounds"
 203:quantum/keymap_common.c **** 	return pgm_read_word(&fn_actions[function_id]);
 280               		.loc 2 203 0
 281 0000 FC01      		movw r30,r24
 282 0002 EE0F      		lsl r30
 283 0004 FF1F      		rol r31
 284               	.LVL9:
 285 0006 E050      		subi r30,lo8(-(fn_actions))
 286 0008 F040      		sbci r31,hi8(-(fn_actions))
 287               	.LVL10:
 288               	/* #APP */
 289               	 ;  203 "quantum/keymap_common.c" 1
 290 000a 8591      		lpm r24, Z+
 291 000c 9491      		lpm r25, Z
 292               		
 293               	 ;  0 "" 2
 294               	.LVL11:
 295               	/* epilogue start */
 296               	/* #NOAPP */
 297               	.LBE3:
 204:quantum/keymap_common.c ****     #pragma GCC diagnostic pop
 205:quantum/keymap_common.c **** }
 298               		.loc 2 205 0
 299 000e 0895      		ret
 300               		.cfi_endproc
 301               	.LFE33:
 303               		.section	.text.action_for_key,"ax",@progbits
 304               	.global	action_for_key
 306               	action_for_key:
 307               	.LFB29:
  42:quantum/keymap_common.c ****     // 16bit keycodes - important
 308               		.loc 2 42 0
 309               		.cfi_startproc
 310               	.LVL12:
 311 0000 CF93      		push r28
 312               	.LCFI0:
 313               		.cfi_def_cfa_offset 3
 314               		.cfi_offset 28, -2
 315 0002 DF93      		push r29
 316               	.LCFI1:
 317               		.cfi_def_cfa_offset 4
 318               		.cfi_offset 29, -3
 319               	/* prologue: function */
 320               	/* frame size = 0 */
 321               	/* stack size = 2 */
 322               	.L__stack_usage = 2
  44:quantum/keymap_common.c **** 
 323               		.loc 2 44 0
 324 0004 0E94 0000 		call keymap_key_to_keycode
 325               	.LVL13:
  47:quantum/keymap_common.c **** 
 326               		.loc 2 47 0
 327 0008 0E94 0000 		call keycode_config
 328               	.LVL14:
 329 000c EC01      		movw r28,r24
 330               	.LVL15:
  52:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 331               		.loc 2 52 0
 332 000e 8115      		cp r24,__zero_reg__
 333 0010 9045      		sbci r25,80
 334 0012 00F0      		brlo .+2
 335 0014 00C0      		rjmp .L18
 336 0016 C115      		cp r28,__zero_reg__
 337 0018 80E4      		ldi r24,64
 338 001a D807      		cpc r29,r24
 339               	.LVL16:
 340 001c 00F0      		brlo .+2
 341 001e 00C0      		rjmp .L19
 342 0020 C83E      		cpi r28,-24
 343 0022 D105      		cpc r29,__zero_reg__
 344 0024 00F4      		brsh .L20
 345 0026 C03E      		cpi r28,-32
 346 0028 D105      		cpc r29,__zero_reg__
 347 002a 00F0      		brlo .+2
 348 002c 00C0      		rjmp .L21
 349 002e C83A      		cpi r28,-88
 350 0030 D105      		cpc r29,__zero_reg__
 351 0032 00F4      		brsh .L22
 352 0034 C53A      		cpi r28,-91
 353 0036 D105      		cpc r29,__zero_reg__
 354 0038 00F0      		brlo .+2
 355 003a 00C0      		rjmp .L23
 356 003c C130      		cpi r28,1
 357 003e D105      		cpc r29,__zero_reg__
 358 0040 01F4      		brne .+2
 359 0042 00C0      		rjmp .L21
 360 0044 00F0      		brlo .L17
 361 0046 C430      		cpi r28,4
 362 0048 D105      		cpc r29,__zero_reg__
 363 004a 00F0      		brlo .+2
 364 004c 00C0      		rjmp .L21
 365               	.L17:
 366               	.LVL17:
 161:quantum/keymap_common.c ****             break;
 367               		.loc 2 161 0
 368 004e D0E0      		ldi r29,0
 369 0050 C0E0      		ldi r28,0
 162:quantum/keymap_common.c ****     }
 370               		.loc 2 162 0
 371 0052 00C0      		rjmp .L21
 372               	.LVL18:
 373               	.L22:
  52:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 374               		.loc 2 52 0
 375 0054 CD3B      		cpi r28,-67
 376 0056 D105      		cpc r29,__zero_reg__
 377 0058 00F4      		brsh .+2
 378 005a 00C0      		rjmp .L24
  54:quantum/keymap_common.c ****             break;
 379               		.loc 2 54 0
 380 005c CE01      		movw r24,r28
 381 005e 805C      		subi r24,-64
 382 0060 9109      		sbc r25,__zero_reg__
  52:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 383               		.loc 2 52 0
 384 0062 C03C      		cpi r28,-64
 385 0064 D105      		cpc r29,__zero_reg__
 386 0066 00F0      		brlo .L17
 387               	.L76:
  80:quantum/keymap_common.c ****             break;
 388               		.loc 2 80 0
 389 0068 0E94 0000 		call keymap_function_id_to_action
 390               	.LVL19:
 391 006c EC01      		movw r28,r24
 392               	.LVL20:
  81:quantum/keymap_common.c ****         case QK_MACRO ... QK_MACRO_MAX:
 393               		.loc 2 81 0
 394 006e 00C0      		rjmp .L21
 395               	.LVL21:
 396               	.L20:
  52:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 397               		.loc 2 52 0
 398 0070 C115      		cp r28,__zero_reg__
 399 0072 20E2      		ldi r18,32
 400 0074 D207      		cpc r29,r18
 401 0076 00F4      		brsh .L26
 402 0078 C115      		cp r28,__zero_reg__
 403 007a 81E0      		ldi r24,1
 404 007c D807      		cpc r29,r24
 405 007e 00F0      		brlo .+2
 406 0080 00C0      		rjmp .L21
 407 0082 C03F      		cpi r28,-16
 408 0084 D105      		cpc r29,__zero_reg__
 409 0086 00F0      		brlo .L17
 410               	.LVL22:
  67:quantum/keymap_common.c ****             break;
 411               		.loc 2 67 0
 412 0088 D065      		ori r29,80
 413               	.LVL23:
  68:quantum/keymap_common.c ****         case KC_TRNS:
 414               		.loc 2 68 0
 415 008a 00C0      		rjmp .L21
 416               	.LVL24:
 417               	.L26:
  52:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 418               		.loc 2 52 0
 419 008c C115      		cp r28,__zero_reg__
 420 008e 20E3      		ldi r18,48
 421 0090 D207      		cpc r29,r18
 422 0092 00F0      		brlo .+2
 423 0094 00C0      		rjmp .L71
  80:quantum/keymap_common.c ****             break;
 424               		.loc 2 80 0
 425 0096 CE01      		movw r24,r28
 426 0098 9F70      		andi r25,15
 427 009a 00C0      		rjmp .L76
 428               	.LVL25:
 429               	.L18:
  52:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 430               		.loc 2 52 0
 431 009c C115      		cp r28,__zero_reg__
 432 009e 85E5      		ldi r24,85
 433 00a0 D807      		cpc r29,r24
 434               	.LVL26:
 435 00a2 00F4      		brsh .L30
 436 00a4 C115      		cp r28,__zero_reg__
 437 00a6 24E5      		ldi r18,84
 438 00a8 D207      		cpc r29,r18
 439 00aa 00F0      		brlo .+2
 440 00ac 00C0      		rjmp .L31
 441 00ae C115      		cp r28,__zero_reg__
 442 00b0 82E5      		ldi r24,82
 443 00b2 D807      		cpc r29,r24
 444 00b4 00F4      		brsh .L32
 445 00b6 C115      		cp r28,__zero_reg__
 446 00b8 21E5      		ldi r18,81
 447 00ba D207      		cpc r29,r18
 448 00bc 00F4      		brsh .+2
 449 00be 00C0      		rjmp .L72
 450               	.LVL27:
 100:quantum/keymap_common.c ****             break;
 451               		.loc 2 100 0
 452 00c0 DC2F      		mov r29,r28
 453 00c2 CC27      		clr r28
 454               	.LVL28:
 455 00c4 C16F      		ori r28,241
 456 00c6 D06A      		ori r29,160
 457               	.LVL29:
 101:quantum/keymap_common.c ****         case QK_DEF_LAYER ... QK_DEF_LAYER_MAX: ;
 458               		.loc 2 101 0
 459 00c8 00C0      		rjmp .L21
 460               	.LVL30:
 461               	.L32:
 462 00ca 9C2F      		mov r25,r28
 463 00cc 9695      		lsr r25
 464 00ce 9695      		lsr r25
 465 00d0 9E01      		movw r18,r28
 466 00d2 2370      		andi r18,3
 467 00d4 3327      		clr r19
  52:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 468               		.loc 2 52 0
 469 00d6 C115      		cp r28,__zero_reg__
 470 00d8 D345      		sbci r29,83
 471 00da 00F0      		brlo .+2
 472 00dc 00C0      		rjmp .L73
 473               	.LVL31:
 105:quantum/keymap_common.c ****             break;
 474               		.loc 2 105 0
 475 00de C1E0      		ldi r28,lo8(1)
 476 00e0 D0E0      		ldi r29,0
 477               	.LVL32:
 478 00e2 00C0      		rjmp 2f
 479               		1:
 480 00e4 CC0F      		lsl r28
 481 00e6 DD1F      		rol r29
 482               		2:
 483 00e8 2A95      		dec r18
 484 00ea 02F4      		brpl 1b
 485 00ec 20E2      		ldi r18,lo8(32)
 486 00ee 929F      		mul r25,r18
 487 00f0 C001      		movw r24,r0
 488 00f2 1124      		clr __zero_reg__
 489 00f4 C82B      		or r28,r24
 490 00f6 D92B      		or r29,r25
 491               	.LVL33:
 492 00f8 DC68      		ori r29,140
 493               	.LVL34:
 106:quantum/keymap_common.c ****         case QK_TOGGLE_LAYER ... QK_TOGGLE_LAYER_MAX: ;
 494               		.loc 2 106 0
 495 00fa 00C0      		rjmp .L21
 496               	.LVL35:
 497               	.L30:
  52:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 498               		.loc 2 52 0
 499 00fc C115      		cp r28,__zero_reg__
 500 00fe 29E5      		ldi r18,89
 501 0100 D207      		cpc r29,r18
 502 0102 00F4      		brsh .L37
 503 0104 C115      		cp r28,__zero_reg__
 504 0106 88E5      		ldi r24,88
 505 0108 D807      		cpc r29,r24
 506 010a 00F0      		brlo .+2
 507 010c 00C0      		rjmp .L38
 508 010e C115      		cp r28,__zero_reg__
 509 0110 26E5      		ldi r18,86
 510 0112 D207      		cpc r29,r18
 511 0114 00F0      		brlo .+2
 512 0116 00C0      		rjmp .L17
 513               	.LVL36:
 120:quantum/keymap_common.c ****             break;
 514               		.loc 2 120 0
 515 0118 DC2F      		mov r29,r28
 516 011a CC27      		clr r28
 517               	.LVL37:
 518 011c CC27      		clr r28
 519 011e DF71      		andi r29,31
 520               	.LVL38:
 521 0120 D062      		ori r29,32
 522               	.LVL39:
 121:quantum/keymap_common.c ****         case QK_LAYER_TAP_TOGGLE ... QK_LAYER_TAP_TOGGLE_MAX:
 523               		.loc 2 121 0
 524 0122 00C0      		rjmp .L21
 525               	.LVL40:
 526               	.L37:
  52:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 527               		.loc 2 52 0
 528 0124 C115      		cp r28,__zero_reg__
 529 0126 8AE5      		ldi r24,90
 530 0128 D807      		cpc r29,r24
 531 012a 00F4      		brsh .+2
 532 012c 00C0      		rjmp .L40
 533 012e CE01      		movw r24,r28
 534 0130 9056      		subi r25,96
 535 0132 8115      		cp r24,__zero_reg__
 536 0134 9042      		sbci r25,32
 537 0136 00F0      		brlo .+2
 538 0138 00C0      		rjmp .L17
 131:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 539               		.loc 2 131 0
 540 013a 8D2F      		mov r24,r29
 541 013c 8F71      		andi r24,lo8(31)
 542 013e 0E94 0000 		call mod_config
 543               	.LVL41:
 132:quantum/keymap_common.c ****             break;
 544               		.loc 2 132 0
 545 0142 DD27      		clr r29
 546               	.LVL42:
 547 0144 D062      		ori r29,32
 548 0146 90E0      		ldi r25,0
 549 0148 982F      		mov r25,r24
 550 014a 8827      		clr r24
 551               	.LVL43:
 552 014c 8827      		clr r24
 553 014e 9F71      		andi r25,31
 554               	.LVL44:
 555 0150 C82B      		or r28,r24
 556               	.LVL45:
 557 0152 D92B      		or r29,r25
 133:quantum/keymap_common.c ****     #ifdef BACKLIGHT_ENABLE
 558               		.loc 2 133 0
 559 0154 00C0      		rjmp .L21
 560               	.LVL46:
 561               	.L23:
  61:quantum/keymap_common.c ****             break;
 562               		.loc 2 61 0
 563 0156 C53A      		cpi r28,-91
 564 0158 D105      		cpc r29,__zero_reg__
 565 015a 01F4      		brne .+2
 566 015c 00C0      		rjmp .L43
  61:quantum/keymap_common.c ****             break;
 567               		.loc 2 61 0 is_stmt 0 discriminator 1
 568 015e C63A      		cpi r28,-90
 569 0160 D105      		cpc r29,__zero_reg__
 570 0162 01F4      		brne .+2
 571 0164 00C0      		rjmp .L44
 572               	.LVL47:
  61:quantum/keymap_common.c ****             break;
 573               		.loc 2 61 0
 574 0166 C3E8      		ldi r28,lo8(-125)
 575 0168 D0E4      		ldi r29,lo8(64)
 576               	.LVL48:
 577               	.L21:
 165:quantum/keymap_common.c **** 
 578               		.loc 2 165 0 is_stmt 1
 579 016a CE01      		movw r24,r28
 580               	/* epilogue start */
 581 016c DF91      		pop r29
 582 016e CF91      		pop r28
 583 0170 0895      		ret
 584               	.LVL49:
 585               	.L24:
  64:quantum/keymap_common.c ****             break;
 586               		.loc 2 64 0
 587 0172 C83A      		cpi r28,-88
 588 0174 D105      		cpc r29,__zero_reg__
 589 0176 01F4      		brne .+2
 590 0178 00C0      		rjmp .L45
  64:quantum/keymap_common.c ****             break;
 591               		.loc 2 64 0 is_stmt 0 discriminator 1
 592 017a C93A      		cpi r28,-87
 593 017c D105      		cpc r29,__zero_reg__
 594 017e 01F4      		brne .+2
 595 0180 00C0      		rjmp .L46
  64:quantum/keymap_common.c ****             break;
 596               		.loc 2 64 0 discriminator 3
 597 0182 CA3A      		cpi r28,-86
 598 0184 D105      		cpc r29,__zero_reg__
 599 0186 01F4      		brne .+2
 600 0188 00C0      		rjmp .L47
  64:quantum/keymap_common.c ****             break;
 601               		.loc 2 64 0 discriminator 5
 602 018a CB3A      		cpi r28,-85
 603 018c D105      		cpc r29,__zero_reg__
 604 018e 01F4      		brne .+2
 605 0190 00C0      		rjmp .L48
  64:quantum/keymap_common.c ****             break;
 606               		.loc 2 64 0 discriminator 7
 607 0192 CC3A      		cpi r28,-84
 608 0194 D105      		cpc r29,__zero_reg__
 609 0196 01F4      		brne .+2
 610 0198 00C0      		rjmp .L49
  64:quantum/keymap_common.c ****             break;
 611               		.loc 2 64 0 discriminator 9
 612 019a CB3B      		cpi r28,-69
 613 019c D105      		cpc r29,__zero_reg__
 614 019e 01F4      		brne .+2
 615 01a0 00C0      		rjmp .L50
  64:quantum/keymap_common.c ****             break;
 616               		.loc 2 64 0 discriminator 11
 617 01a2 CC3B      		cpi r28,-68
 618 01a4 D105      		cpc r29,__zero_reg__
 619 01a6 01F4      		brne .+2
 620 01a8 00C0      		rjmp .L51
  64:quantum/keymap_common.c ****             break;
 621               		.loc 2 64 0 discriminator 13
 622 01aa CD3A      		cpi r28,-83
 623 01ac D105      		cpc r29,__zero_reg__
 624 01ae 01F4      		brne .+2
 625 01b0 00C0      		rjmp .L52
  64:quantum/keymap_common.c ****             break;
 626               		.loc 2 64 0 discriminator 15
 627 01b2 C03B      		cpi r28,-80
 628 01b4 D105      		cpc r29,__zero_reg__
 629 01b6 01F4      		brne .+2
 630 01b8 00C0      		rjmp .L53
  64:quantum/keymap_common.c ****             break;
 631               		.loc 2 64 0 discriminator 17
 632 01ba CE3A      		cpi r28,-82
 633 01bc D105      		cpc r29,__zero_reg__
 634 01be 01F4      		brne .+2
 635 01c0 00C0      		rjmp .L54
  64:quantum/keymap_common.c ****             break;
 636               		.loc 2 64 0 discriminator 19
 637 01c2 CF3A      		cpi r28,-81
 638 01c4 D105      		cpc r29,__zero_reg__
 639 01c6 01F4      		brne .+2
 640 01c8 00C0      		rjmp .L55
  64:quantum/keymap_common.c ****             break;
 641               		.loc 2 64 0 discriminator 21
 642 01ca C13B      		cpi r28,-79
 643 01cc D105      		cpc r29,__zero_reg__
 644 01ce 01F4      		brne .+2
 645 01d0 00C0      		rjmp .L56
  64:quantum/keymap_common.c ****             break;
 646               		.loc 2 64 0 discriminator 23
 647 01d2 C23B      		cpi r28,-78
 648 01d4 D105      		cpc r29,__zero_reg__
 649 01d6 01F4      		brne .+2
 650 01d8 00C0      		rjmp .L57
  64:quantum/keymap_common.c ****             break;
 651               		.loc 2 64 0 discriminator 25
 652 01da C33B      		cpi r28,-77
 653 01dc D105      		cpc r29,__zero_reg__
 654 01de 01F4      		brne .+2
 655 01e0 00C0      		rjmp .L58
  64:quantum/keymap_common.c ****             break;
 656               		.loc 2 64 0 discriminator 27
 657 01e2 C43B      		cpi r28,-76
 658 01e4 D105      		cpc r29,__zero_reg__
 659 01e6 01F4      		brne .+2
 660 01e8 00C0      		rjmp .L59
  64:quantum/keymap_common.c ****             break;
 661               		.loc 2 64 0 discriminator 29
 662 01ea C53B      		cpi r28,-75
 663 01ec D105      		cpc r29,__zero_reg__
 664 01ee 01F4      		brne .+2
 665 01f0 00C0      		rjmp .L60
  64:quantum/keymap_common.c ****             break;
 666               		.loc 2 64 0 discriminator 31
 667 01f2 C63B      		cpi r28,-74
 668 01f4 D105      		cpc r29,__zero_reg__
 669 01f6 01F4      		brne .+2
 670 01f8 00C0      		rjmp .L61
  64:quantum/keymap_common.c ****             break;
 671               		.loc 2 64 0 discriminator 33
 672 01fa C73B      		cpi r28,-73
 673 01fc D105      		cpc r29,__zero_reg__
 674 01fe 01F4      		brne .+2
 675 0200 00C0      		rjmp .L62
  64:quantum/keymap_common.c ****             break;
 676               		.loc 2 64 0 discriminator 35
 677 0202 C83B      		cpi r28,-72
 678 0204 D105      		cpc r29,__zero_reg__
 679 0206 01F4      		brne .+2
 680 0208 00C0      		rjmp .L63
  64:quantum/keymap_common.c ****             break;
 681               		.loc 2 64 0 discriminator 37
 682 020a C93B      		cpi r28,-71
 683 020c D105      		cpc r29,__zero_reg__
 684 020e 01F4      		brne .+2
 685 0210 00C0      		rjmp .L64
  64:quantum/keymap_common.c ****             break;
 686               		.loc 2 64 0 discriminator 39
 687 0212 CA3B      		cpi r28,-70
 688 0214 D105      		cpc r29,__zero_reg__
 689 0216 01F0      		breq .+2
 690 0218 00C0      		rjmp .L65
 691               	.LVL50:
  64:quantum/keymap_common.c ****             break;
 692               		.loc 2 64 0
 693 021a CAE2      		ldi r28,lo8(42)
 694 021c D6E4      		ldi r29,lo8(70)
 695 021e 00C0      		rjmp .L21
 696               	.LVL51:
 697               	.L71:
 698 0220 CE01      		movw r24,r28
 699 0222 9927      		clr r25
  83:quantum/keymap_common.c ****                 action.code = ACTION_MACRO_TAP(keycode & 0xFF);
 700               		.loc 2 83 0 is_stmt 1
 701 0224 D3FF      		sbrs r29,3
 702 0226 00C0      		rjmp .L42
 703               	.LVL52:
  84:quantum/keymap_common.c ****             else
 704               		.loc 2 84 0
 705 0228 EC01      		movw r28,r24
 706 022a D86C      		ori r29,200
 707               	.LVL53:
 708 022c 00C0      		rjmp .L21
 709               	.LVL54:
 710               	.L42:
  86:quantum/keymap_common.c ****             break;
 711               		.loc 2 86 0
 712 022e EC01      		movw r28,r24
 713 0230 D06C      		ori r29,192
 714               	.LVL55:
 715 0232 00C0      		rjmp .L21
 716               	.LVL56:
 717               	.L19:
  89:quantum/keymap_common.c ****             break;
 718               		.loc 2 89 0
 719 0234 DF70      		andi r29,15
 720               	.LVL57:
 721 0236 D06A      		ori r29,160
 722               	.LVL58:
  90:quantum/keymap_common.c ****         case QK_TO ... QK_TO_MAX: ;
 723               		.loc 2 90 0
 724 0238 00C0      		rjmp .L21
 725               	.LVL59:
 726               	.L72:
  93:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 727               		.loc 2 93 0
 728 023a CE01      		movw r24,r28
 729 023c E4E0      		ldi r30,4
 730               		1:
 731 023e 9695      		lsr r25
 732 0240 8795      		ror r24
 733 0242 EA95      		dec r30
 734 0244 01F4      		brne 1b
 735 0246 8370      		andi r24,lo8(3)
  95:quantum/keymap_common.c ****             break;
 736               		.loc 2 95 0
 737 0248 9C2F      		mov r25,r28
 738 024a 9370      		andi r25,lo8(3)
 739 024c 21E0      		ldi r18,lo8(1)
 740 024e 30E0      		ldi r19,0
 741 0250 00C0      		rjmp 2f
 742               		1:
 743 0252 220F      		lsl r18
 744 0254 331F      		rol r19
 745               		2:
 746 0256 9A95      		dec r25
 747 0258 02F4      		brpl 1b
 748 025a 3C68      		ori r19,140
 749 025c 382B      		or r19,r24
 750 025e C695      		lsr r28
 751 0260 C695      		lsr r28
 752               	.LVL60:
 753 0262 C370      		andi r28,lo8(3)
 754 0264 80E2      		ldi r24,lo8(32)
 755 0266 C89F      		mul r28,r24
 756 0268 E001      		movw r28,r0
 757 026a 1124      		clr __zero_reg__
 758               	.LVL61:
 759 026c C22B      		or r28,r18
 760               	.LVL62:
 761 026e D32B      		or r29,r19
  96:quantum/keymap_common.c ****         case QK_MOMENTARY ... QK_MOMENTARY_MAX: ;
 762               		.loc 2 96 0
 763 0270 00C0      		rjmp .L21
 764               	.LVL63:
 765               	.L73:
 110:quantum/keymap_common.c ****             break;
 766               		.loc 2 110 0
 767 0272 C1E0      		ldi r28,lo8(1)
 768 0274 D0E0      		ldi r29,0
 769               	.LVL64:
 770 0276 00C0      		rjmp 2f
 771               		1:
 772 0278 CC0F      		lsl r28
 773 027a DD1F      		rol r29
 774               		2:
 775 027c 2A95      		dec r18
 776 027e 02F4      		brpl 1b
 777 0280 20E2      		ldi r18,lo8(32)
 778 0282 929F      		mul r25,r18
 779 0284 C001      		movw r24,r0
 780 0286 1124      		clr __zero_reg__
 781 0288 C82B      		or r28,r24
 782 028a D92B      		or r29,r25
 783               	.LVL65:
 784 028c DA68      		ori r29,138
 785               	.LVL66:
 111:quantum/keymap_common.c ****         case QK_ONE_SHOT_LAYER ... QK_ONE_SHOT_LAYER_MAX: ;
 786               		.loc 2 111 0
 787 028e 00C0      		rjmp .L21
 788               	.LVL67:
 789               	.L31:
 115:quantum/keymap_common.c ****             break;
 790               		.loc 2 115 0
 791 0290 DC2F      		mov r29,r28
 792 0292 CC27      		clr r28
 793               	.LVL68:
 794 0294 C46F      		ori r28,244
 795 0296 D06A      		ori r29,160
 796               	.LVL69:
 116:quantum/keymap_common.c ****         case QK_ONE_SHOT_MOD ... QK_ONE_SHOT_MOD_MAX: ;
 797               		.loc 2 116 0
 798 0298 00C0      		rjmp .L21
 799               	.LVL70:
 800               	.L38:
 123:quantum/keymap_common.c ****             break;
 801               		.loc 2 123 0
 802 029a DC2F      		mov r29,r28
 803 029c CC27      		clr r28
 804               	.LVL71:
 805 029e C06F      		ori r28,240
 806 02a0 D06A      		ori r29,160
 807               	.LVL72:
 124:quantum/keymap_common.c ****         case QK_LAYER_MOD ... QK_LAYER_MOD_MAX:
 808               		.loc 2 124 0
 809 02a2 00C0      		rjmp .L21
 810               	.LVL73:
 811               	.L40:
 127:quantum/keymap_common.c ****             action.code = ACTION_LAYER_MODS(action_layer, mod);
 812               		.loc 2 127 0
 813 02a4 CE01      		movw r24,r28
 814 02a6 34E0      		ldi r19,4
 815               		1:
 816 02a8 9695      		lsr r25
 817 02aa 8795      		ror r24
 818 02ac 3A95      		dec r19
 819 02ae 01F4      		brne 1b
 820 02b0 8F70      		andi r24,lo8(15)
 126:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 821               		.loc 2 126 0
 822 02b2 CF70      		andi r28,lo8(15)
 823               	.LVL74:
 128:quantum/keymap_common.c ****             break;
 824               		.loc 2 128 0
 825 02b4 C06E      		ori r28,lo8(-32)
 826 02b6 D0E0      		ldi r29,0
 827 02b8 D06A      		ori r29,160
 828               	.LVL75:
 829 02ba D82B      		or r29,r24
 830               	.LVL76:
 129:quantum/keymap_common.c ****         case QK_MOD_TAP ... QK_MOD_TAP_MAX:
 831               		.loc 2 129 0
 832 02bc 00C0      		rjmp .L21
 833               	.LVL77:
 834               	.L43:
  61:quantum/keymap_common.c ****             break;
 835               		.loc 2 61 0
 836 02be C1E8      		ldi r28,lo8(-127)
 837 02c0 D0E4      		ldi r29,lo8(64)
 838 02c2 00C0      		rjmp .L21
 839               	.LVL78:
 840               	.L44:
 841 02c4 C2E8      		ldi r28,lo8(-126)
 842 02c6 D0E4      		ldi r29,lo8(64)
 843 02c8 00C0      		rjmp .L21
 844               	.LVL79:
 845               	.L45:
  64:quantum/keymap_common.c ****             break;
 846               		.loc 2 64 0
 847 02ca C2EE      		ldi r28,lo8(-30)
 848 02cc D4E4      		ldi r29,lo8(68)
 849 02ce 00C0      		rjmp .L21
 850               	.LVL80:
 851               	.L46:
 852 02d0 C9EE      		ldi r28,lo8(-23)
 853 02d2 D4E4      		ldi r29,lo8(68)
 854 02d4 00C0      		rjmp .L21
 855               	.LVL81:
 856               	.L47:
 857 02d6 CAEE      		ldi r28,lo8(-22)
 858 02d8 D4E4      		ldi r29,lo8(68)
 859 02da 00C0      		rjmp .L21
 860               	.LVL82:
 861               	.L48:
 862 02dc C5EB      		ldi r28,lo8(-75)
 863 02de D4E4      		ldi r29,lo8(68)
 864 02e0 00C0      		rjmp .L21
 865               	.LVL83:
 866               	.L49:
 867 02e2 C6EB      		ldi r28,lo8(-74)
 868 02e4 D4E4      		ldi r29,lo8(68)
 869 02e6 00C0      		rjmp .L21
 870               	.LVL84:
 871               	.L50:
 872 02e8 C3EB      		ldi r28,lo8(-77)
 873 02ea D4E4      		ldi r29,lo8(68)
 874 02ec 00C0      		rjmp .L21
 875               	.LVL85:
 876               	.L51:
 877 02ee C4EB      		ldi r28,lo8(-76)
 878 02f0 D4E4      		ldi r29,lo8(68)
 879 02f2 00C0      		rjmp .L21
 880               	.LVL86:
 881               	.L52:
 882 02f4 C7EB      		ldi r28,lo8(-73)
 883 02f6 D4E4      		ldi r29,lo8(68)
 884 02f8 00C0      		rjmp .L21
 885               	.LVL87:
 886               	.L53:
 887 02fa CCEC      		ldi r28,lo8(-52)
 888 02fc D4E4      		ldi r29,lo8(68)
 889 02fe 00C0      		rjmp .L21
 890               	.LVL88:
 891               	.L54:
 892 0300 CDEC      		ldi r28,lo8(-51)
 893 0302 D4E4      		ldi r29,lo8(68)
 894 0304 00C0      		rjmp .L21
 895               	.LVL89:
 896               	.L55:
 897 0306 C3E8      		ldi r28,lo8(-125)
 898 0308 D5E4      		ldi r29,lo8(69)
 899 030a 00C0      		rjmp .L21
 900               	.LVL90:
 901               	.L56:
 902 030c CAE8      		ldi r28,lo8(-118)
 903 030e D5E4      		ldi r29,lo8(69)
 904 0310 00C0      		rjmp .L21
 905               	.LVL91:
 906               	.L57:
 907 0312 C2E9      		ldi r28,lo8(-110)
 908 0314 D5E4      		ldi r29,lo8(69)
 909 0316 00C0      		rjmp .L21
 910               	.LVL92:
 911               	.L58:
 912 0318 C4E9      		ldi r28,lo8(-108)
 913 031a D5E4      		ldi r29,lo8(69)
 914 031c 00C0      		rjmp .L21
 915               	.LVL93:
 916               	.L59:
 917 031e C1E2      		ldi r28,lo8(33)
 918 0320 D6E4      		ldi r29,lo8(70)
 919 0322 00C0      		rjmp .L21
 920               	.LVL94:
 921               	.L60:
 922 0324 C3E2      		ldi r28,lo8(35)
 923 0326 D6E4      		ldi r29,lo8(70)
 924 0328 00C0      		rjmp .L21
 925               	.LVL95:
 926               	.L61:
 927 032a C4E2      		ldi r28,lo8(36)
 928 032c D6E4      		ldi r29,lo8(70)
 929 032e 00C0      		rjmp .L21
 930               	.LVL96:
 931               	.L62:
 932 0330 C5E2      		ldi r28,lo8(37)
 933 0332 D6E4      		ldi r29,lo8(70)
 934 0334 00C0      		rjmp .L21
 935               	.LVL97:
 936               	.L63:
 937 0336 C6E2      		ldi r28,lo8(38)
 938 0338 D6E4      		ldi r29,lo8(70)
 939 033a 00C0      		rjmp .L21
 940               	.LVL98:
 941               	.L64:
 942 033c C7E2      		ldi r28,lo8(39)
 943 033e D6E4      		ldi r29,lo8(70)
 944 0340 00C0      		rjmp .L21
 945               	.LVL99:
 946               	.L65:
 947 0342 C0E0      		ldi r28,0
 948 0344 D4E4      		ldi r29,lo8(68)
 949 0346 00C0      		rjmp .L21
 950               		.cfi_endproc
 951               	.LFE29:
 953               		.weak	fn_actions
 954               		.section	.progmem.data.fn_actions,"a",@progbits
 957               	fn_actions:
 958               		.text
 959               	.Letext0:
 960               		.file 3 "/usr/local/Cellar/avr-gcc@7/7.3.0/avr/include/stdint.h"
 961               		.file 4 "./tmk_core/common/keyboard.h"
 962               		.file 5 "./tmk_core/common/keycode.h"
 963               		.file 6 "./tmk_core/common/action_code.h"
 964               		.file 7 "/usr/local/Cellar/avr-gcc@7/7.3.0/lib/avr-gcc/7/gcc/avr/7.3.0/include/stddef.h"
 965               		.file 8 "./tmk_core/common/action_macro.h"
 966               		.file 9 "./tmk_core/common/action.h"
 967               		.file 10 "./tmk_core/common/report.h"
 968               		.file 11 "./tmk_core/common/host.h"
 969               		.file 12 "./tmk_core/common/debug.h"
 970               		.file 13 "quantum/keycode_config.h"
 971               		.file 14 "quantum/quantum_keycodes.h"
 972               		.file 15 "quantum/keymap.h"
 973               		.file 16 "./tmk_core/common/action_layer.h"
 974               		.file 17 "/usr/local/Cellar/avr-gcc@7/7.3.0/avr/include/stdio.h"
 975               		.file 18 "./tmk_core/common/timer.h"
 976               		.file 19 "./tmk_core/common/action_util.h"
 977               		.file 20 "/usr/local/Cellar/avr-gcc@7/7.3.0/avr/include/stdlib.h"
 978               		.file 21 "./quantum/process_keycode/process_tap_dance.h"
 979               		.file 22 "quantum/quantum.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keymap_common.c
/var/folders/x3/bbndryhj5bd9s7h49yn0kv480000gn/T//ccxPN7lr.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/x3/bbndryhj5bd9s7h49yn0kv480000gn/T//ccxPN7lr.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/x3/bbndryhj5bd9s7h49yn0kv480000gn/T//ccxPN7lr.s:4      *ABS*:000000000000003f __SREG__
/var/folders/x3/bbndryhj5bd9s7h49yn0kv480000gn/T//ccxPN7lr.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/x3/bbndryhj5bd9s7h49yn0kv480000gn/T//ccxPN7lr.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/x3/bbndryhj5bd9s7h49yn0kv480000gn/T//ccxPN7lr.s:13     .text.rgblight_toggle:0000000000000000 rgblight_toggle
/var/folders/x3/bbndryhj5bd9s7h49yn0kv480000gn/T//ccxPN7lr.s:31     .text.rgblight_step:0000000000000000 rgblight_step
/var/folders/x3/bbndryhj5bd9s7h49yn0kv480000gn/T//ccxPN7lr.s:46     .text.rgblight_step_reverse:0000000000000000 rgblight_step_reverse
/var/folders/x3/bbndryhj5bd9s7h49yn0kv480000gn/T//ccxPN7lr.s:61     .text.rgblight_increase_hue:0000000000000000 rgblight_increase_hue
/var/folders/x3/bbndryhj5bd9s7h49yn0kv480000gn/T//ccxPN7lr.s:76     .text.rgblight_decrease_hue:0000000000000000 rgblight_decrease_hue
/var/folders/x3/bbndryhj5bd9s7h49yn0kv480000gn/T//ccxPN7lr.s:91     .text.rgblight_increase_sat:0000000000000000 rgblight_increase_sat
/var/folders/x3/bbndryhj5bd9s7h49yn0kv480000gn/T//ccxPN7lr.s:106    .text.rgblight_decrease_sat:0000000000000000 rgblight_decrease_sat
/var/folders/x3/bbndryhj5bd9s7h49yn0kv480000gn/T//ccxPN7lr.s:121    .text.rgblight_increase_val:0000000000000000 rgblight_increase_val
/var/folders/x3/bbndryhj5bd9s7h49yn0kv480000gn/T//ccxPN7lr.s:136    .text.rgblight_decrease_val:0000000000000000 rgblight_decrease_val
/var/folders/x3/bbndryhj5bd9s7h49yn0kv480000gn/T//ccxPN7lr.s:151    .text.rgblight_increase_speed:0000000000000000 rgblight_increase_speed
/var/folders/x3/bbndryhj5bd9s7h49yn0kv480000gn/T//ccxPN7lr.s:166    .text.rgblight_decrease_speed:0000000000000000 rgblight_decrease_speed
/var/folders/x3/bbndryhj5bd9s7h49yn0kv480000gn/T//ccxPN7lr.s:181    .text.action_get_macro:0000000000000000 action_get_macro
/var/folders/x3/bbndryhj5bd9s7h49yn0kv480000gn/T//ccxPN7lr.s:203    .text.action_function:0000000000000000 action_function
/var/folders/x3/bbndryhj5bd9s7h49yn0kv480000gn/T//ccxPN7lr.s:221    .text.keymap_key_to_keycode:0000000000000000 keymap_key_to_keycode
/var/folders/x3/bbndryhj5bd9s7h49yn0kv480000gn/T//ccxPN7lr.s:270    .text.keymap_function_id_to_action:0000000000000000 keymap_function_id_to_action
/var/folders/x3/bbndryhj5bd9s7h49yn0kv480000gn/T//ccxPN7lr.s:957    .progmem.data.fn_actions:0000000000000000 fn_actions
/var/folders/x3/bbndryhj5bd9s7h49yn0kv480000gn/T//ccxPN7lr.s:306    .text.action_for_key:0000000000000000 action_for_key

UNDEFINED SYMBOLS
keymaps
keycode_config
mod_config
