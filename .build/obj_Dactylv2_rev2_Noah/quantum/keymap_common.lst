   1               		.file	"keymap_common.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.rgblight_toggle,"ax",@progbits
  11               		.weak	rgblight_toggle
  13               	rgblight_toggle:
  14               	.LFB53:
  15               		.cfi_startproc
  16               	/* prologue: function */
  17               	/* frame size = 0 */
  18               	/* stack size = 0 */
  19               	.L__stack_usage = 0
  20 0000 0895      		ret
  21               		.cfi_endproc
  22               	.LFE53:
  24               		.section	.text.rgblight_step,"ax",@progbits
  25               		.weak	rgblight_step
  27               	rgblight_step:
  28               	.LFB51:
  29               		.cfi_startproc
  30               	/* prologue: function */
  31               	/* frame size = 0 */
  32               	/* stack size = 0 */
  33               	.L__stack_usage = 0
  34 0000 0895      		ret
  35               		.cfi_endproc
  36               	.LFE51:
  38               		.section	.text.rgblight_step_reverse,"ax",@progbits
  39               		.weak	rgblight_step_reverse
  41               	rgblight_step_reverse:
  42               	.LFB49:
  43               		.cfi_startproc
  44               	/* prologue: function */
  45               	/* frame size = 0 */
  46               	/* stack size = 0 */
  47               	.L__stack_usage = 0
  48 0000 0895      		ret
  49               		.cfi_endproc
  50               	.LFE49:
  52               		.section	.text.rgblight_increase_hue,"ax",@progbits
  53               		.weak	rgblight_increase_hue
  55               	rgblight_increase_hue:
  56               	.LFB47:
  57               		.cfi_startproc
  58               	/* prologue: function */
  59               	/* frame size = 0 */
  60               	/* stack size = 0 */
  61               	.L__stack_usage = 0
  62 0000 0895      		ret
  63               		.cfi_endproc
  64               	.LFE47:
  66               		.section	.text.rgblight_decrease_hue,"ax",@progbits
  67               		.weak	rgblight_decrease_hue
  69               	rgblight_decrease_hue:
  70               	.LFB45:
  71               		.cfi_startproc
  72               	/* prologue: function */
  73               	/* frame size = 0 */
  74               	/* stack size = 0 */
  75               	.L__stack_usage = 0
  76 0000 0895      		ret
  77               		.cfi_endproc
  78               	.LFE45:
  80               		.section	.text.rgblight_increase_sat,"ax",@progbits
  81               		.weak	rgblight_increase_sat
  83               	rgblight_increase_sat:
  84               	.LFB43:
  85               		.cfi_startproc
  86               	/* prologue: function */
  87               	/* frame size = 0 */
  88               	/* stack size = 0 */
  89               	.L__stack_usage = 0
  90 0000 0895      		ret
  91               		.cfi_endproc
  92               	.LFE43:
  94               		.section	.text.rgblight_decrease_sat,"ax",@progbits
  95               		.weak	rgblight_decrease_sat
  97               	rgblight_decrease_sat:
  98               	.LFB41:
  99               		.cfi_startproc
 100               	/* prologue: function */
 101               	/* frame size = 0 */
 102               	/* stack size = 0 */
 103               	.L__stack_usage = 0
 104 0000 0895      		ret
 105               		.cfi_endproc
 106               	.LFE41:
 108               		.section	.text.rgblight_increase_val,"ax",@progbits
 109               		.weak	rgblight_increase_val
 111               	rgblight_increase_val:
 112               	.LFB39:
 113               		.cfi_startproc
 114               	/* prologue: function */
 115               	/* frame size = 0 */
 116               	/* stack size = 0 */
 117               	.L__stack_usage = 0
 118 0000 0895      		ret
 119               		.cfi_endproc
 120               	.LFE39:
 122               		.section	.text.rgblight_decrease_val,"ax",@progbits
 123               		.weak	rgblight_decrease_val
 125               	rgblight_decrease_val:
 126               	.LFB37:
 127               		.cfi_startproc
 128               	/* prologue: function */
 129               	/* frame size = 0 */
 130               	/* stack size = 0 */
 131               	.L__stack_usage = 0
 132 0000 0895      		ret
 133               		.cfi_endproc
 134               	.LFE37:
 136               		.section	.text.rgblight_increase_speed,"ax",@progbits
 137               		.weak	rgblight_increase_speed
 139               	rgblight_increase_speed:
 140               	.LFB35:
 141               		.cfi_startproc
 142               	/* prologue: function */
 143               	/* frame size = 0 */
 144               	/* stack size = 0 */
 145               	.L__stack_usage = 0
 146 0000 0895      		ret
 147               		.cfi_endproc
 148               	.LFE35:
 150               		.section	.text.rgblight_decrease_speed,"ax",@progbits
 151               		.weak	rgblight_decrease_speed
 153               	rgblight_decrease_speed:
 154               	.LFB21:
 155               		.file 1 "quantum/rgb.h"
   1:quantum/rgb.h **** /* Copyright 2017 Jack Humbert
   2:quantum/rgb.h ****  *
   3:quantum/rgb.h ****  * This program is free software: you can redistribute it and/or modify
   4:quantum/rgb.h ****  * it under the terms of the GNU General Public License as published by
   5:quantum/rgb.h ****  * the Free Software Foundation, either version 2 of the License, or
   6:quantum/rgb.h ****  * (at your option) any later version.
   7:quantum/rgb.h ****  *
   8:quantum/rgb.h ****  * This program is distributed in the hope that it will be useful,
   9:quantum/rgb.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:quantum/rgb.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:quantum/rgb.h ****  * GNU General Public License for more details.
  12:quantum/rgb.h ****  *
  13:quantum/rgb.h ****  * You should have received a copy of the GNU General Public License
  14:quantum/rgb.h ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:quantum/rgb.h ****  */
  16:quantum/rgb.h **** 
  17:quantum/rgb.h **** #ifndef RGB_H
  18:quantum/rgb.h **** #define RGB_H
  19:quantum/rgb.h **** 
  20:quantum/rgb.h **** __attribute__((weak))
  21:quantum/rgb.h **** void rgblight_toggle(void) {};
  22:quantum/rgb.h **** 
  23:quantum/rgb.h **** __attribute__((weak))
  24:quantum/rgb.h **** void rgblight_step(void) {};
  25:quantum/rgb.h **** 
  26:quantum/rgb.h **** __attribute__((weak))
  27:quantum/rgb.h **** void rgblight_step_reverse(void) {};
  28:quantum/rgb.h **** 
  29:quantum/rgb.h **** __attribute__((weak))
  30:quantum/rgb.h **** void rgblight_increase_hue(void) {};
  31:quantum/rgb.h **** 
  32:quantum/rgb.h **** __attribute__((weak))
  33:quantum/rgb.h **** void rgblight_decrease_hue(void) {};
  34:quantum/rgb.h **** 
  35:quantum/rgb.h **** __attribute__((weak))
  36:quantum/rgb.h **** void rgblight_increase_sat(void) {};
  37:quantum/rgb.h **** 
  38:quantum/rgb.h **** __attribute__((weak))
  39:quantum/rgb.h **** void rgblight_decrease_sat(void) {};
  40:quantum/rgb.h **** 
  41:quantum/rgb.h **** __attribute__((weak))
  42:quantum/rgb.h **** void rgblight_increase_val(void) {};
  43:quantum/rgb.h **** 
  44:quantum/rgb.h **** __attribute__((weak))
  45:quantum/rgb.h **** void rgblight_decrease_val(void) {};
  46:quantum/rgb.h **** 
  47:quantum/rgb.h **** __attribute__((weak))
  48:quantum/rgb.h **** void rgblight_increase_speed(void) {};
  49:quantum/rgb.h **** 
  50:quantum/rgb.h **** __attribute__((weak))
  51:quantum/rgb.h **** void rgblight_decrease_speed(void) {};
 156               		.loc 1 51 0
 157               		.cfi_startproc
 158               	/* prologue: function */
 159               	/* frame size = 0 */
 160               	/* stack size = 0 */
 161               	.L__stack_usage = 0
 162 0000 0895      		ret
 163               		.cfi_endproc
 164               	.LFE21:
 166               		.section	.text.action_get_macro,"ax",@progbits
 167               		.weak	action_get_macro
 169               	action_get_macro:
 170               	.LFB30:
 171               		.file 2 "quantum/keymap_common.c"
   1:quantum/keymap_common.c **** /*
   2:quantum/keymap_common.c **** Copyright 2012-2017 Jun Wako <wakojun@gmail.com>
   3:quantum/keymap_common.c **** 
   4:quantum/keymap_common.c **** This program is free software: you can redistribute it and/or modify
   5:quantum/keymap_common.c **** it under the terms of the GNU General Public License as published by
   6:quantum/keymap_common.c **** the Free Software Foundation, either version 2 of the License, or
   7:quantum/keymap_common.c **** (at your option) any later version.
   8:quantum/keymap_common.c **** 
   9:quantum/keymap_common.c **** This program is distributed in the hope that it will be useful,
  10:quantum/keymap_common.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/keymap_common.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/keymap_common.c **** GNU General Public License for more details.
  13:quantum/keymap_common.c **** 
  14:quantum/keymap_common.c **** You should have received a copy of the GNU General Public License
  15:quantum/keymap_common.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/keymap_common.c **** */
  17:quantum/keymap_common.c **** 
  18:quantum/keymap_common.c **** #include "keymap.h"
  19:quantum/keymap_common.c **** #include "report.h"
  20:quantum/keymap_common.c **** #include "keycode.h"
  21:quantum/keymap_common.c **** #include "action_layer.h"
  22:quantum/keymap_common.c **** #if defined(__AVR__)
  23:quantum/keymap_common.c **** #include <util/delay.h>
  24:quantum/keymap_common.c **** #include <stdio.h>
  25:quantum/keymap_common.c **** #endif
  26:quantum/keymap_common.c **** #include "action.h"
  27:quantum/keymap_common.c **** #include "action_macro.h"
  28:quantum/keymap_common.c **** #include "debug.h"
  29:quantum/keymap_common.c **** #include "backlight.h"
  30:quantum/keymap_common.c **** #include "quantum.h"
  31:quantum/keymap_common.c **** 
  32:quantum/keymap_common.c **** #ifdef MIDI_ENABLE
  33:quantum/keymap_common.c **** 	#include "process_midi.h"
  34:quantum/keymap_common.c **** #endif
  35:quantum/keymap_common.c **** 
  36:quantum/keymap_common.c **** extern keymap_config_t keymap_config;
  37:quantum/keymap_common.c **** 
  38:quantum/keymap_common.c **** #include <inttypes.h>
  39:quantum/keymap_common.c **** 
  40:quantum/keymap_common.c **** /* converts key to action */
  41:quantum/keymap_common.c **** action_t action_for_key(uint8_t layer, keypos_t key)
  42:quantum/keymap_common.c **** {
  43:quantum/keymap_common.c ****     // 16bit keycodes - important
  44:quantum/keymap_common.c ****     uint16_t keycode = keymap_key_to_keycode(layer, key);
  45:quantum/keymap_common.c **** 
  46:quantum/keymap_common.c ****     // keycode remapping
  47:quantum/keymap_common.c ****     keycode = keycode_config(keycode);
  48:quantum/keymap_common.c **** 
  49:quantum/keymap_common.c ****     action_t action;
  50:quantum/keymap_common.c ****     uint8_t action_layer, when, mod;
  51:quantum/keymap_common.c **** 
  52:quantum/keymap_common.c ****     switch (keycode) {
  53:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
  54:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action(FN_INDEX(keycode));
  55:quantum/keymap_common.c ****             break;
  56:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
  57:quantum/keymap_common.c ****         case KC_LCTRL ... KC_RGUI:
  58:quantum/keymap_common.c ****             action.code = ACTION_KEY(keycode);
  59:quantum/keymap_common.c ****             break;
  60:quantum/keymap_common.c ****         case KC_SYSTEM_POWER ... KC_SYSTEM_WAKE:
  61:quantum/keymap_common.c ****             action.code = ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
  62:quantum/keymap_common.c ****             break;
  63:quantum/keymap_common.c ****         case KC_AUDIO_MUTE ... KC_MEDIA_REWIND:
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
  65:quantum/keymap_common.c ****             break;
  66:quantum/keymap_common.c ****         case KC_MS_UP ... KC_MS_ACCEL2:
  67:quantum/keymap_common.c ****             action.code = ACTION_MOUSEKEY(keycode);
  68:quantum/keymap_common.c ****             break;
  69:quantum/keymap_common.c ****         case KC_TRNS:
  70:quantum/keymap_common.c ****             action.code = ACTION_TRANSPARENT;
  71:quantum/keymap_common.c ****             break;
  72:quantum/keymap_common.c ****         case QK_MODS ... QK_MODS_MAX: ;
  73:quantum/keymap_common.c ****             // Has a modifier
  74:quantum/keymap_common.c ****             // Split it up
  75:quantum/keymap_common.c ****             action.code = ACTION_MODS_KEY(keycode >> 8, keycode & 0xFF); // adds modifier to key
  76:quantum/keymap_common.c ****             break;
  77:quantum/keymap_common.c ****         case QK_FUNCTION ... QK_FUNCTION_MAX: ;
  78:quantum/keymap_common.c ****             // Is a shortcut for function action_layer, pull last 12bits
  79:quantum/keymap_common.c ****             // This means we have 4,096 FN macros at our disposal
  80:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action( (int)keycode & 0xFFF );
  81:quantum/keymap_common.c ****             break;
  82:quantum/keymap_common.c ****         case QK_MACRO ... QK_MACRO_MAX:
  83:quantum/keymap_common.c ****             if (keycode & 0x800) // tap macros have upper bit set
  84:quantum/keymap_common.c ****                 action.code = ACTION_MACRO_TAP(keycode & 0xFF);
  85:quantum/keymap_common.c ****             else
  86:quantum/keymap_common.c ****                 action.code = ACTION_MACRO(keycode & 0xFF);
  87:quantum/keymap_common.c ****             break;
  88:quantum/keymap_common.c ****         case QK_LAYER_TAP ... QK_LAYER_TAP_MAX:
  89:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_KEY((keycode >> 0x8) & 0xF, keycode & 0xFF);
  90:quantum/keymap_common.c ****             break;
  91:quantum/keymap_common.c ****         case QK_TO ... QK_TO_MAX: ;
  92:quantum/keymap_common.c ****             // Layer set "GOTO"
  93:quantum/keymap_common.c ****             when = (keycode >> 0x4) & 0x3;
  94:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
  95:quantum/keymap_common.c ****             action.code = ACTION_LAYER_SET(action_layer, when);
  96:quantum/keymap_common.c ****             break;
  97:quantum/keymap_common.c ****         case QK_MOMENTARY ... QK_MOMENTARY_MAX: ;
  98:quantum/keymap_common.c ****             // Momentary action_layer
  99:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 100:quantum/keymap_common.c ****             action.code = ACTION_LAYER_MOMENTARY(action_layer);
 101:quantum/keymap_common.c ****             break;
 102:quantum/keymap_common.c ****         case QK_DEF_LAYER ... QK_DEF_LAYER_MAX: ;
 103:quantum/keymap_common.c ****             // Set default action_layer
 104:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 105:quantum/keymap_common.c ****             action.code = ACTION_DEFAULT_LAYER_SET(action_layer);
 106:quantum/keymap_common.c ****             break;
 107:quantum/keymap_common.c ****         case QK_TOGGLE_LAYER ... QK_TOGGLE_LAYER_MAX: ;
 108:quantum/keymap_common.c ****             // Set toggle
 109:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 110:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TOGGLE(action_layer);
 111:quantum/keymap_common.c ****             break;
 112:quantum/keymap_common.c ****         case QK_ONE_SHOT_LAYER ... QK_ONE_SHOT_LAYER_MAX: ;
 113:quantum/keymap_common.c ****             // OSL(action_layer) - One-shot action_layer
 114:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 115:quantum/keymap_common.c ****             action.code = ACTION_LAYER_ONESHOT(action_layer);
 116:quantum/keymap_common.c ****             break;
 117:quantum/keymap_common.c ****         case QK_ONE_SHOT_MOD ... QK_ONE_SHOT_MOD_MAX: ;
 118:quantum/keymap_common.c ****             // OSM(mod) - One-shot mod
 119:quantum/keymap_common.c ****             mod = keycode & 0xFF;
 120:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 121:quantum/keymap_common.c ****             break;
 122:quantum/keymap_common.c ****         case QK_LAYER_TAP_TOGGLE ... QK_LAYER_TAP_TOGGLE_MAX:
 123:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_TOGGLE(keycode & 0xFF);
 124:quantum/keymap_common.c ****             break;
 125:quantum/keymap_common.c ****         case QK_LAYER_MOD ... QK_LAYER_MOD_MAX:
 126:quantum/keymap_common.c ****             mod = keycode & 0xF;
 127:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 128:quantum/keymap_common.c ****             action.code = ACTION_LAYER_MODS(action_layer, mod);
 129:quantum/keymap_common.c ****             break;
 130:quantum/keymap_common.c ****         case QK_MOD_TAP ... QK_MOD_TAP_MAX:
 131:quantum/keymap_common.c ****             mod = mod_config((keycode >> 0x8) & 0x1F);
 132:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 133:quantum/keymap_common.c ****             break;
 134:quantum/keymap_common.c ****     #ifdef BACKLIGHT_ENABLE
 135:quantum/keymap_common.c ****         case BL_ON:
 136:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_ON();
 137:quantum/keymap_common.c ****             break;
 138:quantum/keymap_common.c ****         case BL_OFF:
 139:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_OFF();
 140:quantum/keymap_common.c ****             break;
 141:quantum/keymap_common.c ****         case BL_DEC:
 142:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_DECREASE();
 143:quantum/keymap_common.c ****             break;
 144:quantum/keymap_common.c ****         case BL_INC:
 145:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_INCREASE();
 146:quantum/keymap_common.c ****             break;
 147:quantum/keymap_common.c ****         case BL_TOGG:
 148:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_TOGGLE();
 149:quantum/keymap_common.c ****             break;
 150:quantum/keymap_common.c ****         case BL_STEP:
 151:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_STEP();
 152:quantum/keymap_common.c ****             break;
 153:quantum/keymap_common.c ****     #endif
 154:quantum/keymap_common.c ****     #ifdef SWAP_HANDS_ENABLE
 155:quantum/keymap_common.c ****         case QK_SWAP_HANDS ... QK_SWAP_HANDS_MAX:
 156:quantum/keymap_common.c ****             action.code = ACTION(ACT_SWAP_HANDS, keycode & 0xff);
 157:quantum/keymap_common.c ****             break;
 158:quantum/keymap_common.c ****     #endif
 159:quantum/keymap_common.c **** 
 160:quantum/keymap_common.c ****         default:
 161:quantum/keymap_common.c ****             action.code = ACTION_NO;
 162:quantum/keymap_common.c ****             break;
 163:quantum/keymap_common.c ****     }
 164:quantum/keymap_common.c ****     return action;
 165:quantum/keymap_common.c **** }
 166:quantum/keymap_common.c **** 
 167:quantum/keymap_common.c **** __attribute__ ((weak))
 168:quantum/keymap_common.c **** const uint16_t PROGMEM fn_actions[] = {
 169:quantum/keymap_common.c **** 
 170:quantum/keymap_common.c **** };
 171:quantum/keymap_common.c **** 
 172:quantum/keymap_common.c **** /* Macro */
 173:quantum/keymap_common.c **** __attribute__ ((weak))
 174:quantum/keymap_common.c **** const macro_t *action_get_macro(keyrecord_t *record, uint8_t id, uint8_t opt)
 175:quantum/keymap_common.c **** {
 172               		.loc 2 175 0
 173               		.cfi_startproc
 174               	.LVL0:
 175               	/* prologue: function */
 176               	/* frame size = 0 */
 177               	/* stack size = 0 */
 178               	.L__stack_usage = 0
 176:quantum/keymap_common.c ****     return MACRO_NONE;
 177:quantum/keymap_common.c **** }
 179               		.loc 2 177 0
 180 0000 80E0      		ldi r24,0
 181 0002 90E0      		ldi r25,0
 182               	.LVL1:
 183 0004 0895      		ret
 184               		.cfi_endproc
 185               	.LFE30:
 187               		.section	.text.action_function,"ax",@progbits
 188               		.weak	action_function
 190               	action_function:
 191               	.LFB31:
 178:quantum/keymap_common.c **** 
 179:quantum/keymap_common.c **** /* Function */
 180:quantum/keymap_common.c **** __attribute__ ((weak))
 181:quantum/keymap_common.c **** void action_function(keyrecord_t *record, uint8_t id, uint8_t opt)
 182:quantum/keymap_common.c **** {
 192               		.loc 2 182 0
 193               		.cfi_startproc
 194               	.LVL2:
 195               	/* prologue: function */
 196               	/* frame size = 0 */
 197               	/* stack size = 0 */
 198               	.L__stack_usage = 0
 199 0000 0895      		ret
 200               		.cfi_endproc
 201               	.LFE31:
 203               		.section	.text.keymap_key_to_keycode,"ax",@progbits
 204               		.weak	keymap_key_to_keycode
 206               	keymap_key_to_keycode:
 207               	.LFB32:
 183:quantum/keymap_common.c **** }
 184:quantum/keymap_common.c **** 
 185:quantum/keymap_common.c **** // translates key to keycode
 186:quantum/keymap_common.c **** __attribute__ ((weak))
 187:quantum/keymap_common.c **** uint16_t keymap_key_to_keycode(uint8_t layer, keypos_t key)
 188:quantum/keymap_common.c **** {
 208               		.loc 2 188 0
 209               		.cfi_startproc
 210               	.LVL3:
 211               	/* prologue: function */
 212               	/* frame size = 0 */
 213               	/* stack size = 0 */
 214               	.L__stack_usage = 0
 215               	.LBB2:
 189:quantum/keymap_common.c ****     // Read entire word (16bits)
 190:quantum/keymap_common.c ****     return pgm_read_word(&keymaps[(layer)][(key.row)][(key.col)]);
 216               		.loc 2 190 0
 217 0000 24E5      		ldi r18,lo8(84)
 218 0002 829F      		mul r24,r18
 219 0004 C001      		movw r24,r0
 220 0006 1124      		clr __zero_reg__
 221               	.LVL4:
 222 0008 FC01      		movw r30,r24
 223 000a 26E0      		ldi r18,lo8(6)
 224 000c 729F      		mul r23,r18
 225 000e E00D      		add r30,r0
 226 0010 F11D      		adc r31,r1
 227 0012 1124      		clr __zero_reg__
 228 0014 E60F      		add r30,r22
 229 0016 F11D      		adc r31,__zero_reg__
 230 0018 EE0F      		lsl r30
 231 001a FF1F      		rol r31
 232 001c E050      		subi r30,lo8(-(keymaps))
 233 001e F040      		sbci r31,hi8(-(keymaps))
 234               	.LVL5:
 235               	/* #APP */
 236               	 ;  190 "quantum/keymap_common.c" 1
 237 0020 8591      		lpm r24, Z+
 238 0022 9491      		lpm r25, Z
 239               		
 240               	 ;  0 "" 2
 241               	.LVL6:
 242               	/* #NOAPP */
 243               	.LBE2:
 191:quantum/keymap_common.c **** }
 244               		.loc 2 191 0
 245 0024 0895      		ret
 246               		.cfi_endproc
 247               	.LFE32:
 249               		.section	.text.keymap_function_id_to_action,"ax",@progbits
 250               		.weak	keymap_function_id_to_action
 252               	keymap_function_id_to_action:
 253               	.LFB33:
 192:quantum/keymap_common.c **** 
 193:quantum/keymap_common.c **** // translates function id to action
 194:quantum/keymap_common.c **** __attribute__ ((weak))
 195:quantum/keymap_common.c **** uint16_t keymap_function_id_to_action( uint16_t function_id )
 196:quantum/keymap_common.c **** {
 254               		.loc 2 196 0
 255               		.cfi_startproc
 256               	.LVL7:
 257               	/* prologue: function */
 258               	/* frame size = 0 */
 259               	/* stack size = 0 */
 260               	.L__stack_usage = 0
 261               	.LBB3:
 197:quantum/keymap_common.c ****     // The compiler sees the empty (weak) fn_actions and generates a warning
 198:quantum/keymap_common.c ****     // This function should not be called in that case, so the warning is too strict
 199:quantum/keymap_common.c ****     // If this function is called however, the keymap should have overridden fn_actions, and then t
 200:quantum/keymap_common.c ****     // is comparing against the wrong array
 201:quantum/keymap_common.c ****     #pragma GCC diagnostic push
 202:quantum/keymap_common.c ****     #pragma GCC diagnostic ignored "-Warray-bounds"
 203:quantum/keymap_common.c **** 	return pgm_read_word(&fn_actions[function_id]);
 262               		.loc 2 203 0
 263 0000 880F      		lsl r24
 264 0002 991F      		rol r25
 265               	.LVL8:
 266 0004 FC01      		movw r30,r24
 267 0006 E050      		subi r30,lo8(-(fn_actions))
 268 0008 F040      		sbci r31,hi8(-(fn_actions))
 269               	.LVL9:
 270               	/* #APP */
 271               	 ;  203 "quantum/keymap_common.c" 1
 272 000a 8591      		lpm r24, Z+
 273 000c 9491      		lpm r25, Z
 274               		
 275               	 ;  0 "" 2
 276               	.LVL10:
 277               	/* #NOAPP */
 278               	.LBE3:
 204:quantum/keymap_common.c ****     #pragma GCC diagnostic pop
 205:quantum/keymap_common.c **** }
 279               		.loc 2 205 0
 280 000e 0895      		ret
 281               		.cfi_endproc
 282               	.LFE33:
 284               		.section	.text.action_for_key,"ax",@progbits
 285               	.global	action_for_key
 287               	action_for_key:
 288               	.LFB29:
  42:quantum/keymap_common.c ****     // 16bit keycodes - important
 289               		.loc 2 42 0
 290               		.cfi_startproc
 291               	.LVL11:
 292 0000 CF93      		push r28
 293               	.LCFI0:
 294               		.cfi_def_cfa_offset 3
 295               		.cfi_offset 28, -2
 296 0002 DF93      		push r29
 297               	.LCFI1:
 298               		.cfi_def_cfa_offset 4
 299               		.cfi_offset 29, -3
 300               	/* prologue: function */
 301               	/* frame size = 0 */
 302               	/* stack size = 2 */
 303               	.L__stack_usage = 2
  44:quantum/keymap_common.c **** 
 304               		.loc 2 44 0
 305 0004 0E94 0000 		call keymap_key_to_keycode
 306               	.LVL12:
  47:quantum/keymap_common.c **** 
 307               		.loc 2 47 0
 308 0008 0E94 0000 		call keycode_config
 309               	.LVL13:
 310 000c EC01      		movw r28,r24
 311               	.LVL14:
  52:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 312               		.loc 2 52 0
 313 000e 8115      		cp r24,__zero_reg__
 314 0010 9045      		sbci r25,80
 315 0012 00F0      		brlo .+2
 316 0014 00C0      		rjmp .L18
 317 0016 C115      		cp r28,__zero_reg__
 318 0018 80E4      		ldi r24,64
 319 001a D807      		cpc r29,r24
 320               	.LVL15:
 321 001c 00F0      		brlo .+2
 322 001e 00C0      		rjmp .L19
 323 0020 C83E      		cpi r28,-24
 324 0022 D105      		cpc r29,__zero_reg__
 325 0024 00F4      		brsh .L20
 326 0026 C03E      		cpi r28,-32
 327 0028 D105      		cpc r29,__zero_reg__
 328 002a 00F0      		brlo .+2
 329 002c 00C0      		rjmp .L21
 330 002e C83A      		cpi r28,-88
 331 0030 D105      		cpc r29,__zero_reg__
 332 0032 00F4      		brsh .L22
 333 0034 C53A      		cpi r28,-91
 334 0036 D105      		cpc r29,__zero_reg__
 335 0038 00F0      		brlo .+2
 336 003a 00C0      		rjmp .L23
 337 003c C130      		cpi r28,1
 338 003e D105      		cpc r29,__zero_reg__
 339 0040 01F4      		brne .+2
 340 0042 00C0      		rjmp .L21
 341 0044 00F4      		brsh .+2
 342 0046 00C0      		rjmp .L17
 343 0048 C430      		cpi r28,4
 344 004a D105      		cpc r29,__zero_reg__
 345 004c 00F0      		brlo .+2
 346 004e 00C0      		rjmp .L21
 347 0050 00C0      		rjmp .L17
 348               	.L22:
 349 0052 CD3B      		cpi r28,-67
 350 0054 D105      		cpc r29,__zero_reg__
 351 0056 00F4      		brsh .+2
 352 0058 00C0      		rjmp .L24
 353 005a C03C      		cpi r28,-64
 354 005c D105      		cpc r29,__zero_reg__
 355 005e 00F4      		brsh .+2
 356 0060 00C0      		rjmp .L17
  54:quantum/keymap_common.c ****             break;
 357               		.loc 2 54 0
 358 0062 CE01      		movw r24,r28
 359 0064 805C      		subi r24,-64
 360 0066 9109      		sbc r25,__zero_reg__
 361 0068 00C0      		rjmp .L76
 362               	.L20:
  52:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 363               		.loc 2 52 0
 364 006a C115      		cp r28,__zero_reg__
 365 006c 90E2      		ldi r25,32
 366 006e D907      		cpc r29,r25
 367 0070 00F4      		brsh .L26
 368 0072 C115      		cp r28,__zero_reg__
 369 0074 21E0      		ldi r18,1
 370 0076 D207      		cpc r29,r18
 371 0078 00F0      		brlo .+2
 372 007a 00C0      		rjmp .L21
 373 007c C03F      		cpi r28,-16
 374 007e D105      		cpc r29,__zero_reg__
 375 0080 00F4      		brsh .+2
 376 0082 00C0      		rjmp .L17
 377               	.LVL16:
  67:quantum/keymap_common.c ****             break;
 378               		.loc 2 67 0
 379 0084 D065      		ori r29,80
 380               	.LVL17:
  68:quantum/keymap_common.c ****         case KC_TRNS:
 381               		.loc 2 68 0
 382 0086 00C0      		rjmp .L21
 383               	.LVL18:
 384               	.L26:
  52:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 385               		.loc 2 52 0
 386 0088 C115      		cp r28,__zero_reg__
 387 008a 80E3      		ldi r24,48
 388 008c D807      		cpc r29,r24
 389 008e 00F0      		brlo .+2
 390 0090 00C0      		rjmp .L71
  80:quantum/keymap_common.c ****             break;
 391               		.loc 2 80 0
 392 0092 CE01      		movw r24,r28
 393 0094 9F70      		andi r25,15
 394 0096 00C0      		rjmp .L76
 395               	.LVL19:
 396               	.L18:
  52:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 397               		.loc 2 52 0
 398 0098 C115      		cp r28,__zero_reg__
 399 009a 95E5      		ldi r25,85
 400 009c D907      		cpc r29,r25
 401 009e 00F0      		brlo .+2
 402 00a0 00C0      		rjmp .L30
 403 00a2 C115      		cp r28,__zero_reg__
 404 00a4 24E5      		ldi r18,84
 405 00a6 D207      		cpc r29,r18
 406 00a8 00F0      		brlo .+2
 407 00aa 00C0      		rjmp .L31
 408 00ac C115      		cp r28,__zero_reg__
 409 00ae 82E5      		ldi r24,82
 410 00b0 D807      		cpc r29,r24
 411               	.LVL20:
 412 00b2 00F4      		brsh .L32
 413 00b4 C115      		cp r28,__zero_reg__
 414 00b6 91E5      		ldi r25,81
 415 00b8 D907      		cpc r29,r25
 416 00ba 00F0      		brlo .+2
 417 00bc 00C0      		rjmp .L79
 418               	.LVL21:
  95:quantum/keymap_common.c ****             break;
 419               		.loc 2 95 0
 420 00be CE01      		movw r24,r28
 421 00c0 74E0      		ldi r23,4
 422               		1:
 423 00c2 9695      		lsr r25
 424 00c4 8795      		ror r24
 425 00c6 7A95      		dec r23
 426 00c8 01F4      		brne 1b
 427 00ca 282F      		mov r18,r24
 428 00cc 2370      		andi r18,lo8(3)
 429 00ce 3C2F      		mov r19,r28
 430 00d0 3370      		andi r19,lo8(3)
 431 00d2 81E0      		ldi r24,lo8(1)
 432 00d4 90E0      		ldi r25,0
 433 00d6 00C0      		rjmp 2f
 434               		1:
 435 00d8 880F      		lsl r24
 436 00da 991F      		rol r25
 437               		2:
 438 00dc 3A95      		dec r19
 439 00de 02F4      		brpl 1b
 440 00e0 9C68      		ori r25,140
 441 00e2 922B      		or r25,r18
 442 00e4 CF70      		andi r28,lo8(15)
 443               	.LVL22:
 444 00e6 C695      		lsr r28
 445 00e8 C695      		lsr r28
 446 00ea 20E2      		ldi r18,lo8(32)
 447 00ec C29F      		mul r28,r18
 448 00ee E001      		movw r28,r0
 449 00f0 1124      		clr __zero_reg__
 450               	.LVL23:
 451 00f2 C82B      		or r28,r24
 452 00f4 D92B      		or r29,r25
 453               	.LVL24:
  96:quantum/keymap_common.c ****         case QK_MOMENTARY ... QK_MOMENTARY_MAX: ;
 454               		.loc 2 96 0
 455 00f6 00C0      		rjmp .L21
 456               	.LVL25:
 457               	.L32:
 458 00f8 9E01      		movw r18,r28
 459 00fa 2370      		andi r18,3
 460 00fc 3327      		clr r19
 461 00fe 8C2F      		mov r24,r28
 462 0100 8695      		lsr r24
 463 0102 8695      		lsr r24
  52:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 464               		.loc 2 52 0
 465 0104 C115      		cp r28,__zero_reg__
 466 0106 D345      		sbci r29,83
 467 0108 00F0      		brlo .+2
 468 010a 00C0      		rjmp .L73
 469               	.LVL26:
 105:quantum/keymap_common.c ****             break;
 470               		.loc 2 105 0
 471 010c C1E0      		ldi r28,lo8(1)
 472 010e D0E0      		ldi r29,0
 473               	.LVL27:
 474 0110 00C0      		rjmp 2f
 475               		1:
 476 0112 CC0F      		lsl r28
 477 0114 DD1F      		rol r29
 478               		2:
 479 0116 2A95      		dec r18
 480 0118 02F4      		brpl 1b
 481 011a 20E2      		ldi r18,lo8(32)
 482 011c 829F      		mul r24,r18
 483 011e C001      		movw r24,r0
 484 0120 1124      		clr __zero_reg__
 485 0122 C82B      		or r28,r24
 486 0124 D92B      		or r29,r25
 487               	.LVL28:
 488 0126 DC68      		ori r29,140
 489               	.LVL29:
 106:quantum/keymap_common.c ****         case QK_TOGGLE_LAYER ... QK_TOGGLE_LAYER_MAX: ;
 490               		.loc 2 106 0
 491 0128 00C0      		rjmp .L21
 492               	.LVL30:
 493               	.L30:
  52:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 494               		.loc 2 52 0
 495 012a C115      		cp r28,__zero_reg__
 496 012c 29E5      		ldi r18,89
 497 012e D207      		cpc r29,r18
 498 0130 00F4      		brsh .L37
 499 0132 C115      		cp r28,__zero_reg__
 500 0134 88E5      		ldi r24,88
 501 0136 D807      		cpc r29,r24
 502               	.LVL31:
 503 0138 00F0      		brlo .+2
 504 013a 00C0      		rjmp .L38
 505 013c C115      		cp r28,__zero_reg__
 506 013e 96E5      		ldi r25,86
 507 0140 D907      		cpc r29,r25
 508 0142 00F0      		brlo .+2
 509 0144 00C0      		rjmp .L17
 510               	.LVL32:
 120:quantum/keymap_common.c ****             break;
 511               		.loc 2 120 0
 512 0146 CF71      		andi r28,31
 513 0148 DD27      		clr r29
 514               	.LVL33:
 515 014a DC2F      		mov r29,r28
 516 014c CC27      		clr r28
 517               	.LVL34:
 518 014e D062      		ori r29,32
 519               	.LVL35:
 121:quantum/keymap_common.c ****         case QK_LAYER_TAP_TOGGLE ... QK_LAYER_TAP_TOGGLE_MAX:
 520               		.loc 2 121 0
 521 0150 00C0      		rjmp .L21
 522               	.LVL36:
 523               	.L37:
 128:quantum/keymap_common.c ****             break;
 524               		.loc 2 128 0
 525 0152 CE01      		movw r24,r28
 526               	.LVL37:
  52:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 527               		.loc 2 52 0
 528 0154 C115      		cp r28,__zero_reg__
 529 0156 2AE5      		ldi r18,90
 530 0158 D207      		cpc r29,r18
 531 015a 00F4      		brsh .+2
 532 015c 00C0      		rjmp .L40
 533               	.LVL38:
 534 015e 9056      		subi r25,96
 535               	.LVL39:
 536 0160 8115      		cp r24,__zero_reg__
 537 0162 9042      		sbci r25,32
 538 0164 00F0      		brlo .+2
 539 0166 00C0      		rjmp .L17
 131:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 540               		.loc 2 131 0
 541 0168 8D2F      		mov r24,r29
 542 016a 8F71      		andi r24,lo8(31)
 543 016c 0E94 0000 		call mod_config
 544               	.LVL40:
 545 0170 DD27      		clr r29
 546               	.LVL41:
 547 0172 D062      		ori r29,32
 132:quantum/keymap_common.c ****             break;
 548               		.loc 2 132 0
 549 0174 8F71      		andi r24,lo8(31)
 550               	.LVL42:
 551 0176 00C0      		rjmp .L77
 552               	.LVL43:
 553               	.L23:
  61:quantum/keymap_common.c ****             break;
 554               		.loc 2 61 0
 555 0178 C53A      		cpi r28,-91
 556 017a D105      		cpc r29,__zero_reg__
 557 017c 01F4      		brne .+2
 558 017e 00C0      		rjmp .L43
  61:quantum/keymap_common.c ****             break;
 559               		.loc 2 61 0 is_stmt 0 discriminator 1
 560 0180 C63A      		cpi r28,-90
 561 0182 D105      		cpc r29,__zero_reg__
 562 0184 01F0      		breq .+2
 563 0186 00C0      		rjmp .L44
 564               	.LVL44:
  61:quantum/keymap_common.c ****             break;
 565               		.loc 2 61 0
 566 0188 C2E8      		ldi r28,lo8(-126)
 567 018a D0E4      		ldi r29,lo8(64)
 568 018c 00C0      		rjmp .L21
 569               	.LVL45:
 570               	.L24:
  64:quantum/keymap_common.c ****             break;
 571               		.loc 2 64 0 is_stmt 1
 572 018e C83A      		cpi r28,-88
 573 0190 D105      		cpc r29,__zero_reg__
 574 0192 01F4      		brne .+2
 575 0194 00C0      		rjmp .L45
  64:quantum/keymap_common.c ****             break;
 576               		.loc 2 64 0 is_stmt 0 discriminator 1
 577 0196 C93A      		cpi r28,-87
 578 0198 D105      		cpc r29,__zero_reg__
 579 019a 01F4      		brne .+2
 580 019c 00C0      		rjmp .L46
  64:quantum/keymap_common.c ****             break;
 581               		.loc 2 64 0 discriminator 3
 582 019e CA3A      		cpi r28,-86
 583 01a0 D105      		cpc r29,__zero_reg__
 584 01a2 01F4      		brne .+2
 585 01a4 00C0      		rjmp .L47
  64:quantum/keymap_common.c ****             break;
 586               		.loc 2 64 0 discriminator 5
 587 01a6 CB3A      		cpi r28,-85
 588 01a8 D105      		cpc r29,__zero_reg__
 589 01aa 01F4      		brne .+2
 590 01ac 00C0      		rjmp .L48
  64:quantum/keymap_common.c ****             break;
 591               		.loc 2 64 0 discriminator 7
 592 01ae CC3A      		cpi r28,-84
 593 01b0 D105      		cpc r29,__zero_reg__
 594 01b2 01F4      		brne .+2
 595 01b4 00C0      		rjmp .L49
  64:quantum/keymap_common.c ****             break;
 596               		.loc 2 64 0 discriminator 9
 597 01b6 CB3B      		cpi r28,-69
 598 01b8 D105      		cpc r29,__zero_reg__
 599 01ba 01F4      		brne .+2
 600 01bc 00C0      		rjmp .L50
  64:quantum/keymap_common.c ****             break;
 601               		.loc 2 64 0 discriminator 11
 602 01be CC3B      		cpi r28,-68
 603 01c0 D105      		cpc r29,__zero_reg__
 604 01c2 01F4      		brne .+2
 605 01c4 00C0      		rjmp .L51
  64:quantum/keymap_common.c ****             break;
 606               		.loc 2 64 0 discriminator 13
 607 01c6 CD3A      		cpi r28,-83
 608 01c8 D105      		cpc r29,__zero_reg__
 609 01ca 01F4      		brne .+2
 610 01cc 00C0      		rjmp .L52
  64:quantum/keymap_common.c ****             break;
 611               		.loc 2 64 0 discriminator 15
 612 01ce C03B      		cpi r28,-80
 613 01d0 D105      		cpc r29,__zero_reg__
 614 01d2 01F4      		brne .+2
 615 01d4 00C0      		rjmp .L53
  64:quantum/keymap_common.c ****             break;
 616               		.loc 2 64 0 discriminator 17
 617 01d6 CE3A      		cpi r28,-82
 618 01d8 D105      		cpc r29,__zero_reg__
 619 01da 01F4      		brne .+2
 620 01dc 00C0      		rjmp .L54
  64:quantum/keymap_common.c ****             break;
 621               		.loc 2 64 0 discriminator 19
 622 01de CF3A      		cpi r28,-81
 623 01e0 D105      		cpc r29,__zero_reg__
 624 01e2 01F4      		brne .+2
 625 01e4 00C0      		rjmp .L55
  64:quantum/keymap_common.c ****             break;
 626               		.loc 2 64 0 discriminator 21
 627 01e6 C13B      		cpi r28,-79
 628 01e8 D105      		cpc r29,__zero_reg__
 629 01ea 01F4      		brne .+2
 630 01ec 00C0      		rjmp .L56
  64:quantum/keymap_common.c ****             break;
 631               		.loc 2 64 0 discriminator 23
 632 01ee C23B      		cpi r28,-78
 633 01f0 D105      		cpc r29,__zero_reg__
 634 01f2 01F4      		brne .+2
 635 01f4 00C0      		rjmp .L57
  64:quantum/keymap_common.c ****             break;
 636               		.loc 2 64 0 discriminator 25
 637 01f6 C33B      		cpi r28,-77
 638 01f8 D105      		cpc r29,__zero_reg__
 639 01fa 01F4      		brne .+2
 640 01fc 00C0      		rjmp .L58
  64:quantum/keymap_common.c ****             break;
 641               		.loc 2 64 0 discriminator 27
 642 01fe C43B      		cpi r28,-76
 643 0200 D105      		cpc r29,__zero_reg__
 644 0202 01F4      		brne .+2
 645 0204 00C0      		rjmp .L59
  64:quantum/keymap_common.c ****             break;
 646               		.loc 2 64 0 discriminator 29
 647 0206 C53B      		cpi r28,-75
 648 0208 D105      		cpc r29,__zero_reg__
 649 020a 01F4      		brne .+2
 650 020c 00C0      		rjmp .L60
  64:quantum/keymap_common.c ****             break;
 651               		.loc 2 64 0 discriminator 31
 652 020e C63B      		cpi r28,-74
 653 0210 D105      		cpc r29,__zero_reg__
 654 0212 01F4      		brne .+2
 655 0214 00C0      		rjmp .L61
  64:quantum/keymap_common.c ****             break;
 656               		.loc 2 64 0 discriminator 33
 657 0216 C73B      		cpi r28,-73
 658 0218 D105      		cpc r29,__zero_reg__
 659 021a 01F4      		brne .+2
 660 021c 00C0      		rjmp .L62
  64:quantum/keymap_common.c ****             break;
 661               		.loc 2 64 0 discriminator 35
 662 021e C83B      		cpi r28,-72
 663 0220 D105      		cpc r29,__zero_reg__
 664 0222 01F4      		brne .+2
 665 0224 00C0      		rjmp .L63
  64:quantum/keymap_common.c ****             break;
 666               		.loc 2 64 0 discriminator 37
 667 0226 C93B      		cpi r28,-71
 668 0228 D105      		cpc r29,__zero_reg__
 669 022a 01F4      		brne .+2
 670 022c 00C0      		rjmp .L64
  64:quantum/keymap_common.c ****             break;
 671               		.loc 2 64 0 discriminator 39
 672 022e CA3B      		cpi r28,-70
 673 0230 D105      		cpc r29,__zero_reg__
 674 0232 01F4      		brne .+2
 675 0234 00C0      		rjmp .L65
 676               	.LVL46:
  64:quantum/keymap_common.c ****             break;
 677               		.loc 2 64 0
 678 0236 C0E0      		ldi r28,0
 679 0238 D4E4      		ldi r29,lo8(68)
 680 023a 00C0      		rjmp .L21
 681               	.LVL47:
 682               	.L76:
  80:quantum/keymap_common.c ****             break;
 683               		.loc 2 80 0 is_stmt 1
 684 023c 0E94 0000 		call keymap_function_id_to_action
 685               	.LVL48:
 686 0240 EC01      		movw r28,r24
 687               	.LVL49:
  81:quantum/keymap_common.c ****         case QK_MACRO ... QK_MACRO_MAX:
 688               		.loc 2 81 0
 689 0242 00C0      		rjmp .L21
 690               	.LVL50:
 691               	.L71:
 692 0244 CE01      		movw r24,r28
 693 0246 9927      		clr r25
  83:quantum/keymap_common.c ****                 action.code = ACTION_MACRO_TAP(keycode & 0xFF);
 694               		.loc 2 83 0
 695 0248 D3FF      		sbrs r29,3
 696 024a 00C0      		rjmp .L42
 697               	.LVL51:
  84:quantum/keymap_common.c ****             else
 698               		.loc 2 84 0
 699 024c EC01      		movw r28,r24
 700 024e D86C      		ori r29,200
 701               	.LVL52:
 702 0250 00C0      		rjmp .L21
 703               	.LVL53:
 704               	.L42:
  86:quantum/keymap_common.c ****             break;
 705               		.loc 2 86 0
 706 0252 EC01      		movw r28,r24
 707 0254 D06C      		ori r29,192
 708               	.LVL54:
 709 0256 00C0      		rjmp .L21
 710               	.LVL55:
 711               	.L19:
  89:quantum/keymap_common.c ****             break;
 712               		.loc 2 89 0
 713 0258 DF70      		andi r29,15
 714               	.LVL56:
 715 025a D06A      		ori r29,160
 716               	.LVL57:
  90:quantum/keymap_common.c ****         case QK_TO ... QK_TO_MAX: ;
 717               		.loc 2 90 0
 718 025c 00C0      		rjmp .L21
 719               	.LVL58:
 720               	.L79:
 100:quantum/keymap_common.c ****             break;
 721               		.loc 2 100 0
 722 025e DC2F      		mov r29,r28
 723 0260 CC27      		clr r28
 724               	.LVL59:
 725 0262 C16F      		ori r28,241
 726 0264 D06A      		ori r29,160
 727               	.LVL60:
 101:quantum/keymap_common.c ****         case QK_DEF_LAYER ... QK_DEF_LAYER_MAX: ;
 728               		.loc 2 101 0
 729 0266 00C0      		rjmp .L21
 730               	.LVL61:
 731               	.L73:
 110:quantum/keymap_common.c ****             break;
 732               		.loc 2 110 0
 733 0268 C1E0      		ldi r28,lo8(1)
 734 026a D0E0      		ldi r29,0
 735               	.LVL62:
 736 026c 00C0      		rjmp 2f
 737               		1:
 738 026e CC0F      		lsl r28
 739 0270 DD1F      		rol r29
 740               		2:
 741 0272 2A95      		dec r18
 742 0274 02F4      		brpl 1b
 743 0276 20E2      		ldi r18,lo8(32)
 744 0278 829F      		mul r24,r18
 745 027a C001      		movw r24,r0
 746 027c 1124      		clr __zero_reg__
 747 027e C82B      		or r28,r24
 748 0280 D92B      		or r29,r25
 749               	.LVL63:
 750 0282 DA68      		ori r29,138
 751               	.LVL64:
 111:quantum/keymap_common.c ****         case QK_ONE_SHOT_LAYER ... QK_ONE_SHOT_LAYER_MAX: ;
 752               		.loc 2 111 0
 753 0284 00C0      		rjmp .L21
 754               	.LVL65:
 755               	.L31:
 115:quantum/keymap_common.c ****             break;
 756               		.loc 2 115 0
 757 0286 DC2F      		mov r29,r28
 758 0288 CC27      		clr r28
 759               	.LVL66:
 760 028a C46F      		ori r28,244
 761 028c D06A      		ori r29,160
 762               	.LVL67:
 116:quantum/keymap_common.c ****         case QK_ONE_SHOT_MOD ... QK_ONE_SHOT_MOD_MAX: ;
 763               		.loc 2 116 0
 764 028e 00C0      		rjmp .L21
 765               	.LVL68:
 766               	.L38:
 123:quantum/keymap_common.c ****             break;
 767               		.loc 2 123 0
 768 0290 DC2F      		mov r29,r28
 769 0292 CC27      		clr r28
 770               	.LVL69:
 771 0294 C06F      		ori r28,240
 772 0296 D06A      		ori r29,160
 773               	.LVL70:
 124:quantum/keymap_common.c ****         case QK_LAYER_MOD ... QK_LAYER_MOD_MAX:
 774               		.loc 2 124 0
 775 0298 00C0      		rjmp .L21
 776               	.LVL71:
 777               	.L40:
 128:quantum/keymap_common.c ****             break;
 778               		.loc 2 128 0
 779 029a 24E0      		ldi r18,4
 780               		1:
 781 029c 9695      		lsr r25
 782 029e 8795      		ror r24
 783 02a0 2A95      		dec r18
 784 02a2 01F4      		brne 1b
 785               	.LVL72:
 786 02a4 8F70      		andi r24,lo8(15)
 787 02a6 CF70      		andi r28,lo8(15)
 788               	.LVL73:
 789 02a8 C06E      		ori r28,lo8(-32)
 790 02aa D0E0      		ldi r29,0
 791 02ac D06A      		ori r29,160
 792               	.L77:
 793               	.LVL74:
 132:quantum/keymap_common.c ****             break;
 794               		.loc 2 132 0
 795 02ae D82B      		or r29,r24
 796               	.LVL75:
 133:quantum/keymap_common.c ****     #ifdef BACKLIGHT_ENABLE
 797               		.loc 2 133 0
 798 02b0 00C0      		rjmp .L21
 799               	.LVL76:
 800               	.L17:
 161:quantum/keymap_common.c ****             break;
 801               		.loc 2 161 0
 802 02b2 C0E0      		ldi r28,0
 803 02b4 D0E0      		ldi r29,0
 162:quantum/keymap_common.c ****     }
 804               		.loc 2 162 0
 805 02b6 00C0      		rjmp .L21
 806               	.LVL77:
 807               	.L43:
  61:quantum/keymap_common.c ****             break;
 808               		.loc 2 61 0
 809 02b8 C1E8      		ldi r28,lo8(-127)
 810 02ba D0E4      		ldi r29,lo8(64)
 811 02bc 00C0      		rjmp .L21
 812               	.LVL78:
 813               	.L44:
 814 02be C3E8      		ldi r28,lo8(-125)
 815 02c0 D0E4      		ldi r29,lo8(64)
 816 02c2 00C0      		rjmp .L21
 817               	.LVL79:
 818               	.L45:
  64:quantum/keymap_common.c ****             break;
 819               		.loc 2 64 0
 820 02c4 C2EE      		ldi r28,lo8(-30)
 821 02c6 D4E4      		ldi r29,lo8(68)
 822 02c8 00C0      		rjmp .L21
 823               	.LVL80:
 824               	.L46:
 825 02ca C9EE      		ldi r28,lo8(-23)
 826 02cc D4E4      		ldi r29,lo8(68)
 827 02ce 00C0      		rjmp .L21
 828               	.LVL81:
 829               	.L47:
 830 02d0 CAEE      		ldi r28,lo8(-22)
 831 02d2 D4E4      		ldi r29,lo8(68)
 832 02d4 00C0      		rjmp .L21
 833               	.LVL82:
 834               	.L48:
 835 02d6 C5EB      		ldi r28,lo8(-75)
 836 02d8 D4E4      		ldi r29,lo8(68)
 837 02da 00C0      		rjmp .L21
 838               	.LVL83:
 839               	.L49:
 840 02dc C6EB      		ldi r28,lo8(-74)
 841 02de D4E4      		ldi r29,lo8(68)
 842 02e0 00C0      		rjmp .L21
 843               	.LVL84:
 844               	.L50:
 845 02e2 C3EB      		ldi r28,lo8(-77)
 846 02e4 D4E4      		ldi r29,lo8(68)
 847 02e6 00C0      		rjmp .L21
 848               	.LVL85:
 849               	.L51:
 850 02e8 C4EB      		ldi r28,lo8(-76)
 851 02ea D4E4      		ldi r29,lo8(68)
 852 02ec 00C0      		rjmp .L21
 853               	.LVL86:
 854               	.L52:
 855 02ee C7EB      		ldi r28,lo8(-73)
 856 02f0 D4E4      		ldi r29,lo8(68)
 857 02f2 00C0      		rjmp .L21
 858               	.LVL87:
 859               	.L53:
 860 02f4 CCEC      		ldi r28,lo8(-52)
 861 02f6 D4E4      		ldi r29,lo8(68)
 862 02f8 00C0      		rjmp .L21
 863               	.LVL88:
 864               	.L54:
 865 02fa CDEC      		ldi r28,lo8(-51)
 866 02fc D4E4      		ldi r29,lo8(68)
 867 02fe 00C0      		rjmp .L21
 868               	.LVL89:
 869               	.L55:
 870 0300 C3E8      		ldi r28,lo8(-125)
 871 0302 D5E4      		ldi r29,lo8(69)
 872 0304 00C0      		rjmp .L21
 873               	.LVL90:
 874               	.L56:
 875 0306 CAE8      		ldi r28,lo8(-118)
 876 0308 D5E4      		ldi r29,lo8(69)
 877 030a 00C0      		rjmp .L21
 878               	.LVL91:
 879               	.L57:
 880 030c C2E9      		ldi r28,lo8(-110)
 881 030e D5E4      		ldi r29,lo8(69)
 882 0310 00C0      		rjmp .L21
 883               	.LVL92:
 884               	.L58:
 885 0312 C4E9      		ldi r28,lo8(-108)
 886 0314 D5E4      		ldi r29,lo8(69)
 887 0316 00C0      		rjmp .L21
 888               	.LVL93:
 889               	.L59:
 890 0318 C1E2      		ldi r28,lo8(33)
 891 031a D6E4      		ldi r29,lo8(70)
 892 031c 00C0      		rjmp .L21
 893               	.LVL94:
 894               	.L60:
 895 031e C3E2      		ldi r28,lo8(35)
 896 0320 D6E4      		ldi r29,lo8(70)
 897 0322 00C0      		rjmp .L21
 898               	.LVL95:
 899               	.L61:
 900 0324 C4E2      		ldi r28,lo8(36)
 901 0326 D6E4      		ldi r29,lo8(70)
 902 0328 00C0      		rjmp .L21
 903               	.LVL96:
 904               	.L62:
 905 032a C5E2      		ldi r28,lo8(37)
 906 032c D6E4      		ldi r29,lo8(70)
 907 032e 00C0      		rjmp .L21
 908               	.LVL97:
 909               	.L63:
 910 0330 C6E2      		ldi r28,lo8(38)
 911 0332 D6E4      		ldi r29,lo8(70)
 912 0334 00C0      		rjmp .L21
 913               	.LVL98:
 914               	.L64:
 915 0336 C7E2      		ldi r28,lo8(39)
 916 0338 D6E4      		ldi r29,lo8(70)
 917 033a 00C0      		rjmp .L21
 918               	.LVL99:
 919               	.L65:
 920 033c CAE2      		ldi r28,lo8(42)
 921 033e D6E4      		ldi r29,lo8(70)
 922               	.LVL100:
 923               	.L21:
 165:quantum/keymap_common.c **** 
 924               		.loc 2 165 0
 925 0340 CE01      		movw r24,r28
 926               	/* epilogue start */
 927 0342 DF91      		pop r29
 928 0344 CF91      		pop r28
 929 0346 0895      		ret
 930               		.cfi_endproc
 931               	.LFE29:
 933               		.weak	fn_actions
 934               		.section	.progmem.data.fn_actions,"a",@progbits
 937               	fn_actions:
 938               		.text
 939               	.Letext0:
 940               		.file 3 "/usr/lib/avr/include/stdint.h"
 941               		.file 4 "./tmk_core/common/keyboard.h"
 942               		.file 5 "./tmk_core/common/keycode.h"
 943               		.file 6 "./tmk_core/common/action_code.h"
 944               		.file 7 "./tmk_core/common/action_macro.h"
 945               		.file 8 "./tmk_core/common/action.h"
 946               		.file 9 "./tmk_core/common/report.h"
 947               		.file 10 "quantum/quantum_keycodes.h"
 948               		.file 11 "quantum/keymap.h"
 949               		.file 12 "./tmk_core/common/action_util.h"
 950               		.file 13 "quantum/keycode_config.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keymap_common.c
     /tmp/cc24paQN.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cc24paQN.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cc24paQN.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cc24paQN.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cc24paQN.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cc24paQN.s:13     .text.rgblight_toggle:0000000000000000 rgblight_toggle
     /tmp/cc24paQN.s:27     .text.rgblight_step:0000000000000000 rgblight_step
     /tmp/cc24paQN.s:41     .text.rgblight_step_reverse:0000000000000000 rgblight_step_reverse
     /tmp/cc24paQN.s:55     .text.rgblight_increase_hue:0000000000000000 rgblight_increase_hue
     /tmp/cc24paQN.s:69     .text.rgblight_decrease_hue:0000000000000000 rgblight_decrease_hue
     /tmp/cc24paQN.s:83     .text.rgblight_increase_sat:0000000000000000 rgblight_increase_sat
     /tmp/cc24paQN.s:97     .text.rgblight_decrease_sat:0000000000000000 rgblight_decrease_sat
     /tmp/cc24paQN.s:111    .text.rgblight_increase_val:0000000000000000 rgblight_increase_val
     /tmp/cc24paQN.s:125    .text.rgblight_decrease_val:0000000000000000 rgblight_decrease_val
     /tmp/cc24paQN.s:139    .text.rgblight_increase_speed:0000000000000000 rgblight_increase_speed
     /tmp/cc24paQN.s:153    .text.rgblight_decrease_speed:0000000000000000 rgblight_decrease_speed
     /tmp/cc24paQN.s:169    .text.action_get_macro:0000000000000000 action_get_macro
     /tmp/cc24paQN.s:190    .text.action_function:0000000000000000 action_function
     /tmp/cc24paQN.s:206    .text.keymap_key_to_keycode:0000000000000000 keymap_key_to_keycode
     /tmp/cc24paQN.s:252    .text.keymap_function_id_to_action:0000000000000000 keymap_function_id_to_action
     /tmp/cc24paQN.s:937    .progmem.data.fn_actions:0000000000000000 fn_actions
     /tmp/cc24paQN.s:287    .text.action_for_key:0000000000000000 action_for_key

UNDEFINED SYMBOLS
keymaps
keycode_config
mod_config
