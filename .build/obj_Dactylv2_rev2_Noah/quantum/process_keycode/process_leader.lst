   1               		.file	"process_leader.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.rgblight_toggle,"ax",@progbits
  11               		.weak	rgblight_toggle
  13               	rgblight_toggle:
  14               	.LFB54:
  15               		.cfi_startproc
  16               	/* prologue: function */
  17               	/* frame size = 0 */
  18               	/* stack size = 0 */
  19               	.L__stack_usage = 0
  20 0000 0895      		ret
  21               		.cfi_endproc
  22               	.LFE54:
  24               		.section	.text.rgblight_step,"ax",@progbits
  25               		.weak	rgblight_step
  27               	rgblight_step:
  28               	.LFB52:
  29               		.cfi_startproc
  30               	/* prologue: function */
  31               	/* frame size = 0 */
  32               	/* stack size = 0 */
  33               	.L__stack_usage = 0
  34 0000 0895      		ret
  35               		.cfi_endproc
  36               	.LFE52:
  38               		.section	.text.rgblight_step_reverse,"ax",@progbits
  39               		.weak	rgblight_step_reverse
  41               	rgblight_step_reverse:
  42               	.LFB50:
  43               		.cfi_startproc
  44               	/* prologue: function */
  45               	/* frame size = 0 */
  46               	/* stack size = 0 */
  47               	.L__stack_usage = 0
  48 0000 0895      		ret
  49               		.cfi_endproc
  50               	.LFE50:
  52               		.section	.text.rgblight_increase_hue,"ax",@progbits
  53               		.weak	rgblight_increase_hue
  55               	rgblight_increase_hue:
  56               	.LFB48:
  57               		.cfi_startproc
  58               	/* prologue: function */
  59               	/* frame size = 0 */
  60               	/* stack size = 0 */
  61               	.L__stack_usage = 0
  62 0000 0895      		ret
  63               		.cfi_endproc
  64               	.LFE48:
  66               		.section	.text.rgblight_decrease_hue,"ax",@progbits
  67               		.weak	rgblight_decrease_hue
  69               	rgblight_decrease_hue:
  70               	.LFB46:
  71               		.cfi_startproc
  72               	/* prologue: function */
  73               	/* frame size = 0 */
  74               	/* stack size = 0 */
  75               	.L__stack_usage = 0
  76 0000 0895      		ret
  77               		.cfi_endproc
  78               	.LFE46:
  80               		.section	.text.rgblight_increase_sat,"ax",@progbits
  81               		.weak	rgblight_increase_sat
  83               	rgblight_increase_sat:
  84               	.LFB44:
  85               		.cfi_startproc
  86               	/* prologue: function */
  87               	/* frame size = 0 */
  88               	/* stack size = 0 */
  89               	.L__stack_usage = 0
  90 0000 0895      		ret
  91               		.cfi_endproc
  92               	.LFE44:
  94               		.section	.text.rgblight_decrease_sat,"ax",@progbits
  95               		.weak	rgblight_decrease_sat
  97               	rgblight_decrease_sat:
  98               	.LFB42:
  99               		.cfi_startproc
 100               	/* prologue: function */
 101               	/* frame size = 0 */
 102               	/* stack size = 0 */
 103               	.L__stack_usage = 0
 104 0000 0895      		ret
 105               		.cfi_endproc
 106               	.LFE42:
 108               		.section	.text.rgblight_increase_val,"ax",@progbits
 109               		.weak	rgblight_increase_val
 111               	rgblight_increase_val:
 112               	.LFB40:
 113               		.cfi_startproc
 114               	/* prologue: function */
 115               	/* frame size = 0 */
 116               	/* stack size = 0 */
 117               	.L__stack_usage = 0
 118 0000 0895      		ret
 119               		.cfi_endproc
 120               	.LFE40:
 122               		.section	.text.rgblight_decrease_val,"ax",@progbits
 123               		.weak	rgblight_decrease_val
 125               	rgblight_decrease_val:
 126               	.LFB38:
 127               		.cfi_startproc
 128               	/* prologue: function */
 129               	/* frame size = 0 */
 130               	/* stack size = 0 */
 131               	.L__stack_usage = 0
 132 0000 0895      		ret
 133               		.cfi_endproc
 134               	.LFE38:
 136               		.section	.text.rgblight_increase_speed,"ax",@progbits
 137               		.weak	rgblight_increase_speed
 139               	rgblight_increase_speed:
 140               	.LFB36:
 141               		.cfi_startproc
 142               	/* prologue: function */
 143               	/* frame size = 0 */
 144               	/* stack size = 0 */
 145               	.L__stack_usage = 0
 146 0000 0895      		ret
 147               		.cfi_endproc
 148               	.LFE36:
 150               		.section	.text.rgblight_decrease_speed,"ax",@progbits
 151               		.weak	rgblight_decrease_speed
 153               	rgblight_decrease_speed:
 154               	.LFB34:
 155               		.cfi_startproc
 156               	/* prologue: function */
 157               	/* frame size = 0 */
 158               	/* stack size = 0 */
 159               	.L__stack_usage = 0
 160 0000 0895      		ret
 161               		.cfi_endproc
 162               	.LFE34:
 164               		.section	.text.leader_start,"ax",@progbits
 165               		.weak	leader_start
 167               	leader_start:
 168               	.LFB32:
 169               		.cfi_startproc
 170               	/* prologue: function */
 171               	/* frame size = 0 */
 172               	/* stack size = 0 */
 173               	.L__stack_usage = 0
 174 0000 0895      		ret
 175               		.cfi_endproc
 176               	.LFE32:
 178               		.section	.text.leader_end,"ax",@progbits
 179               		.weak	leader_end
 181               	leader_end:
 182               	.LFB29:
 183               		.file 1 "quantum/process_keycode/process_leader.c"
   1:quantum/process_keycode/process_leader.c **** /* Copyright 2016 Jack Humbert
   2:quantum/process_keycode/process_leader.c ****  *
   3:quantum/process_keycode/process_leader.c ****  * This program is free software: you can redistribute it and/or modify
   4:quantum/process_keycode/process_leader.c ****  * it under the terms of the GNU General Public License as published by
   5:quantum/process_keycode/process_leader.c ****  * the Free Software Foundation, either version 2 of the License, or
   6:quantum/process_keycode/process_leader.c ****  * (at your option) any later version.
   7:quantum/process_keycode/process_leader.c ****  *
   8:quantum/process_keycode/process_leader.c ****  * This program is distributed in the hope that it will be useful,
   9:quantum/process_keycode/process_leader.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:quantum/process_keycode/process_leader.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:quantum/process_keycode/process_leader.c ****  * GNU General Public License for more details.
  12:quantum/process_keycode/process_leader.c ****  *
  13:quantum/process_keycode/process_leader.c ****  * You should have received a copy of the GNU General Public License
  14:quantum/process_keycode/process_leader.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:quantum/process_keycode/process_leader.c ****  */
  16:quantum/process_keycode/process_leader.c **** 
  17:quantum/process_keycode/process_leader.c **** #ifndef DISABLE_LEADER
  18:quantum/process_keycode/process_leader.c **** 
  19:quantum/process_keycode/process_leader.c **** #include "process_leader.h"
  20:quantum/process_keycode/process_leader.c **** 
  21:quantum/process_keycode/process_leader.c **** #ifndef LEADER_TIMEOUT
  22:quantum/process_keycode/process_leader.c ****   #define LEADER_TIMEOUT 300
  23:quantum/process_keycode/process_leader.c **** #endif
  24:quantum/process_keycode/process_leader.c **** 
  25:quantum/process_keycode/process_leader.c **** __attribute__ ((weak))
  26:quantum/process_keycode/process_leader.c **** void leader_start(void) {}
  27:quantum/process_keycode/process_leader.c **** 
  28:quantum/process_keycode/process_leader.c **** __attribute__ ((weak))
  29:quantum/process_keycode/process_leader.c **** void leader_end(void) {}
 184               		.loc 1 29 0
 185               		.cfi_startproc
 186               	/* prologue: function */
 187               	/* frame size = 0 */
 188               	/* stack size = 0 */
 189               	.L__stack_usage = 0
 190 0000 0895      		ret
 191               		.cfi_endproc
 192               	.LFE29:
 194               		.section	.text.process_leader,"ax",@progbits
 195               	.global	process_leader
 197               	process_leader:
 198               	.LFB30:
  30:quantum/process_keycode/process_leader.c **** 
  31:quantum/process_keycode/process_leader.c **** // Leader key stuff
  32:quantum/process_keycode/process_leader.c **** bool leading = false;
  33:quantum/process_keycode/process_leader.c **** uint16_t leader_time = 0;
  34:quantum/process_keycode/process_leader.c **** 
  35:quantum/process_keycode/process_leader.c **** uint16_t leader_sequence[5] = {0, 0, 0, 0, 0};
  36:quantum/process_keycode/process_leader.c **** uint8_t leader_sequence_size = 0;
  37:quantum/process_keycode/process_leader.c **** 
  38:quantum/process_keycode/process_leader.c **** bool process_leader(uint16_t keycode, keyrecord_t *record) {
 199               		.loc 1 38 0
 200               		.cfi_startproc
 201               	.LVL0:
 202               		.loc 1 38 0
 203 0000 0F93      		push r16
 204               	.LCFI0:
 205               		.cfi_def_cfa_offset 3
 206               		.cfi_offset 16, -2
 207 0002 1F93      		push r17
 208               	.LCFI1:
 209               		.cfi_def_cfa_offset 4
 210               		.cfi_offset 17, -3
 211 0004 CF93      		push r28
 212               	.LCFI2:
 213               		.cfi_def_cfa_offset 5
 214               		.cfi_offset 28, -4
 215               	/* prologue: function */
 216               	/* frame size = 0 */
 217               	/* stack size = 3 */
 218               	.L__stack_usage = 3
  39:quantum/process_keycode/process_leader.c ****   // Leader key set-up
  40:quantum/process_keycode/process_leader.c ****   if (record->event.pressed) {
 219               		.loc 1 40 0
 220 0006 FB01      		movw r30,r22
 221 0008 2281      		ldd r18,Z+2
 222 000a 2111      		cpse r18,__zero_reg__
 223 000c 00C0      		rjmp .L15
 224               	.LVL1:
 225               	.L18:
  41:quantum/process_keycode/process_leader.c ****     if (!leading && keycode == KC_LEAD) {
  42:quantum/process_keycode/process_leader.c ****       leader_start();
  43:quantum/process_keycode/process_leader.c ****       leading = true;
  44:quantum/process_keycode/process_leader.c ****       leader_time = timer_read();
  45:quantum/process_keycode/process_leader.c ****       leader_sequence_size = 0;
  46:quantum/process_keycode/process_leader.c ****       leader_sequence[0] = 0;
  47:quantum/process_keycode/process_leader.c ****       leader_sequence[1] = 0;
  48:quantum/process_keycode/process_leader.c ****       leader_sequence[2] = 0;
  49:quantum/process_keycode/process_leader.c ****       leader_sequence[3] = 0;
  50:quantum/process_keycode/process_leader.c ****       leader_sequence[4] = 0;
  51:quantum/process_keycode/process_leader.c ****       return false;
  52:quantum/process_keycode/process_leader.c ****     }
  53:quantum/process_keycode/process_leader.c ****     if (leading && timer_elapsed(leader_time) < LEADER_TIMEOUT) {
  54:quantum/process_keycode/process_leader.c ****       leader_sequence[leader_sequence_size] = keycode;
  55:quantum/process_keycode/process_leader.c ****       leader_sequence_size++;
  56:quantum/process_keycode/process_leader.c ****       return false;
  57:quantum/process_keycode/process_leader.c ****     }
  58:quantum/process_keycode/process_leader.c ****   }
  59:quantum/process_keycode/process_leader.c ****   return true;
 226               		.loc 1 59 0
 227 000e C1E0      		ldi r28,lo8(1)
 228 0010 00C0      		rjmp .L16
 229               	.LVL2:
 230               	.L15:
 231 0012 8C01      		movw r16,r24
  41:quantum/process_keycode/process_leader.c ****     if (!leading && keycode == KC_LEAD) {
 232               		.loc 1 41 0
 233 0014 C091 0000 		lds r28,leading
 234 0018 C111      		cpse r28,__zero_reg__
 235 001a 00C0      		rjmp .L17
 236               	.LVL3:
  41:quantum/process_keycode/process_leader.c ****     if (!leading && keycode == KC_LEAD) {
 237               		.loc 1 41 0 is_stmt 0 discriminator 1
 238 001c 8631      		cpi r24,22
 239 001e 9C45      		sbci r25,92
 240 0020 01F4      		brne .L18
  42:quantum/process_keycode/process_leader.c ****       leading = true;
 241               		.loc 1 42 0 is_stmt 1
 242 0022 0E94 0000 		call leader_start
 243               	.LVL4:
  43:quantum/process_keycode/process_leader.c ****       leader_time = timer_read();
 244               		.loc 1 43 0
 245 0026 81E0      		ldi r24,lo8(1)
 246 0028 8093 0000 		sts leading,r24
  44:quantum/process_keycode/process_leader.c ****       leader_sequence_size = 0;
 247               		.loc 1 44 0
 248 002c 0E94 0000 		call timer_read
 249               	.LVL5:
 250 0030 9093 0000 		sts leader_time+1,r25
 251 0034 8093 0000 		sts leader_time,r24
  45:quantum/process_keycode/process_leader.c ****       leader_sequence[0] = 0;
 252               		.loc 1 45 0
 253 0038 1092 0000 		sts leader_sequence_size,__zero_reg__
  46:quantum/process_keycode/process_leader.c ****       leader_sequence[1] = 0;
 254               		.loc 1 46 0
 255 003c 1092 0000 		sts leader_sequence+1,__zero_reg__
 256 0040 1092 0000 		sts leader_sequence,__zero_reg__
  47:quantum/process_keycode/process_leader.c ****       leader_sequence[2] = 0;
 257               		.loc 1 47 0
 258 0044 1092 0000 		sts leader_sequence+2+1,__zero_reg__
 259 0048 1092 0000 		sts leader_sequence+2,__zero_reg__
  48:quantum/process_keycode/process_leader.c ****       leader_sequence[3] = 0;
 260               		.loc 1 48 0
 261 004c 1092 0000 		sts leader_sequence+4+1,__zero_reg__
 262 0050 1092 0000 		sts leader_sequence+4,__zero_reg__
  49:quantum/process_keycode/process_leader.c ****       leader_sequence[4] = 0;
 263               		.loc 1 49 0
 264 0054 1092 0000 		sts leader_sequence+6+1,__zero_reg__
 265 0058 1092 0000 		sts leader_sequence+6,__zero_reg__
  50:quantum/process_keycode/process_leader.c ****       return false;
 266               		.loc 1 50 0
 267 005c 1092 0000 		sts leader_sequence+8+1,__zero_reg__
 268 0060 1092 0000 		sts leader_sequence+8,__zero_reg__
  51:quantum/process_keycode/process_leader.c ****     }
 269               		.loc 1 51 0
 270 0064 00C0      		rjmp .L16
 271               	.LVL6:
 272               	.L17:
  53:quantum/process_keycode/process_leader.c ****       leader_sequence[leader_sequence_size] = keycode;
 273               		.loc 1 53 0 discriminator 1
 274 0066 8091 0000 		lds r24,leader_time
 275 006a 9091 0000 		lds r25,leader_time+1
 276 006e 0E94 0000 		call timer_elapsed
 277               	.LVL7:
 278 0072 8C32      		cpi r24,44
 279 0074 9140      		sbci r25,1
 280 0076 00F4      		brsh .L18
  54:quantum/process_keycode/process_leader.c ****       leader_sequence_size++;
 281               		.loc 1 54 0
 282 0078 9091 0000 		lds r25,leader_sequence_size
 283 007c E92F      		mov r30,r25
 284 007e F0E0      		ldi r31,0
 285 0080 EE0F      		lsl r30
 286 0082 FF1F      		rol r31
 287 0084 E050      		subi r30,lo8(-(leader_sequence))
 288 0086 F040      		sbci r31,hi8(-(leader_sequence))
 289 0088 1183      		std Z+1,r17
 290 008a 0083      		st Z,r16
  55:quantum/process_keycode/process_leader.c ****       return false;
 291               		.loc 1 55 0
 292 008c 9F5F      		subi r25,lo8(-(1))
 293 008e 9093 0000 		sts leader_sequence_size,r25
  56:quantum/process_keycode/process_leader.c ****     }
 294               		.loc 1 56 0
 295 0092 C0E0      		ldi r28,0
 296               	.LVL8:
 297               	.L16:
  60:quantum/process_keycode/process_leader.c **** }
 298               		.loc 1 60 0
 299 0094 8C2F      		mov r24,r28
 300               	/* epilogue start */
 301 0096 CF91      		pop r28
 302 0098 1F91      		pop r17
 303 009a 0F91      		pop r16
 304 009c 0895      		ret
 305               		.cfi_endproc
 306               	.LFE30:
 308               	.global	leader_sequence_size
 309               		.section	.bss.leader_sequence_size,"aw",@nobits
 312               	leader_sequence_size:
 313 0000 00        		.zero	1
 314               	.global	leader_sequence
 315               		.section	.bss.leader_sequence,"aw",@nobits
 318               	leader_sequence:
 319 0000 0000 0000 		.zero	10
 319      0000 0000 
 319      0000 
 320               	.global	leader_time
 321               		.section	.bss.leader_time,"aw",@nobits
 324               	leader_time:
 325 0000 0000      		.zero	2
 326               	.global	leading
 327               		.section	.bss.leading,"aw",@nobits
 330               	leading:
 331 0000 00        		.zero	1
 332               		.text
 333               	.Letext0:
 334               		.file 2 "/usr/lib/avr/include/stdint.h"
 335               		.file 3 "./tmk_core/common/keyboard.h"
 336               		.file 4 "./tmk_core/common/action.h"
 337               		.file 5 "./tmk_core/common/report.h"
 338               		.file 6 "./tmk_core/common/action_util.h"
 339               		.file 7 "./tmk_core/common/timer.h"
 340               		.file 8 "./quantum/quantum_keycodes.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 process_leader.c
     /tmp/cchZEstf.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cchZEstf.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cchZEstf.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cchZEstf.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cchZEstf.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cchZEstf.s:13     .text.rgblight_toggle:0000000000000000 rgblight_toggle
     /tmp/cchZEstf.s:27     .text.rgblight_step:0000000000000000 rgblight_step
     /tmp/cchZEstf.s:41     .text.rgblight_step_reverse:0000000000000000 rgblight_step_reverse
     /tmp/cchZEstf.s:55     .text.rgblight_increase_hue:0000000000000000 rgblight_increase_hue
     /tmp/cchZEstf.s:69     .text.rgblight_decrease_hue:0000000000000000 rgblight_decrease_hue
     /tmp/cchZEstf.s:83     .text.rgblight_increase_sat:0000000000000000 rgblight_increase_sat
     /tmp/cchZEstf.s:97     .text.rgblight_decrease_sat:0000000000000000 rgblight_decrease_sat
     /tmp/cchZEstf.s:111    .text.rgblight_increase_val:0000000000000000 rgblight_increase_val
     /tmp/cchZEstf.s:125    .text.rgblight_decrease_val:0000000000000000 rgblight_decrease_val
     /tmp/cchZEstf.s:139    .text.rgblight_increase_speed:0000000000000000 rgblight_increase_speed
     /tmp/cchZEstf.s:153    .text.rgblight_decrease_speed:0000000000000000 rgblight_decrease_speed
     /tmp/cchZEstf.s:167    .text.leader_start:0000000000000000 leader_start
     /tmp/cchZEstf.s:181    .text.leader_end:0000000000000000 leader_end
     /tmp/cchZEstf.s:197    .text.process_leader:0000000000000000 process_leader
     /tmp/cchZEstf.s:330    .bss.leading:0000000000000000 leading
     /tmp/cchZEstf.s:324    .bss.leader_time:0000000000000000 leader_time
     /tmp/cchZEstf.s:312    .bss.leader_sequence_size:0000000000000000 leader_sequence_size
     /tmp/cchZEstf.s:318    .bss.leader_sequence:0000000000000000 leader_sequence

UNDEFINED SYMBOLS
timer_read
timer_elapsed
__do_clear_bss
