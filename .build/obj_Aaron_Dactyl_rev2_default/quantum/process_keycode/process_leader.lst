   1               		.file	"process_leader.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.rgblight_toggle,"ax",@progbits
  11               		.weak	rgblight_toggle
  13               	rgblight_toggle:
  14               	.LFB10:
  15               		.file 1 "./quantum/rgb.h"
   1:./quantum/rgb.h **** /* Copyright 2017 Jack Humbert
   2:./quantum/rgb.h ****  *
   3:./quantum/rgb.h ****  * This program is free software: you can redistribute it and/or modify
   4:./quantum/rgb.h ****  * it under the terms of the GNU General Public License as published by
   5:./quantum/rgb.h ****  * the Free Software Foundation, either version 2 of the License, or
   6:./quantum/rgb.h ****  * (at your option) any later version.
   7:./quantum/rgb.h ****  *
   8:./quantum/rgb.h ****  * This program is distributed in the hope that it will be useful,
   9:./quantum/rgb.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:./quantum/rgb.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:./quantum/rgb.h ****  * GNU General Public License for more details.
  12:./quantum/rgb.h ****  *
  13:./quantum/rgb.h ****  * You should have received a copy of the GNU General Public License
  14:./quantum/rgb.h ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:./quantum/rgb.h ****  */
  16:./quantum/rgb.h **** 
  17:./quantum/rgb.h **** #ifndef RGB_H
  18:./quantum/rgb.h **** #define RGB_H
  19:./quantum/rgb.h **** 
  20:./quantum/rgb.h **** __attribute__((weak))
  21:./quantum/rgb.h **** void rgblight_toggle(void) {};
  16               		.loc 1 21 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  22 0000 0895      		ret
  23               		.cfi_endproc
  24               	.LFE10:
  26               		.section	.text.rgblight_step,"ax",@progbits
  27               		.weak	rgblight_step
  29               	rgblight_step:
  30               	.LFB11:
  22:./quantum/rgb.h **** 
  23:./quantum/rgb.h **** __attribute__((weak))
  24:./quantum/rgb.h **** void rgblight_step(void) {};
  31               		.loc 1 24 0
  32               		.cfi_startproc
  33               	/* prologue: function */
  34               	/* frame size = 0 */
  35               	/* stack size = 0 */
  36               	.L__stack_usage = 0
  37 0000 0895      		ret
  38               		.cfi_endproc
  39               	.LFE11:
  41               		.section	.text.rgblight_step_reverse,"ax",@progbits
  42               		.weak	rgblight_step_reverse
  44               	rgblight_step_reverse:
  45               	.LFB12:
  25:./quantum/rgb.h **** 
  26:./quantum/rgb.h **** __attribute__((weak))
  27:./quantum/rgb.h **** void rgblight_step_reverse(void) {};
  46               		.loc 1 27 0
  47               		.cfi_startproc
  48               	/* prologue: function */
  49               	/* frame size = 0 */
  50               	/* stack size = 0 */
  51               	.L__stack_usage = 0
  52 0000 0895      		ret
  53               		.cfi_endproc
  54               	.LFE12:
  56               		.section	.text.rgblight_increase_hue,"ax",@progbits
  57               		.weak	rgblight_increase_hue
  59               	rgblight_increase_hue:
  60               	.LFB13:
  28:./quantum/rgb.h **** 
  29:./quantum/rgb.h **** __attribute__((weak))
  30:./quantum/rgb.h **** void rgblight_increase_hue(void) {};
  61               		.loc 1 30 0
  62               		.cfi_startproc
  63               	/* prologue: function */
  64               	/* frame size = 0 */
  65               	/* stack size = 0 */
  66               	.L__stack_usage = 0
  67 0000 0895      		ret
  68               		.cfi_endproc
  69               	.LFE13:
  71               		.section	.text.rgblight_decrease_hue,"ax",@progbits
  72               		.weak	rgblight_decrease_hue
  74               	rgblight_decrease_hue:
  75               	.LFB14:
  31:./quantum/rgb.h **** 
  32:./quantum/rgb.h **** __attribute__((weak))
  33:./quantum/rgb.h **** void rgblight_decrease_hue(void) {};
  76               		.loc 1 33 0
  77               		.cfi_startproc
  78               	/* prologue: function */
  79               	/* frame size = 0 */
  80               	/* stack size = 0 */
  81               	.L__stack_usage = 0
  82 0000 0895      		ret
  83               		.cfi_endproc
  84               	.LFE14:
  86               		.section	.text.rgblight_increase_sat,"ax",@progbits
  87               		.weak	rgblight_increase_sat
  89               	rgblight_increase_sat:
  90               	.LFB15:
  34:./quantum/rgb.h **** 
  35:./quantum/rgb.h **** __attribute__((weak))
  36:./quantum/rgb.h **** void rgblight_increase_sat(void) {};
  91               		.loc 1 36 0
  92               		.cfi_startproc
  93               	/* prologue: function */
  94               	/* frame size = 0 */
  95               	/* stack size = 0 */
  96               	.L__stack_usage = 0
  97 0000 0895      		ret
  98               		.cfi_endproc
  99               	.LFE15:
 101               		.section	.text.rgblight_decrease_sat,"ax",@progbits
 102               		.weak	rgblight_decrease_sat
 104               	rgblight_decrease_sat:
 105               	.LFB16:
  37:./quantum/rgb.h **** 
  38:./quantum/rgb.h **** __attribute__((weak))
  39:./quantum/rgb.h **** void rgblight_decrease_sat(void) {};
 106               		.loc 1 39 0
 107               		.cfi_startproc
 108               	/* prologue: function */
 109               	/* frame size = 0 */
 110               	/* stack size = 0 */
 111               	.L__stack_usage = 0
 112 0000 0895      		ret
 113               		.cfi_endproc
 114               	.LFE16:
 116               		.section	.text.rgblight_increase_val,"ax",@progbits
 117               		.weak	rgblight_increase_val
 119               	rgblight_increase_val:
 120               	.LFB17:
  40:./quantum/rgb.h **** 
  41:./quantum/rgb.h **** __attribute__((weak))
  42:./quantum/rgb.h **** void rgblight_increase_val(void) {};
 121               		.loc 1 42 0
 122               		.cfi_startproc
 123               	/* prologue: function */
 124               	/* frame size = 0 */
 125               	/* stack size = 0 */
 126               	.L__stack_usage = 0
 127 0000 0895      		ret
 128               		.cfi_endproc
 129               	.LFE17:
 131               		.section	.text.rgblight_decrease_val,"ax",@progbits
 132               		.weak	rgblight_decrease_val
 134               	rgblight_decrease_val:
 135               	.LFB18:
  43:./quantum/rgb.h **** 
  44:./quantum/rgb.h **** __attribute__((weak))
  45:./quantum/rgb.h **** void rgblight_decrease_val(void) {};
 136               		.loc 1 45 0
 137               		.cfi_startproc
 138               	/* prologue: function */
 139               	/* frame size = 0 */
 140               	/* stack size = 0 */
 141               	.L__stack_usage = 0
 142 0000 0895      		ret
 143               		.cfi_endproc
 144               	.LFE18:
 146               		.section	.text.rgblight_increase_speed,"ax",@progbits
 147               		.weak	rgblight_increase_speed
 149               	rgblight_increase_speed:
 150               	.LFB19:
  46:./quantum/rgb.h **** 
  47:./quantum/rgb.h **** __attribute__((weak))
  48:./quantum/rgb.h **** void rgblight_increase_speed(void) {};
 151               		.loc 1 48 0
 152               		.cfi_startproc
 153               	/* prologue: function */
 154               	/* frame size = 0 */
 155               	/* stack size = 0 */
 156               	.L__stack_usage = 0
 157 0000 0895      		ret
 158               		.cfi_endproc
 159               	.LFE19:
 161               		.section	.text.rgblight_decrease_speed,"ax",@progbits
 162               		.weak	rgblight_decrease_speed
 164               	rgblight_decrease_speed:
 165               	.LFB20:
  49:./quantum/rgb.h **** 
  50:./quantum/rgb.h **** __attribute__((weak))
  51:./quantum/rgb.h **** void rgblight_decrease_speed(void) {};
 166               		.loc 1 51 0
 167               		.cfi_startproc
 168               	/* prologue: function */
 169               	/* frame size = 0 */
 170               	/* stack size = 0 */
 171               	.L__stack_usage = 0
 172 0000 0895      		ret
 173               		.cfi_endproc
 174               	.LFE20:
 176               		.section	.text.leader_start,"ax",@progbits
 177               		.weak	leader_start
 179               	leader_start:
 180               	.LFB24:
 181               		.file 2 "quantum/process_keycode/process_leader.c"
   1:quantum/process_keycode/process_leader.c **** /* Copyright 2016 Jack Humbert
   2:quantum/process_keycode/process_leader.c ****  *
   3:quantum/process_keycode/process_leader.c ****  * This program is free software: you can redistribute it and/or modify
   4:quantum/process_keycode/process_leader.c ****  * it under the terms of the GNU General Public License as published by
   5:quantum/process_keycode/process_leader.c ****  * the Free Software Foundation, either version 2 of the License, or
   6:quantum/process_keycode/process_leader.c ****  * (at your option) any later version.
   7:quantum/process_keycode/process_leader.c ****  *
   8:quantum/process_keycode/process_leader.c ****  * This program is distributed in the hope that it will be useful,
   9:quantum/process_keycode/process_leader.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:quantum/process_keycode/process_leader.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:quantum/process_keycode/process_leader.c ****  * GNU General Public License for more details.
  12:quantum/process_keycode/process_leader.c ****  *
  13:quantum/process_keycode/process_leader.c ****  * You should have received a copy of the GNU General Public License
  14:quantum/process_keycode/process_leader.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:quantum/process_keycode/process_leader.c ****  */
  16:quantum/process_keycode/process_leader.c **** 
  17:quantum/process_keycode/process_leader.c **** #ifndef DISABLE_LEADER
  18:quantum/process_keycode/process_leader.c **** 
  19:quantum/process_keycode/process_leader.c **** #include "process_leader.h"
  20:quantum/process_keycode/process_leader.c **** 
  21:quantum/process_keycode/process_leader.c **** #ifndef LEADER_TIMEOUT
  22:quantum/process_keycode/process_leader.c ****   #define LEADER_TIMEOUT 300
  23:quantum/process_keycode/process_leader.c **** #endif
  24:quantum/process_keycode/process_leader.c **** 
  25:quantum/process_keycode/process_leader.c **** __attribute__ ((weak))
  26:quantum/process_keycode/process_leader.c **** void leader_start(void) {}
 182               		.loc 2 26 0
 183               		.cfi_startproc
 184               	/* prologue: function */
 185               	/* frame size = 0 */
 186               	/* stack size = 0 */
 187               	.L__stack_usage = 0
 188 0000 0895      		ret
 189               		.cfi_endproc
 190               	.LFE24:
 192               		.section	.text.leader_end,"ax",@progbits
 193               		.weak	leader_end
 195               	leader_end:
 196               	.LFB25:
  27:quantum/process_keycode/process_leader.c **** 
  28:quantum/process_keycode/process_leader.c **** __attribute__ ((weak))
  29:quantum/process_keycode/process_leader.c **** void leader_end(void) {}
 197               		.loc 2 29 0
 198               		.cfi_startproc
 199               	/* prologue: function */
 200               	/* frame size = 0 */
 201               	/* stack size = 0 */
 202               	.L__stack_usage = 0
 203 0000 0895      		ret
 204               		.cfi_endproc
 205               	.LFE25:
 207               		.section	.text.process_leader,"ax",@progbits
 208               	.global	process_leader
 210               	process_leader:
 211               	.LFB26:
  30:quantum/process_keycode/process_leader.c **** 
  31:quantum/process_keycode/process_leader.c **** // Leader key stuff
  32:quantum/process_keycode/process_leader.c **** bool leading = false;
  33:quantum/process_keycode/process_leader.c **** uint16_t leader_time = 0;
  34:quantum/process_keycode/process_leader.c **** 
  35:quantum/process_keycode/process_leader.c **** uint16_t leader_sequence[5] = {0, 0, 0, 0, 0};
  36:quantum/process_keycode/process_leader.c **** uint8_t leader_sequence_size = 0;
  37:quantum/process_keycode/process_leader.c **** 
  38:quantum/process_keycode/process_leader.c **** bool process_leader(uint16_t keycode, keyrecord_t *record) {
 212               		.loc 2 38 0
 213               		.cfi_startproc
 214               	.LVL0:
 215               		.loc 2 38 0
 216 0000 CF93      		push r28
 217               	.LCFI0:
 218               		.cfi_def_cfa_offset 3
 219               		.cfi_offset 28, -2
 220 0002 DF93      		push r29
 221               	.LCFI1:
 222               		.cfi_def_cfa_offset 4
 223               		.cfi_offset 29, -3
 224               	/* prologue: function */
 225               	/* frame size = 0 */
 226               	/* stack size = 2 */
 227               	.L__stack_usage = 2
 228 0004 EC01      		movw r28,r24
  39:quantum/process_keycode/process_leader.c ****   // Leader key set-up
  40:quantum/process_keycode/process_leader.c ****   if (record->event.pressed) {
 229               		.loc 2 40 0
 230 0006 FB01      		movw r30,r22
 231 0008 8281      		ldd r24,Z+2
 232               	.LVL1:
 233 000a 8111      		cpse r24,__zero_reg__
 234 000c 00C0      		rjmp .L15
 235               	.LVL2:
 236               	.L18:
  41:quantum/process_keycode/process_leader.c ****     if (!leading && keycode == KC_LEAD) {
  42:quantum/process_keycode/process_leader.c ****       leader_start();
  43:quantum/process_keycode/process_leader.c ****       leading = true;
  44:quantum/process_keycode/process_leader.c ****       leader_time = timer_read();
  45:quantum/process_keycode/process_leader.c ****       leader_sequence_size = 0;
  46:quantum/process_keycode/process_leader.c ****       leader_sequence[0] = 0;
  47:quantum/process_keycode/process_leader.c ****       leader_sequence[1] = 0;
  48:quantum/process_keycode/process_leader.c ****       leader_sequence[2] = 0;
  49:quantum/process_keycode/process_leader.c ****       leader_sequence[3] = 0;
  50:quantum/process_keycode/process_leader.c ****       leader_sequence[4] = 0;
  51:quantum/process_keycode/process_leader.c ****       return false;
  52:quantum/process_keycode/process_leader.c ****     }
  53:quantum/process_keycode/process_leader.c ****     if (leading && timer_elapsed(leader_time) < LEADER_TIMEOUT) {
  54:quantum/process_keycode/process_leader.c ****       leader_sequence[leader_sequence_size] = keycode;
  55:quantum/process_keycode/process_leader.c ****       leader_sequence_size++;
  56:quantum/process_keycode/process_leader.c ****       return false;
  57:quantum/process_keycode/process_leader.c ****     }
  58:quantum/process_keycode/process_leader.c ****   }
  59:quantum/process_keycode/process_leader.c ****   return true;
 237               		.loc 2 59 0
 238 000e 81E0      		ldi r24,lo8(1)
 239 0010 00C0      		rjmp .L16
 240               	.LVL3:
 241               	.L15:
  41:quantum/process_keycode/process_leader.c ****     if (!leading && keycode == KC_LEAD) {
 242               		.loc 2 41 0
 243 0012 8091 0000 		lds r24,leading
 244 0016 8111      		cpse r24,__zero_reg__
 245 0018 00C0      		rjmp .L17
  41:quantum/process_keycode/process_leader.c ****     if (!leading && keycode == KC_LEAD) {
 246               		.loc 2 41 0 is_stmt 0 discriminator 1
 247 001a C631      		cpi r28,22
 248 001c DC45      		sbci r29,92
 249 001e 01F4      		brne .L18
  42:quantum/process_keycode/process_leader.c ****       leader_start();
 250               		.loc 2 42 0 is_stmt 1
 251 0020 0E94 0000 		call leader_start
 252               	.LVL4:
  43:quantum/process_keycode/process_leader.c ****       leading = true;
 253               		.loc 2 43 0
 254 0024 81E0      		ldi r24,lo8(1)
 255 0026 8093 0000 		sts leading,r24
  44:quantum/process_keycode/process_leader.c ****       leader_time = timer_read();
 256               		.loc 2 44 0
 257 002a 0E94 0000 		call timer_read
 258               	.LVL5:
 259 002e 9093 0000 		sts leader_time+1,r25
 260 0032 8093 0000 		sts leader_time,r24
  45:quantum/process_keycode/process_leader.c ****       leader_sequence_size = 0;
 261               		.loc 2 45 0
 262 0036 1092 0000 		sts leader_sequence_size,__zero_reg__
  46:quantum/process_keycode/process_leader.c ****       leader_sequence[0] = 0;
 263               		.loc 2 46 0
 264 003a 1092 0000 		sts leader_sequence+1,__zero_reg__
 265 003e 1092 0000 		sts leader_sequence,__zero_reg__
  47:quantum/process_keycode/process_leader.c ****       leader_sequence[1] = 0;
 266               		.loc 2 47 0
 267 0042 1092 0000 		sts leader_sequence+2+1,__zero_reg__
 268 0046 1092 0000 		sts leader_sequence+2,__zero_reg__
  48:quantum/process_keycode/process_leader.c ****       leader_sequence[2] = 0;
 269               		.loc 2 48 0
 270 004a 1092 0000 		sts leader_sequence+4+1,__zero_reg__
 271 004e 1092 0000 		sts leader_sequence+4,__zero_reg__
  49:quantum/process_keycode/process_leader.c ****       leader_sequence[3] = 0;
 272               		.loc 2 49 0
 273 0052 1092 0000 		sts leader_sequence+6+1,__zero_reg__
 274 0056 1092 0000 		sts leader_sequence+6,__zero_reg__
  50:quantum/process_keycode/process_leader.c ****       leader_sequence[4] = 0;
 275               		.loc 2 50 0
 276 005a 1092 0000 		sts leader_sequence+8+1,__zero_reg__
 277 005e 1092 0000 		sts leader_sequence+8,__zero_reg__
 278 0062 00C0      		rjmp .L19
 279               	.LVL6:
 280               	.L17:
  53:quantum/process_keycode/process_leader.c ****     if (leading && timer_elapsed(leader_time) < LEADER_TIMEOUT) {
 281               		.loc 2 53 0 discriminator 1
 282 0064 8091 0000 		lds r24,leader_time
 283 0068 9091 0000 		lds r25,leader_time+1
 284 006c 0E94 0000 		call timer_elapsed
 285               	.LVL7:
 286 0070 8C32      		cpi r24,44
 287 0072 9140      		sbci r25,1
 288 0074 00F4      		brsh .L18
  54:quantum/process_keycode/process_leader.c ****       leader_sequence[leader_sequence_size] = keycode;
 289               		.loc 2 54 0
 290 0076 8091 0000 		lds r24,leader_sequence_size
 291 007a E82F      		mov r30,r24
 292 007c F0E0      		ldi r31,0
 293 007e EE0F      		lsl r30
 294 0080 FF1F      		rol r31
 295 0082 E050      		subi r30,lo8(-(leader_sequence))
 296 0084 F040      		sbci r31,hi8(-(leader_sequence))
 297 0086 D183      		std Z+1,r29
 298 0088 C083      		st Z,r28
  55:quantum/process_keycode/process_leader.c ****       leader_sequence_size++;
 299               		.loc 2 55 0
 300 008a 8F5F      		subi r24,lo8(-(1))
 301 008c 8093 0000 		sts leader_sequence_size,r24
 302               	.L19:
  56:quantum/process_keycode/process_leader.c ****       return false;
 303               		.loc 2 56 0
 304 0090 80E0      		ldi r24,0
 305               	.L16:
 306               	/* epilogue start */
  60:quantum/process_keycode/process_leader.c **** }
 307               		.loc 2 60 0
 308 0092 DF91      		pop r29
 309 0094 CF91      		pop r28
 310               	.LVL8:
 311 0096 0895      		ret
 312               		.cfi_endproc
 313               	.LFE26:
 315               	.global	leader_sequence_size
 316               		.section	.bss.leader_sequence_size,"aw",@nobits
 319               	leader_sequence_size:
 320 0000 00        		.zero	1
 321               	.global	leader_sequence
 322               		.section	.bss.leader_sequence,"aw",@nobits
 325               	leader_sequence:
 326 0000 0000 0000 		.zero	10
 326      0000 0000 
 326      0000 
 327               	.global	leader_time
 328               		.section	.bss.leader_time,"aw",@nobits
 331               	leader_time:
 332 0000 0000      		.zero	2
 333               	.global	leading
 334               		.section	.bss.leading,"aw",@nobits
 337               	leading:
 338 0000 00        		.zero	1
 339               		.text
 340               	.Letext0:
 341               		.file 3 "/usr/lib/avr/include/stdint.h"
 342               		.file 4 "./tmk_core/common/keyboard.h"
 343               		.file 5 "./tmk_core/common/action.h"
 344               		.file 6 "./tmk_core/common/report.h"
 345               		.file 7 "./tmk_core/common/action_util.h"
 346               		.file 8 "./quantum/quantum_keycodes.h"
 347               		.file 9 "./tmk_core/common/timer.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 process_leader.c
     /tmp/ccV3KGiZ.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccV3KGiZ.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccV3KGiZ.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccV3KGiZ.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccV3KGiZ.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccV3KGiZ.s:13     .text.rgblight_toggle:0000000000000000 rgblight_toggle
     /tmp/ccV3KGiZ.s:29     .text.rgblight_step:0000000000000000 rgblight_step
     /tmp/ccV3KGiZ.s:44     .text.rgblight_step_reverse:0000000000000000 rgblight_step_reverse
     /tmp/ccV3KGiZ.s:59     .text.rgblight_increase_hue:0000000000000000 rgblight_increase_hue
     /tmp/ccV3KGiZ.s:74     .text.rgblight_decrease_hue:0000000000000000 rgblight_decrease_hue
     /tmp/ccV3KGiZ.s:89     .text.rgblight_increase_sat:0000000000000000 rgblight_increase_sat
     /tmp/ccV3KGiZ.s:104    .text.rgblight_decrease_sat:0000000000000000 rgblight_decrease_sat
     /tmp/ccV3KGiZ.s:119    .text.rgblight_increase_val:0000000000000000 rgblight_increase_val
     /tmp/ccV3KGiZ.s:134    .text.rgblight_decrease_val:0000000000000000 rgblight_decrease_val
     /tmp/ccV3KGiZ.s:149    .text.rgblight_increase_speed:0000000000000000 rgblight_increase_speed
     /tmp/ccV3KGiZ.s:164    .text.rgblight_decrease_speed:0000000000000000 rgblight_decrease_speed
     /tmp/ccV3KGiZ.s:179    .text.leader_start:0000000000000000 leader_start
     /tmp/ccV3KGiZ.s:195    .text.leader_end:0000000000000000 leader_end
     /tmp/ccV3KGiZ.s:210    .text.process_leader:0000000000000000 process_leader
     /tmp/ccV3KGiZ.s:337    .bss.leading:0000000000000000 leading
     /tmp/ccV3KGiZ.s:331    .bss.leader_time:0000000000000000 leader_time
     /tmp/ccV3KGiZ.s:319    .bss.leader_sequence_size:0000000000000000 leader_sequence_size
     /tmp/ccV3KGiZ.s:325    .bss.leader_sequence:0000000000000000 leader_sequence

UNDEFINED SYMBOLS
timer_read
timer_elapsed
__do_clear_bss
