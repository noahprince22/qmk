   1               		.file	"keymap_common.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.rgblight_toggle,"ax",@progbits
  11               		.weak	rgblight_toggle
  13               	rgblight_toggle:
  14               	.LFB11:
  15               		.file 1 "quantum/rgb.h"
   1:quantum/rgb.h **** /* Copyright 2017 Jack Humbert
   2:quantum/rgb.h ****  *
   3:quantum/rgb.h ****  * This program is free software: you can redistribute it and/or modify
   4:quantum/rgb.h ****  * it under the terms of the GNU General Public License as published by
   5:quantum/rgb.h ****  * the Free Software Foundation, either version 2 of the License, or
   6:quantum/rgb.h ****  * (at your option) any later version.
   7:quantum/rgb.h ****  *
   8:quantum/rgb.h ****  * This program is distributed in the hope that it will be useful,
   9:quantum/rgb.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:quantum/rgb.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:quantum/rgb.h ****  * GNU General Public License for more details.
  12:quantum/rgb.h ****  *
  13:quantum/rgb.h ****  * You should have received a copy of the GNU General Public License
  14:quantum/rgb.h ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:quantum/rgb.h ****  */
  16:quantum/rgb.h **** 
  17:quantum/rgb.h **** #ifndef RGB_H
  18:quantum/rgb.h **** #define RGB_H
  19:quantum/rgb.h **** 
  20:quantum/rgb.h **** __attribute__((weak))
  21:quantum/rgb.h **** void rgblight_toggle(void) {};
  16               		.loc 1 21 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  22 0000 0895      		ret
  23               		.cfi_endproc
  24               	.LFE11:
  26               		.section	.text.rgblight_step,"ax",@progbits
  27               		.weak	rgblight_step
  29               	rgblight_step:
  30               	.LFB12:
  22:quantum/rgb.h **** 
  23:quantum/rgb.h **** __attribute__((weak))
  24:quantum/rgb.h **** void rgblight_step(void) {};
  31               		.loc 1 24 0
  32               		.cfi_startproc
  33               	/* prologue: function */
  34               	/* frame size = 0 */
  35               	/* stack size = 0 */
  36               	.L__stack_usage = 0
  37 0000 0895      		ret
  38               		.cfi_endproc
  39               	.LFE12:
  41               		.section	.text.rgblight_step_reverse,"ax",@progbits
  42               		.weak	rgblight_step_reverse
  44               	rgblight_step_reverse:
  45               	.LFB13:
  25:quantum/rgb.h **** 
  26:quantum/rgb.h **** __attribute__((weak))
  27:quantum/rgb.h **** void rgblight_step_reverse(void) {};
  46               		.loc 1 27 0
  47               		.cfi_startproc
  48               	/* prologue: function */
  49               	/* frame size = 0 */
  50               	/* stack size = 0 */
  51               	.L__stack_usage = 0
  52 0000 0895      		ret
  53               		.cfi_endproc
  54               	.LFE13:
  56               		.section	.text.rgblight_increase_hue,"ax",@progbits
  57               		.weak	rgblight_increase_hue
  59               	rgblight_increase_hue:
  60               	.LFB14:
  28:quantum/rgb.h **** 
  29:quantum/rgb.h **** __attribute__((weak))
  30:quantum/rgb.h **** void rgblight_increase_hue(void) {};
  61               		.loc 1 30 0
  62               		.cfi_startproc
  63               	/* prologue: function */
  64               	/* frame size = 0 */
  65               	/* stack size = 0 */
  66               	.L__stack_usage = 0
  67 0000 0895      		ret
  68               		.cfi_endproc
  69               	.LFE14:
  71               		.section	.text.rgblight_decrease_hue,"ax",@progbits
  72               		.weak	rgblight_decrease_hue
  74               	rgblight_decrease_hue:
  75               	.LFB15:
  31:quantum/rgb.h **** 
  32:quantum/rgb.h **** __attribute__((weak))
  33:quantum/rgb.h **** void rgblight_decrease_hue(void) {};
  76               		.loc 1 33 0
  77               		.cfi_startproc
  78               	/* prologue: function */
  79               	/* frame size = 0 */
  80               	/* stack size = 0 */
  81               	.L__stack_usage = 0
  82 0000 0895      		ret
  83               		.cfi_endproc
  84               	.LFE15:
  86               		.section	.text.rgblight_increase_sat,"ax",@progbits
  87               		.weak	rgblight_increase_sat
  89               	rgblight_increase_sat:
  90               	.LFB16:
  34:quantum/rgb.h **** 
  35:quantum/rgb.h **** __attribute__((weak))
  36:quantum/rgb.h **** void rgblight_increase_sat(void) {};
  91               		.loc 1 36 0
  92               		.cfi_startproc
  93               	/* prologue: function */
  94               	/* frame size = 0 */
  95               	/* stack size = 0 */
  96               	.L__stack_usage = 0
  97 0000 0895      		ret
  98               		.cfi_endproc
  99               	.LFE16:
 101               		.section	.text.rgblight_decrease_sat,"ax",@progbits
 102               		.weak	rgblight_decrease_sat
 104               	rgblight_decrease_sat:
 105               	.LFB17:
  37:quantum/rgb.h **** 
  38:quantum/rgb.h **** __attribute__((weak))
  39:quantum/rgb.h **** void rgblight_decrease_sat(void) {};
 106               		.loc 1 39 0
 107               		.cfi_startproc
 108               	/* prologue: function */
 109               	/* frame size = 0 */
 110               	/* stack size = 0 */
 111               	.L__stack_usage = 0
 112 0000 0895      		ret
 113               		.cfi_endproc
 114               	.LFE17:
 116               		.section	.text.rgblight_increase_val,"ax",@progbits
 117               		.weak	rgblight_increase_val
 119               	rgblight_increase_val:
 120               	.LFB18:
  40:quantum/rgb.h **** 
  41:quantum/rgb.h **** __attribute__((weak))
  42:quantum/rgb.h **** void rgblight_increase_val(void) {};
 121               		.loc 1 42 0
 122               		.cfi_startproc
 123               	/* prologue: function */
 124               	/* frame size = 0 */
 125               	/* stack size = 0 */
 126               	.L__stack_usage = 0
 127 0000 0895      		ret
 128               		.cfi_endproc
 129               	.LFE18:
 131               		.section	.text.rgblight_decrease_val,"ax",@progbits
 132               		.weak	rgblight_decrease_val
 134               	rgblight_decrease_val:
 135               	.LFB19:
  43:quantum/rgb.h **** 
  44:quantum/rgb.h **** __attribute__((weak))
  45:quantum/rgb.h **** void rgblight_decrease_val(void) {};
 136               		.loc 1 45 0
 137               		.cfi_startproc
 138               	/* prologue: function */
 139               	/* frame size = 0 */
 140               	/* stack size = 0 */
 141               	.L__stack_usage = 0
 142 0000 0895      		ret
 143               		.cfi_endproc
 144               	.LFE19:
 146               		.section	.text.rgblight_increase_speed,"ax",@progbits
 147               		.weak	rgblight_increase_speed
 149               	rgblight_increase_speed:
 150               	.LFB20:
  46:quantum/rgb.h **** 
  47:quantum/rgb.h **** __attribute__((weak))
  48:quantum/rgb.h **** void rgblight_increase_speed(void) {};
 151               		.loc 1 48 0
 152               		.cfi_startproc
 153               	/* prologue: function */
 154               	/* frame size = 0 */
 155               	/* stack size = 0 */
 156               	.L__stack_usage = 0
 157 0000 0895      		ret
 158               		.cfi_endproc
 159               	.LFE20:
 161               		.section	.text.rgblight_decrease_speed,"ax",@progbits
 162               		.weak	rgblight_decrease_speed
 164               	rgblight_decrease_speed:
 165               	.LFB21:
  49:quantum/rgb.h **** 
  50:quantum/rgb.h **** __attribute__((weak))
  51:quantum/rgb.h **** void rgblight_decrease_speed(void) {};
 166               		.loc 1 51 0
 167               		.cfi_startproc
 168               	/* prologue: function */
 169               	/* frame size = 0 */
 170               	/* stack size = 0 */
 171               	.L__stack_usage = 0
 172 0000 0895      		ret
 173               		.cfi_endproc
 174               	.LFE21:
 176               		.section	.text.action_get_macro,"ax",@progbits
 177               		.weak	action_get_macro
 179               	action_get_macro:
 180               	.LFB26:
 181               		.file 2 "quantum/keymap_common.c"
   1:quantum/keymap_common.c **** /*
   2:quantum/keymap_common.c **** Copyright 2012-2017 Jun Wako <wakojun@gmail.com>
   3:quantum/keymap_common.c **** 
   4:quantum/keymap_common.c **** This program is free software: you can redistribute it and/or modify
   5:quantum/keymap_common.c **** it under the terms of the GNU General Public License as published by
   6:quantum/keymap_common.c **** the Free Software Foundation, either version 2 of the License, or
   7:quantum/keymap_common.c **** (at your option) any later version.
   8:quantum/keymap_common.c **** 
   9:quantum/keymap_common.c **** This program is distributed in the hope that it will be useful,
  10:quantum/keymap_common.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/keymap_common.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/keymap_common.c **** GNU General Public License for more details.
  13:quantum/keymap_common.c **** 
  14:quantum/keymap_common.c **** You should have received a copy of the GNU General Public License
  15:quantum/keymap_common.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/keymap_common.c **** */
  17:quantum/keymap_common.c **** 
  18:quantum/keymap_common.c **** #include "keymap.h"
  19:quantum/keymap_common.c **** #include "report.h"
  20:quantum/keymap_common.c **** #include "keycode.h"
  21:quantum/keymap_common.c **** #include "action_layer.h"
  22:quantum/keymap_common.c **** #if defined(__AVR__)
  23:quantum/keymap_common.c **** #include <util/delay.h>
  24:quantum/keymap_common.c **** #include <stdio.h>
  25:quantum/keymap_common.c **** #endif
  26:quantum/keymap_common.c **** #include "action.h"
  27:quantum/keymap_common.c **** #include "action_macro.h"
  28:quantum/keymap_common.c **** #include "debug.h"
  29:quantum/keymap_common.c **** #include "backlight.h"
  30:quantum/keymap_common.c **** #include "quantum.h"
  31:quantum/keymap_common.c **** 
  32:quantum/keymap_common.c **** #ifdef MIDI_ENABLE
  33:quantum/keymap_common.c **** 	#include "process_midi.h"
  34:quantum/keymap_common.c **** #endif
  35:quantum/keymap_common.c **** 
  36:quantum/keymap_common.c **** extern keymap_config_t keymap_config;
  37:quantum/keymap_common.c **** 
  38:quantum/keymap_common.c **** #include <inttypes.h>
  39:quantum/keymap_common.c **** 
  40:quantum/keymap_common.c **** /* converts key to action */
  41:quantum/keymap_common.c **** action_t action_for_key(uint8_t layer, keypos_t key)
  42:quantum/keymap_common.c **** {
  43:quantum/keymap_common.c ****     // 16bit keycodes - important
  44:quantum/keymap_common.c ****     uint16_t keycode = keymap_key_to_keycode(layer, key);
  45:quantum/keymap_common.c **** 
  46:quantum/keymap_common.c ****     // keycode remapping
  47:quantum/keymap_common.c ****     keycode = keycode_config(keycode);
  48:quantum/keymap_common.c **** 
  49:quantum/keymap_common.c ****     action_t action;
  50:quantum/keymap_common.c ****     uint8_t action_layer, when, mod;
  51:quantum/keymap_common.c **** 
  52:quantum/keymap_common.c ****     switch (keycode) {
  53:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
  54:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action(FN_INDEX(keycode));
  55:quantum/keymap_common.c ****             break;
  56:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
  57:quantum/keymap_common.c ****         case KC_LCTRL ... KC_RGUI:
  58:quantum/keymap_common.c ****             action.code = ACTION_KEY(keycode);
  59:quantum/keymap_common.c ****             break;
  60:quantum/keymap_common.c ****         case KC_SYSTEM_POWER ... KC_SYSTEM_WAKE:
  61:quantum/keymap_common.c ****             action.code = ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
  62:quantum/keymap_common.c ****             break;
  63:quantum/keymap_common.c ****         case KC_AUDIO_MUTE ... KC_MEDIA_REWIND:
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
  65:quantum/keymap_common.c ****             break;
  66:quantum/keymap_common.c ****         case KC_MS_UP ... KC_MS_ACCEL2:
  67:quantum/keymap_common.c ****             action.code = ACTION_MOUSEKEY(keycode);
  68:quantum/keymap_common.c ****             break;
  69:quantum/keymap_common.c ****         case KC_TRNS:
  70:quantum/keymap_common.c ****             action.code = ACTION_TRANSPARENT;
  71:quantum/keymap_common.c ****             break;
  72:quantum/keymap_common.c ****         case QK_MODS ... QK_MODS_MAX: ;
  73:quantum/keymap_common.c ****             // Has a modifier
  74:quantum/keymap_common.c ****             // Split it up
  75:quantum/keymap_common.c ****             action.code = ACTION_MODS_KEY(keycode >> 8, keycode & 0xFF); // adds modifier to key
  76:quantum/keymap_common.c ****             break;
  77:quantum/keymap_common.c ****         case QK_FUNCTION ... QK_FUNCTION_MAX: ;
  78:quantum/keymap_common.c ****             // Is a shortcut for function action_layer, pull last 12bits
  79:quantum/keymap_common.c ****             // This means we have 4,096 FN macros at our disposal
  80:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action( (int)keycode & 0xFFF );
  81:quantum/keymap_common.c ****             break;
  82:quantum/keymap_common.c ****         case QK_MACRO ... QK_MACRO_MAX:
  83:quantum/keymap_common.c ****             if (keycode & 0x800) // tap macros have upper bit set
  84:quantum/keymap_common.c ****                 action.code = ACTION_MACRO_TAP(keycode & 0xFF);
  85:quantum/keymap_common.c ****             else
  86:quantum/keymap_common.c ****                 action.code = ACTION_MACRO(keycode & 0xFF);
  87:quantum/keymap_common.c ****             break;
  88:quantum/keymap_common.c ****         case QK_LAYER_TAP ... QK_LAYER_TAP_MAX:
  89:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_KEY((keycode >> 0x8) & 0xF, keycode & 0xFF);
  90:quantum/keymap_common.c ****             break;
  91:quantum/keymap_common.c ****         case QK_TO ... QK_TO_MAX: ;
  92:quantum/keymap_common.c ****             // Layer set "GOTO"
  93:quantum/keymap_common.c ****             when = (keycode >> 0x4) & 0x3;
  94:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
  95:quantum/keymap_common.c ****             action.code = ACTION_LAYER_SET(action_layer, when);
  96:quantum/keymap_common.c ****             break;
  97:quantum/keymap_common.c ****         case QK_MOMENTARY ... QK_MOMENTARY_MAX: ;
  98:quantum/keymap_common.c ****             // Momentary action_layer
  99:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 100:quantum/keymap_common.c ****             action.code = ACTION_LAYER_MOMENTARY(action_layer);
 101:quantum/keymap_common.c ****             break;
 102:quantum/keymap_common.c ****         case QK_DEF_LAYER ... QK_DEF_LAYER_MAX: ;
 103:quantum/keymap_common.c ****             // Set default action_layer
 104:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 105:quantum/keymap_common.c ****             action.code = ACTION_DEFAULT_LAYER_SET(action_layer);
 106:quantum/keymap_common.c ****             break;
 107:quantum/keymap_common.c ****         case QK_TOGGLE_LAYER ... QK_TOGGLE_LAYER_MAX: ;
 108:quantum/keymap_common.c ****             // Set toggle
 109:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 110:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TOGGLE(action_layer);
 111:quantum/keymap_common.c ****             break;
 112:quantum/keymap_common.c ****         case QK_ONE_SHOT_LAYER ... QK_ONE_SHOT_LAYER_MAX: ;
 113:quantum/keymap_common.c ****             // OSL(action_layer) - One-shot action_layer
 114:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 115:quantum/keymap_common.c ****             action.code = ACTION_LAYER_ONESHOT(action_layer);
 116:quantum/keymap_common.c ****             break;
 117:quantum/keymap_common.c ****         case QK_ONE_SHOT_MOD ... QK_ONE_SHOT_MOD_MAX: ;
 118:quantum/keymap_common.c ****             // OSM(mod) - One-shot mod
 119:quantum/keymap_common.c ****             mod = keycode & 0xFF;
 120:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 121:quantum/keymap_common.c ****             break;
 122:quantum/keymap_common.c ****         case QK_LAYER_TAP_TOGGLE ... QK_LAYER_TAP_TOGGLE_MAX:
 123:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_TOGGLE(keycode & 0xFF);
 124:quantum/keymap_common.c ****             break;
 125:quantum/keymap_common.c ****         case QK_LAYER_MOD ... QK_LAYER_MOD_MAX:
 126:quantum/keymap_common.c ****             mod = keycode & 0xF;
 127:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 128:quantum/keymap_common.c ****             action.code = ACTION_LAYER_MODS(action_layer, mod);
 129:quantum/keymap_common.c ****             break;
 130:quantum/keymap_common.c ****         case QK_MOD_TAP ... QK_MOD_TAP_MAX:
 131:quantum/keymap_common.c ****             mod = mod_config((keycode >> 0x8) & 0x1F);
 132:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 133:quantum/keymap_common.c ****             break;
 134:quantum/keymap_common.c ****     #ifdef BACKLIGHT_ENABLE
 135:quantum/keymap_common.c ****         case BL_ON:
 136:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_ON();
 137:quantum/keymap_common.c ****             break;
 138:quantum/keymap_common.c ****         case BL_OFF:
 139:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_OFF();
 140:quantum/keymap_common.c ****             break;
 141:quantum/keymap_common.c ****         case BL_DEC:
 142:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_DECREASE();
 143:quantum/keymap_common.c ****             break;
 144:quantum/keymap_common.c ****         case BL_INC:
 145:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_INCREASE();
 146:quantum/keymap_common.c ****             break;
 147:quantum/keymap_common.c ****         case BL_TOGG:
 148:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_TOGGLE();
 149:quantum/keymap_common.c ****             break;
 150:quantum/keymap_common.c ****         case BL_STEP:
 151:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_STEP();
 152:quantum/keymap_common.c ****             break;
 153:quantum/keymap_common.c ****     #endif
 154:quantum/keymap_common.c ****     #ifdef SWAP_HANDS_ENABLE
 155:quantum/keymap_common.c ****         case QK_SWAP_HANDS ... QK_SWAP_HANDS_MAX:
 156:quantum/keymap_common.c ****             action.code = ACTION(ACT_SWAP_HANDS, keycode & 0xff);
 157:quantum/keymap_common.c ****             break;
 158:quantum/keymap_common.c ****     #endif
 159:quantum/keymap_common.c **** 
 160:quantum/keymap_common.c ****         default:
 161:quantum/keymap_common.c ****             action.code = ACTION_NO;
 162:quantum/keymap_common.c ****             break;
 163:quantum/keymap_common.c ****     }
 164:quantum/keymap_common.c ****     return action;
 165:quantum/keymap_common.c **** }
 166:quantum/keymap_common.c **** 
 167:quantum/keymap_common.c **** __attribute__ ((weak))
 168:quantum/keymap_common.c **** const uint16_t PROGMEM fn_actions[] = {
 169:quantum/keymap_common.c **** 
 170:quantum/keymap_common.c **** };
 171:quantum/keymap_common.c **** 
 172:quantum/keymap_common.c **** /* Macro */
 173:quantum/keymap_common.c **** __attribute__ ((weak))
 174:quantum/keymap_common.c **** const macro_t *action_get_macro(keyrecord_t *record, uint8_t id, uint8_t opt)
 175:quantum/keymap_common.c **** {
 182               		.loc 2 175 0
 183               		.cfi_startproc
 184               	.LVL0:
 185               	/* prologue: function */
 186               	/* frame size = 0 */
 187               	/* stack size = 0 */
 188               	.L__stack_usage = 0
 176:quantum/keymap_common.c ****     return MACRO_NONE;
 177:quantum/keymap_common.c **** }
 189               		.loc 2 177 0
 190 0000 80E0      		ldi r24,0
 191 0002 90E0      		ldi r25,0
 192               	.LVL1:
 193 0004 0895      		ret
 194               		.cfi_endproc
 195               	.LFE26:
 197               		.section	.text.action_function,"ax",@progbits
 198               		.weak	action_function
 200               	action_function:
 201               	.LFB27:
 178:quantum/keymap_common.c **** 
 179:quantum/keymap_common.c **** /* Function */
 180:quantum/keymap_common.c **** __attribute__ ((weak))
 181:quantum/keymap_common.c **** void action_function(keyrecord_t *record, uint8_t id, uint8_t opt)
 182:quantum/keymap_common.c **** {
 202               		.loc 2 182 0
 203               		.cfi_startproc
 204               	.LVL2:
 205               	/* prologue: function */
 206               	/* frame size = 0 */
 207               	/* stack size = 0 */
 208               	.L__stack_usage = 0
 209 0000 0895      		ret
 210               		.cfi_endproc
 211               	.LFE27:
 213               		.section	.text.keymap_key_to_keycode,"ax",@progbits
 214               		.weak	keymap_key_to_keycode
 216               	keymap_key_to_keycode:
 217               	.LFB28:
 183:quantum/keymap_common.c **** }
 184:quantum/keymap_common.c **** 
 185:quantum/keymap_common.c **** // translates key to keycode
 186:quantum/keymap_common.c **** __attribute__ ((weak))
 187:quantum/keymap_common.c **** uint16_t keymap_key_to_keycode(uint8_t layer, keypos_t key)
 188:quantum/keymap_common.c **** {
 218               		.loc 2 188 0
 219               		.cfi_startproc
 220               	.LVL3:
 221               	/* prologue: function */
 222               	/* frame size = 0 */
 223               	/* stack size = 0 */
 224               	.L__stack_usage = 0
 225               	.LBB2:
 189:quantum/keymap_common.c ****     // Read entire word (16bits)
 190:quantum/keymap_common.c ****     return pgm_read_word(&keymaps[(layer)][(key.row)][(key.col)]);
 226               		.loc 2 190 0
 227 0000 96E0      		ldi r25,lo8(6)
 228 0002 799F      		mul r23,r25
 229 0004 F001      		movw r30,r0
 230 0006 1124      		clr __zero_reg__
 231 0008 98E4      		ldi r25,lo8(72)
 232 000a 899F      		mul r24,r25
 233 000c E00D      		add r30,r0
 234 000e F11D      		adc r31,r1
 235 0010 1124      		clr __zero_reg__
 236 0012 E60F      		add r30,r22
 237 0014 F11D      		adc r31,__zero_reg__
 238 0016 EE0F      		lsl r30
 239 0018 FF1F      		rol r31
 240               	.LVL4:
 241 001a E050      		subi r30,lo8(-(keymaps))
 242 001c F040      		sbci r31,hi8(-(keymaps))
 243               	.LVL5:
 244               	.LBE2:
 191:quantum/keymap_common.c **** }
 245               		.loc 2 191 0
 246               	/* #APP */
 247               	 ;  190 "quantum/keymap_common.c" 1
 248 001e 8591      		lpm r24, Z+
 249 0020 9491      		lpm r25, Z
 250               		
 251               	 ;  0 "" 2
 252               	/* #NOAPP */
 253 0022 0895      		ret
 254               		.cfi_endproc
 255               	.LFE28:
 257               		.section	.text.keymap_function_id_to_action,"ax",@progbits
 258               		.weak	keymap_function_id_to_action
 260               	keymap_function_id_to_action:
 261               	.LFB29:
 192:quantum/keymap_common.c **** 
 193:quantum/keymap_common.c **** // translates function id to action
 194:quantum/keymap_common.c **** __attribute__ ((weak))
 195:quantum/keymap_common.c **** uint16_t keymap_function_id_to_action( uint16_t function_id )
 196:quantum/keymap_common.c **** {
 262               		.loc 2 196 0
 263               		.cfi_startproc
 264               	.LVL6:
 265               	/* prologue: function */
 266               	/* frame size = 0 */
 267               	/* stack size = 0 */
 268               	.L__stack_usage = 0
 269               	.LBB3:
 197:quantum/keymap_common.c ****     // The compiler sees the empty (weak) fn_actions and generates a warning
 198:quantum/keymap_common.c ****     // This function should not be called in that case, so the warning is too strict
 199:quantum/keymap_common.c ****     // If this function is called however, the keymap should have overridden fn_actions, and then t
 200:quantum/keymap_common.c ****     // is comparing against the wrong array
 201:quantum/keymap_common.c ****     #pragma GCC diagnostic push
 202:quantum/keymap_common.c ****     #pragma GCC diagnostic ignored "-Warray-bounds"
 203:quantum/keymap_common.c **** 	return pgm_read_word(&fn_actions[function_id]);
 270               		.loc 2 203 0
 271 0000 880F      		lsl r24
 272 0002 991F      		rol r25
 273               	.LVL7:
 274 0004 8050      		subi r24,lo8(-(fn_actions))
 275 0006 9040      		sbci r25,hi8(-(fn_actions))
 276               	.LVL8:
 277               	.LBE3:
 204:quantum/keymap_common.c ****     #pragma GCC diagnostic pop
 205:quantum/keymap_common.c **** }
 278               		.loc 2 205 0
 279 0008 FC01      		movw r30,r24
 280               	/* #APP */
 281               	 ;  203 "quantum/keymap_common.c" 1
 282 000a 8591      		lpm r24, Z+
 283 000c 9491      		lpm r25, Z
 284               		
 285               	 ;  0 "" 2
 286               	/* #NOAPP */
 287 000e 0895      		ret
 288               		.cfi_endproc
 289               	.LFE29:
 291               		.section	.text.action_for_key,"ax",@progbits
 292               	.global	action_for_key
 294               	action_for_key:
 295               	.LFB25:
  42:quantum/keymap_common.c **** {
 296               		.loc 2 42 0
 297               		.cfi_startproc
 298               	.LVL9:
 299 0000 CF93      		push r28
 300               	.LCFI0:
 301               		.cfi_def_cfa_offset 3
 302               		.cfi_offset 28, -2
 303 0002 DF93      		push r29
 304               	.LCFI1:
 305               		.cfi_def_cfa_offset 4
 306               		.cfi_offset 29, -3
 307               	/* prologue: function */
 308               	/* frame size = 0 */
 309               	/* stack size = 2 */
 310               	.L__stack_usage = 2
  44:quantum/keymap_common.c ****     uint16_t keycode = keymap_key_to_keycode(layer, key);
 311               		.loc 2 44 0
 312 0004 0E94 0000 		call keymap_key_to_keycode
 313               	.LVL10:
  47:quantum/keymap_common.c ****     keycode = keycode_config(keycode);
 314               		.loc 2 47 0
 315 0008 0E94 0000 		call keycode_config
 316               	.LVL11:
 317 000c EC01      		movw r28,r24
 318               	.LVL12:
  52:quantum/keymap_common.c ****     switch (keycode) {
 319               		.loc 2 52 0
 320 000e 8115      		cp r24,__zero_reg__
 321 0010 20E5      		ldi r18,80
 322 0012 9207      		cpc r25,r18
 323 0014 00F0      		brlo .+2
 324 0016 00C0      		rjmp .L18
 325 0018 8115      		cp r24,__zero_reg__
 326 001a 30E4      		ldi r19,64
 327 001c 9307      		cpc r25,r19
 328 001e 00F0      		brlo .+2
 329 0020 00C0      		rjmp .L19
 330 0022 883E      		cpi r24,-24
 331 0024 9105      		cpc r25,__zero_reg__
 332 0026 00F4      		brsh .L20
 333 0028 803E      		cpi r24,-32
 334 002a 9105      		cpc r25,__zero_reg__
 335 002c 00F0      		brlo .+2
 336 002e 00C0      		rjmp .L21
 337 0030 883A      		cpi r24,-88
 338 0032 9105      		cpc r25,__zero_reg__
 339 0034 00F4      		brsh .L22
 340 0036 853A      		cpi r24,-91
 341 0038 9105      		cpc r25,__zero_reg__
 342 003a 00F0      		brlo .+2
 343 003c 00C0      		rjmp .L23
 344 003e 8130      		cpi r24,1
 345 0040 9105      		cpc r25,__zero_reg__
 346 0042 01F4      		brne .+2
 347 0044 00C0      		rjmp .L21
 348 0046 00F4      		brsh .+2
 349 0048 00C0      		rjmp .L17
 350 004a 8430      		cpi r24,4
 351 004c 9105      		cpc r25,__zero_reg__
 352 004e 00F0      		brlo .+2
 353 0050 00C0      		rjmp .L21
 354 0052 00C0      		rjmp .L17
 355               	.L22:
 356 0054 8D3B      		cpi r24,-67
 357 0056 9105      		cpc r25,__zero_reg__
 358 0058 00F4      		brsh .+2
 359 005a 00C0      		rjmp .L24
 360 005c 803C      		cpi r24,-64
 361 005e 9105      		cpc r25,__zero_reg__
 362 0060 00F4      		brsh .+2
 363 0062 00C0      		rjmp .L17
  54:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action(FN_INDEX(keycode));
 364               		.loc 2 54 0
 365 0064 805C      		subi r24,-64
 366 0066 9109      		sbc r25,__zero_reg__
 367               	.LVL13:
 368 0068 00C0      		rjmp .L76
 369               	.LVL14:
 370               	.L20:
  52:quantum/keymap_common.c ****     switch (keycode) {
 371               		.loc 2 52 0
 372 006a C115      		cp r28,__zero_reg__
 373 006c 80E2      		ldi r24,32
 374 006e D807      		cpc r29,r24
 375               	.LVL15:
 376 0070 00F4      		brsh .L26
 377 0072 C115      		cp r28,__zero_reg__
 378 0074 91E0      		ldi r25,1
 379 0076 D907      		cpc r29,r25
 380 0078 00F0      		brlo .+2
 381 007a 00C0      		rjmp .L21
 382 007c C03F      		cpi r28,-16
 383 007e D105      		cpc r29,__zero_reg__
 384 0080 00F4      		brsh .+2
 385 0082 00C0      		rjmp .L17
 386               	.LVL16:
  67:quantum/keymap_common.c ****             action.code = ACTION_MOUSEKEY(keycode);
 387               		.loc 2 67 0
 388 0084 D065      		ori r29,80
 389               	.LVL17:
  68:quantum/keymap_common.c ****             break;
 390               		.loc 2 68 0
 391 0086 00C0      		rjmp .L21
 392               	.LVL18:
 393               	.L26:
  52:quantum/keymap_common.c ****     switch (keycode) {
 394               		.loc 2 52 0
 395 0088 C115      		cp r28,__zero_reg__
 396 008a 20E3      		ldi r18,48
 397 008c D207      		cpc r29,r18
 398 008e 00F0      		brlo .+2
 399 0090 00C0      		rjmp .L71
  80:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action( (int)keycode & 0xFFF );
 400               		.loc 2 80 0
 401 0092 CE01      		movw r24,r28
 402 0094 9F70      		andi r25,15
 403 0096 00C0      		rjmp .L76
 404               	.LVL19:
 405               	.L18:
  52:quantum/keymap_common.c ****     switch (keycode) {
 406               		.loc 2 52 0
 407 0098 8115      		cp r24,__zero_reg__
 408 009a 35E5      		ldi r19,85
 409 009c 9307      		cpc r25,r19
 410 009e 00F0      		brlo .+2
 411 00a0 00C0      		rjmp .L30
 412 00a2 C115      		cp r28,__zero_reg__
 413 00a4 84E5      		ldi r24,84
 414 00a6 D807      		cpc r29,r24
 415               	.LVL20:
 416 00a8 00F0      		brlo .+2
 417 00aa 00C0      		rjmp .L31
 418 00ac C115      		cp r28,__zero_reg__
 419 00ae 92E5      		ldi r25,82
 420 00b0 D907      		cpc r29,r25
 421 00b2 00F4      		brsh .L32
 422 00b4 C115      		cp r28,__zero_reg__
 423 00b6 21E5      		ldi r18,81
 424 00b8 D207      		cpc r29,r18
 425 00ba 00F0      		brlo .+2
 426 00bc 00C0      		rjmp .L78
 427               	.LVL21:
  95:quantum/keymap_common.c ****             action.code = ACTION_LAYER_SET(action_layer, when);
 428               		.loc 2 95 0
 429 00be 2C2F      		mov r18,r28
 430 00c0 2370      		andi r18,lo8(3)
 431 00c2 81E0      		ldi r24,lo8(1)
 432 00c4 90E0      		ldi r25,0
 433 00c6 00C0      		rjmp 2f
 434               		1:
 435 00c8 880F      		lsl r24
 436 00ca 991F      		rol r25
 437               		2:
 438 00cc 2A95      		dec r18
 439 00ce 02F4      		brpl 1b
 440 00d0 9C68      		ori r25,140
  93:quantum/keymap_common.c ****             when = (keycode >> 0x4) & 0x3;
 441               		.loc 2 93 0
 442 00d2 9E01      		movw r18,r28
 443 00d4 E4E0      		ldi r30,4
 444               		1:
 445 00d6 3695      		lsr r19
 446 00d8 2795      		ror r18
 447 00da EA95      		dec r30
 448 00dc 01F4      		brne 1b
 449 00de 2370      		andi r18,lo8(3)
  95:quantum/keymap_common.c ****             action.code = ACTION_LAYER_SET(action_layer, when);
 450               		.loc 2 95 0
 451 00e0 922B      		or r25,r18
  94:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 452               		.loc 2 94 0
 453 00e2 CF70      		andi r28,lo8(15)
 454               	.LVL22:
  95:quantum/keymap_common.c ****             action.code = ACTION_LAYER_SET(action_layer, when);
 455               		.loc 2 95 0
 456 00e4 C695      		lsr r28
 457 00e6 C695      		lsr r28
 458 00e8 30E2      		ldi r19,lo8(32)
 459 00ea C39F      		mul r28,r19
 460 00ec E001      		movw r28,r0
 461 00ee 1124      		clr __zero_reg__
 462               	.LVL23:
 463 00f0 C82B      		or r28,r24
 464 00f2 D92B      		or r29,r25
 465               	.LVL24:
  96:quantum/keymap_common.c ****             break;
 466               		.loc 2 96 0
 467 00f4 00C0      		rjmp .L21
 468               	.LVL25:
 469               	.L32:
 470 00f6 8C2F      		mov r24,r28
 471 00f8 8695      		lsr r24
 472 00fa 8695      		lsr r24
 473 00fc 9E01      		movw r18,r28
 474 00fe 2370      		andi r18,3
 475 0100 3327      		clr r19
  52:quantum/keymap_common.c ****     switch (keycode) {
 476               		.loc 2 52 0
 477 0102 C115      		cp r28,__zero_reg__
 478 0104 D345      		sbci r29,83
 479 0106 00F0      		brlo .+2
 480 0108 00C0      		rjmp .L73
 481               	.LVL26:
 105:quantum/keymap_common.c ****             action.code = ACTION_DEFAULT_LAYER_SET(action_layer);
 482               		.loc 2 105 0
 483 010a 90E2      		ldi r25,lo8(32)
 484 010c 899F      		mul r24,r25
 485 010e E001      		movw r28,r0
 486 0110 1124      		clr __zero_reg__
 487               	.LVL27:
 488 0112 81E0      		ldi r24,lo8(1)
 489 0114 90E0      		ldi r25,0
 490 0116 00C0      		rjmp 2f
 491               		1:
 492 0118 880F      		lsl r24
 493 011a 991F      		rol r25
 494               		2:
 495 011c 2A95      		dec r18
 496 011e 02F4      		brpl 1b
 497 0120 C82B      		or r28,r24
 498 0122 D92B      		or r29,r25
 499               	.LVL28:
 500 0124 DC68      		ori r29,140
 501               	.LVL29:
 106:quantum/keymap_common.c ****             break;
 502               		.loc 2 106 0
 503 0126 00C0      		rjmp .L21
 504               	.LVL30:
 505               	.L30:
  52:quantum/keymap_common.c ****     switch (keycode) {
 506               		.loc 2 52 0
 507 0128 8115      		cp r24,__zero_reg__
 508 012a 29E5      		ldi r18,89
 509 012c 9207      		cpc r25,r18
 510 012e 00F4      		brsh .L37
 511 0130 8115      		cp r24,__zero_reg__
 512 0132 38E5      		ldi r19,88
 513 0134 9307      		cpc r25,r19
 514 0136 00F0      		brlo .+2
 515 0138 00C0      		rjmp .L38
 516 013a C115      		cp r28,__zero_reg__
 517 013c 86E5      		ldi r24,86
 518 013e D807      		cpc r29,r24
 519               	.LVL31:
 520 0140 00F0      		brlo .+2
 521 0142 00C0      		rjmp .L17
 522               	.LVL32:
 120:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 523               		.loc 2 120 0
 524 0144 CF71      		andi r28,31
 525 0146 DD27      		clr r29
 526               	.LVL33:
 527 0148 DC2F      		mov r29,r28
 528 014a CC27      		clr r28
 529               	.LVL34:
 530 014c D062      		ori r29,32
 531               	.LVL35:
 121:quantum/keymap_common.c ****             break;
 532               		.loc 2 121 0
 533 014e 00C0      		rjmp .L21
 534               	.LVL36:
 535               	.L37:
  52:quantum/keymap_common.c ****     switch (keycode) {
 536               		.loc 2 52 0
 537 0150 C115      		cp r28,__zero_reg__
 538 0152 9AE5      		ldi r25,90
 539 0154 D907      		cpc r29,r25
 540 0156 00F4      		brsh .+2
 541 0158 00C0      		rjmp .L40
 542 015a CE01      		movw r24,r28
 543               	.LVL37:
 544 015c 9056      		subi r25,96
 545 015e 8115      		cp r24,__zero_reg__
 546 0160 9042      		sbci r25,32
 547 0162 00F0      		brlo .+2
 548 0164 00C0      		rjmp .L17
 131:quantum/keymap_common.c ****             mod = mod_config((keycode >> 0x8) & 0x1F);
 549               		.loc 2 131 0
 550 0166 8D2F      		mov r24,r29
 551 0168 8F71      		andi r24,lo8(31)
 552 016a 0E94 0000 		call mod_config
 553               	.LVL38:
 132:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 554               		.loc 2 132 0
 555 016e DD27      		clr r29
 556               	.LVL39:
 557 0170 D062      		ori r29,32
 558 0172 8F71      		andi r24,lo8(31)
 559               	.LVL40:
 560 0174 D82B      		or r29,r24
 561               	.LVL41:
 133:quantum/keymap_common.c ****             break;
 562               		.loc 2 133 0
 563 0176 00C0      		rjmp .L21
 564               	.LVL42:
 565               	.L23:
  61:quantum/keymap_common.c ****             action.code = ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
 566               		.loc 2 61 0
 567 0178 853A      		cpi r24,-91
 568 017a 9105      		cpc r25,__zero_reg__
 569 017c 01F4      		brne .+2
 570 017e 00C0      		rjmp .L43
  61:quantum/keymap_common.c ****             action.code = ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
 571               		.loc 2 61 0 is_stmt 0 discriminator 1
 572 0180 863A      		cpi r24,-90
 573 0182 9105      		cpc r25,__zero_reg__
 574 0184 01F4      		brne .+2
 575 0186 00C0      		rjmp .L44
 576               	.LVL43:
  61:quantum/keymap_common.c ****             action.code = ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
 577               		.loc 2 61 0
 578 0188 C3E8      		ldi r28,lo8(-125)
 579 018a D0E4      		ldi r29,lo8(64)
 580 018c 00C0      		rjmp .L21
 581               	.LVL44:
 582               	.L24:
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 583               		.loc 2 64 0 is_stmt 1
 584 018e 883A      		cpi r24,-88
 585 0190 9105      		cpc r25,__zero_reg__
 586 0192 01F4      		brne .+2
 587 0194 00C0      		rjmp .L45
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 588               		.loc 2 64 0 is_stmt 0 discriminator 1
 589 0196 893A      		cpi r24,-87
 590 0198 9105      		cpc r25,__zero_reg__
 591 019a 01F4      		brne .+2
 592 019c 00C0      		rjmp .L46
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 593               		.loc 2 64 0 discriminator 3
 594 019e 8A3A      		cpi r24,-86
 595 01a0 9105      		cpc r25,__zero_reg__
 596 01a2 01F4      		brne .+2
 597 01a4 00C0      		rjmp .L47
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 598               		.loc 2 64 0 discriminator 5
 599 01a6 8B3A      		cpi r24,-85
 600 01a8 9105      		cpc r25,__zero_reg__
 601 01aa 01F4      		brne .+2
 602 01ac 00C0      		rjmp .L48
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 603               		.loc 2 64 0 discriminator 7
 604 01ae 8C3A      		cpi r24,-84
 605 01b0 9105      		cpc r25,__zero_reg__
 606 01b2 01F4      		brne .+2
 607 01b4 00C0      		rjmp .L49
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 608               		.loc 2 64 0 discriminator 9
 609 01b6 8B3B      		cpi r24,-69
 610 01b8 9105      		cpc r25,__zero_reg__
 611 01ba 01F4      		brne .+2
 612 01bc 00C0      		rjmp .L50
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 613               		.loc 2 64 0 discriminator 11
 614 01be 8C3B      		cpi r24,-68
 615 01c0 9105      		cpc r25,__zero_reg__
 616 01c2 01F4      		brne .+2
 617 01c4 00C0      		rjmp .L51
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 618               		.loc 2 64 0 discriminator 13
 619 01c6 8D3A      		cpi r24,-83
 620 01c8 9105      		cpc r25,__zero_reg__
 621 01ca 01F4      		brne .+2
 622 01cc 00C0      		rjmp .L52
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 623               		.loc 2 64 0 discriminator 15
 624 01ce 803B      		cpi r24,-80
 625 01d0 9105      		cpc r25,__zero_reg__
 626 01d2 01F4      		brne .+2
 627 01d4 00C0      		rjmp .L53
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 628               		.loc 2 64 0 discriminator 17
 629 01d6 8E3A      		cpi r24,-82
 630 01d8 9105      		cpc r25,__zero_reg__
 631 01da 01F4      		brne .+2
 632 01dc 00C0      		rjmp .L54
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 633               		.loc 2 64 0 discriminator 19
 634 01de 8F3A      		cpi r24,-81
 635 01e0 9105      		cpc r25,__zero_reg__
 636 01e2 01F4      		brne .+2
 637 01e4 00C0      		rjmp .L55
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 638               		.loc 2 64 0 discriminator 21
 639 01e6 813B      		cpi r24,-79
 640 01e8 9105      		cpc r25,__zero_reg__
 641 01ea 01F4      		brne .+2
 642 01ec 00C0      		rjmp .L56
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 643               		.loc 2 64 0 discriminator 23
 644 01ee 823B      		cpi r24,-78
 645 01f0 9105      		cpc r25,__zero_reg__
 646 01f2 01F4      		brne .+2
 647 01f4 00C0      		rjmp .L57
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 648               		.loc 2 64 0 discriminator 25
 649 01f6 833B      		cpi r24,-77
 650 01f8 9105      		cpc r25,__zero_reg__
 651 01fa 01F4      		brne .+2
 652 01fc 00C0      		rjmp .L58
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 653               		.loc 2 64 0 discriminator 27
 654 01fe 843B      		cpi r24,-76
 655 0200 9105      		cpc r25,__zero_reg__
 656 0202 01F4      		brne .+2
 657 0204 00C0      		rjmp .L59
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 658               		.loc 2 64 0 discriminator 29
 659 0206 853B      		cpi r24,-75
 660 0208 9105      		cpc r25,__zero_reg__
 661 020a 01F4      		brne .+2
 662 020c 00C0      		rjmp .L60
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 663               		.loc 2 64 0 discriminator 31
 664 020e 863B      		cpi r24,-74
 665 0210 9105      		cpc r25,__zero_reg__
 666 0212 01F4      		brne .+2
 667 0214 00C0      		rjmp .L61
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 668               		.loc 2 64 0 discriminator 33
 669 0216 873B      		cpi r24,-73
 670 0218 9105      		cpc r25,__zero_reg__
 671 021a 01F4      		brne .+2
 672 021c 00C0      		rjmp .L62
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 673               		.loc 2 64 0 discriminator 35
 674 021e 883B      		cpi r24,-72
 675 0220 9105      		cpc r25,__zero_reg__
 676 0222 01F4      		brne .+2
 677 0224 00C0      		rjmp .L63
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 678               		.loc 2 64 0 discriminator 37
 679 0226 893B      		cpi r24,-71
 680 0228 9105      		cpc r25,__zero_reg__
 681 022a 01F4      		brne .+2
 682 022c 00C0      		rjmp .L64
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 683               		.loc 2 64 0 discriminator 39
 684 022e 8A3B      		cpi r24,-70
 685 0230 9105      		cpc r25,__zero_reg__
 686 0232 01F0      		breq .+2
 687 0234 00C0      		rjmp .L65
 688               	.LVL45:
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 689               		.loc 2 64 0
 690 0236 CAE2      		ldi r28,lo8(42)
 691 0238 D6E4      		ldi r29,lo8(70)
 692 023a 00C0      		rjmp .L21
 693               	.LVL46:
 694               	.L76:
  80:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action( (int)keycode & 0xFFF );
 695               		.loc 2 80 0 is_stmt 1
 696 023c 0E94 0000 		call keymap_function_id_to_action
 697               	.LVL47:
 698 0240 EC01      		movw r28,r24
 699               	.LVL48:
  81:quantum/keymap_common.c ****             break;
 700               		.loc 2 81 0
 701 0242 00C0      		rjmp .L21
 702               	.LVL49:
 703               	.L71:
 704 0244 CE01      		movw r24,r28
 705 0246 9927      		clr r25
  83:quantum/keymap_common.c ****             if (keycode & 0x800) // tap macros have upper bit set
 706               		.loc 2 83 0
 707 0248 D3FF      		sbrs r29,3
 708 024a 00C0      		rjmp .L42
 709               	.LVL50:
  84:quantum/keymap_common.c ****                 action.code = ACTION_MACRO_TAP(keycode & 0xFF);
 710               		.loc 2 84 0
 711 024c EC01      		movw r28,r24
 712 024e D86C      		ori r29,200
 713               	.LVL51:
 714 0250 00C0      		rjmp .L21
 715               	.LVL52:
 716               	.L42:
  86:quantum/keymap_common.c ****                 action.code = ACTION_MACRO(keycode & 0xFF);
 717               		.loc 2 86 0
 718 0252 EC01      		movw r28,r24
 719 0254 D06C      		ori r29,192
 720               	.LVL53:
 721 0256 00C0      		rjmp .L21
 722               	.LVL54:
 723               	.L19:
  89:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_KEY((keycode >> 0x8) & 0xF, keycode & 0xFF);
 724               		.loc 2 89 0
 725 0258 DF70      		andi r29,15
 726               	.LVL55:
 727 025a D06A      		ori r29,160
 728               	.LVL56:
  90:quantum/keymap_common.c ****             break;
 729               		.loc 2 90 0
 730 025c 00C0      		rjmp .L21
 731               	.LVL57:
 732               	.L78:
 100:quantum/keymap_common.c ****             action.code = ACTION_LAYER_MOMENTARY(action_layer);
 733               		.loc 2 100 0
 734 025e DC2F      		mov r29,r28
 735 0260 CC27      		clr r28
 736               	.LVL58:
 737 0262 C16F      		ori r28,241
 738 0264 D06A      		ori r29,160
 739               	.LVL59:
 101:quantum/keymap_common.c ****             break;
 740               		.loc 2 101 0
 741 0266 00C0      		rjmp .L21
 742               	.LVL60:
 743               	.L73:
 110:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TOGGLE(action_layer);
 744               		.loc 2 110 0
 745 0268 90E2      		ldi r25,lo8(32)
 746 026a 899F      		mul r24,r25
 747 026c E001      		movw r28,r0
 748 026e 1124      		clr __zero_reg__
 749               	.LVL61:
 750 0270 81E0      		ldi r24,lo8(1)
 751 0272 90E0      		ldi r25,0
 752 0274 00C0      		rjmp 2f
 753               		1:
 754 0276 880F      		lsl r24
 755 0278 991F      		rol r25
 756               		2:
 757 027a 2A95      		dec r18
 758 027c 02F4      		brpl 1b
 759 027e C82B      		or r28,r24
 760 0280 D92B      		or r29,r25
 761               	.LVL62:
 762 0282 DA68      		ori r29,138
 763               	.LVL63:
 111:quantum/keymap_common.c ****             break;
 764               		.loc 2 111 0
 765 0284 00C0      		rjmp .L21
 766               	.LVL64:
 767               	.L31:
 115:quantum/keymap_common.c ****             action.code = ACTION_LAYER_ONESHOT(action_layer);
 768               		.loc 2 115 0
 769 0286 DC2F      		mov r29,r28
 770 0288 CC27      		clr r28
 771               	.LVL65:
 772 028a C46F      		ori r28,244
 773 028c D06A      		ori r29,160
 774               	.LVL66:
 116:quantum/keymap_common.c ****             break;
 775               		.loc 2 116 0
 776 028e 00C0      		rjmp .L21
 777               	.LVL67:
 778               	.L38:
 123:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_TOGGLE(keycode & 0xFF);
 779               		.loc 2 123 0
 780 0290 D82F      		mov r29,r24
 781 0292 CC27      		clr r28
 782               	.LVL68:
 783 0294 C06F      		ori r28,240
 784 0296 D06A      		ori r29,160
 785               	.LVL69:
 124:quantum/keymap_common.c ****             break;
 786               		.loc 2 124 0
 787 0298 00C0      		rjmp .L21
 788               	.LVL70:
 789               	.L40:
 126:quantum/keymap_common.c ****             mod = keycode & 0xF;
 790               		.loc 2 126 0
 791 029a 8C2F      		mov r24,r28
 792               	.LVL71:
 793 029c 8F70      		andi r24,lo8(15)
 128:quantum/keymap_common.c ****             action.code = ACTION_LAYER_MODS(action_layer, mod);
 794               		.loc 2 128 0
 795 029e 806E      		ori r24,lo8(-32)
 796 02a0 90E0      		ldi r25,0
 797 02a2 906A      		ori r25,160
 127:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 798               		.loc 2 127 0
 799 02a4 34E0      		ldi r19,4
 800               		1:
 801 02a6 D695      		lsr r29
 802 02a8 C795      		ror r28
 803 02aa 3A95      		dec r19
 804 02ac 01F4      		brne 1b
 805               	.LVL72:
 806 02ae CF70      		andi r28,lo8(15)
 807               	.LVL73:
 128:quantum/keymap_common.c ****             action.code = ACTION_LAYER_MODS(action_layer, mod);
 808               		.loc 2 128 0
 809 02b0 9C01      		movw r18,r24
 810 02b2 3C2B      		or r19,r28
 811 02b4 E901      		movw r28,r18
 812               	.LVL74:
 129:quantum/keymap_common.c ****             break;
 813               		.loc 2 129 0
 814 02b6 00C0      		rjmp .L21
 815               	.LVL75:
 816               	.L17:
 161:quantum/keymap_common.c ****             action.code = ACTION_NO;
 817               		.loc 2 161 0
 818 02b8 C0E0      		ldi r28,0
 819 02ba D0E0      		ldi r29,0
 162:quantum/keymap_common.c ****             break;
 820               		.loc 2 162 0
 821 02bc 00C0      		rjmp .L21
 822               	.LVL76:
 823               	.L43:
  61:quantum/keymap_common.c ****             action.code = ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
 824               		.loc 2 61 0
 825 02be C1E8      		ldi r28,lo8(-127)
 826 02c0 D0E4      		ldi r29,lo8(64)
 827 02c2 00C0      		rjmp .L21
 828               	.LVL77:
 829               	.L44:
 830 02c4 C2E8      		ldi r28,lo8(-126)
 831 02c6 D0E4      		ldi r29,lo8(64)
 832 02c8 00C0      		rjmp .L21
 833               	.LVL78:
 834               	.L45:
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 835               		.loc 2 64 0
 836 02ca C2EE      		ldi r28,lo8(-30)
 837 02cc D4E4      		ldi r29,lo8(68)
 838 02ce 00C0      		rjmp .L21
 839               	.LVL79:
 840               	.L46:
 841 02d0 C9EE      		ldi r28,lo8(-23)
 842 02d2 D4E4      		ldi r29,lo8(68)
 843 02d4 00C0      		rjmp .L21
 844               	.LVL80:
 845               	.L47:
 846 02d6 CAEE      		ldi r28,lo8(-22)
 847 02d8 D4E4      		ldi r29,lo8(68)
 848 02da 00C0      		rjmp .L21
 849               	.LVL81:
 850               	.L48:
 851 02dc C5EB      		ldi r28,lo8(-75)
 852 02de D4E4      		ldi r29,lo8(68)
 853 02e0 00C0      		rjmp .L21
 854               	.LVL82:
 855               	.L49:
 856 02e2 C6EB      		ldi r28,lo8(-74)
 857 02e4 D4E4      		ldi r29,lo8(68)
 858 02e6 00C0      		rjmp .L21
 859               	.LVL83:
 860               	.L50:
 861 02e8 C3EB      		ldi r28,lo8(-77)
 862 02ea D4E4      		ldi r29,lo8(68)
 863 02ec 00C0      		rjmp .L21
 864               	.LVL84:
 865               	.L51:
 866 02ee C4EB      		ldi r28,lo8(-76)
 867 02f0 D4E4      		ldi r29,lo8(68)
 868 02f2 00C0      		rjmp .L21
 869               	.LVL85:
 870               	.L52:
 871 02f4 C7EB      		ldi r28,lo8(-73)
 872 02f6 D4E4      		ldi r29,lo8(68)
 873 02f8 00C0      		rjmp .L21
 874               	.LVL86:
 875               	.L53:
 876 02fa CCEC      		ldi r28,lo8(-52)
 877 02fc D4E4      		ldi r29,lo8(68)
 878 02fe 00C0      		rjmp .L21
 879               	.LVL87:
 880               	.L54:
 881 0300 CDEC      		ldi r28,lo8(-51)
 882 0302 D4E4      		ldi r29,lo8(68)
 883 0304 00C0      		rjmp .L21
 884               	.LVL88:
 885               	.L55:
 886 0306 C3E8      		ldi r28,lo8(-125)
 887 0308 D5E4      		ldi r29,lo8(69)
 888 030a 00C0      		rjmp .L21
 889               	.LVL89:
 890               	.L56:
 891 030c CAE8      		ldi r28,lo8(-118)
 892 030e D5E4      		ldi r29,lo8(69)
 893 0310 00C0      		rjmp .L21
 894               	.LVL90:
 895               	.L57:
 896 0312 C2E9      		ldi r28,lo8(-110)
 897 0314 D5E4      		ldi r29,lo8(69)
 898 0316 00C0      		rjmp .L21
 899               	.LVL91:
 900               	.L58:
 901 0318 C4E9      		ldi r28,lo8(-108)
 902 031a D5E4      		ldi r29,lo8(69)
 903 031c 00C0      		rjmp .L21
 904               	.LVL92:
 905               	.L59:
 906 031e C1E2      		ldi r28,lo8(33)
 907 0320 D6E4      		ldi r29,lo8(70)
 908 0322 00C0      		rjmp .L21
 909               	.LVL93:
 910               	.L60:
 911 0324 C3E2      		ldi r28,lo8(35)
 912 0326 D6E4      		ldi r29,lo8(70)
 913 0328 00C0      		rjmp .L21
 914               	.LVL94:
 915               	.L61:
 916 032a C4E2      		ldi r28,lo8(36)
 917 032c D6E4      		ldi r29,lo8(70)
 918 032e 00C0      		rjmp .L21
 919               	.LVL95:
 920               	.L62:
 921 0330 C5E2      		ldi r28,lo8(37)
 922 0332 D6E4      		ldi r29,lo8(70)
 923 0334 00C0      		rjmp .L21
 924               	.LVL96:
 925               	.L63:
 926 0336 C6E2      		ldi r28,lo8(38)
 927 0338 D6E4      		ldi r29,lo8(70)
 928 033a 00C0      		rjmp .L21
 929               	.LVL97:
 930               	.L64:
 931 033c C7E2      		ldi r28,lo8(39)
 932 033e D6E4      		ldi r29,lo8(70)
 933 0340 00C0      		rjmp .L21
 934               	.LVL98:
 935               	.L65:
 936 0342 C0E0      		ldi r28,0
 937 0344 D4E4      		ldi r29,lo8(68)
 938               	.LVL99:
 939               	.L21:
 165:quantum/keymap_common.c **** }
 940               		.loc 2 165 0
 941 0346 CE01      		movw r24,r28
 942               	/* epilogue start */
 943 0348 DF91      		pop r29
 944 034a CF91      		pop r28
 945 034c 0895      		ret
 946               		.cfi_endproc
 947               	.LFE25:
 949               		.weak	fn_actions
 950               		.section	.progmem.data.fn_actions,"a",@progbits
 953               	fn_actions:
 954               		.text
 955               	.Letext0:
 956               		.file 3 "/usr/lib/avr/include/stdint.h"
 957               		.file 4 "./tmk_core/common/keyboard.h"
 958               		.file 5 "./tmk_core/common/keycode.h"
 959               		.file 6 "./tmk_core/common/action_code.h"
 960               		.file 7 "./tmk_core/common/action_macro.h"
 961               		.file 8 "./tmk_core/common/action.h"
 962               		.file 9 "./tmk_core/common/report.h"
 963               		.file 10 "quantum/quantum_keycodes.h"
 964               		.file 11 "quantum/keymap.h"
 965               		.file 12 "./tmk_core/common/action_util.h"
 966               		.file 13 "quantum/keycode_config.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keymap_common.c
     /tmp/ccXzL1fT.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccXzL1fT.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccXzL1fT.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccXzL1fT.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccXzL1fT.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccXzL1fT.s:13     .text.rgblight_toggle:0000000000000000 rgblight_toggle
     /tmp/ccXzL1fT.s:29     .text.rgblight_step:0000000000000000 rgblight_step
     /tmp/ccXzL1fT.s:44     .text.rgblight_step_reverse:0000000000000000 rgblight_step_reverse
     /tmp/ccXzL1fT.s:59     .text.rgblight_increase_hue:0000000000000000 rgblight_increase_hue
     /tmp/ccXzL1fT.s:74     .text.rgblight_decrease_hue:0000000000000000 rgblight_decrease_hue
     /tmp/ccXzL1fT.s:89     .text.rgblight_increase_sat:0000000000000000 rgblight_increase_sat
     /tmp/ccXzL1fT.s:104    .text.rgblight_decrease_sat:0000000000000000 rgblight_decrease_sat
     /tmp/ccXzL1fT.s:119    .text.rgblight_increase_val:0000000000000000 rgblight_increase_val
     /tmp/ccXzL1fT.s:134    .text.rgblight_decrease_val:0000000000000000 rgblight_decrease_val
     /tmp/ccXzL1fT.s:149    .text.rgblight_increase_speed:0000000000000000 rgblight_increase_speed
     /tmp/ccXzL1fT.s:164    .text.rgblight_decrease_speed:0000000000000000 rgblight_decrease_speed
     /tmp/ccXzL1fT.s:179    .text.action_get_macro:0000000000000000 action_get_macro
     /tmp/ccXzL1fT.s:200    .text.action_function:0000000000000000 action_function
     /tmp/ccXzL1fT.s:216    .text.keymap_key_to_keycode:0000000000000000 keymap_key_to_keycode
     /tmp/ccXzL1fT.s:260    .text.keymap_function_id_to_action:0000000000000000 keymap_function_id_to_action
     /tmp/ccXzL1fT.s:953    .progmem.data.fn_actions:0000000000000000 fn_actions
     /tmp/ccXzL1fT.s:294    .text.action_for_key:0000000000000000 action_for_key

UNDEFINED SYMBOLS
keymaps
keycode_config
mod_config
