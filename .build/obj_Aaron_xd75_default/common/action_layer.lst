   1               		.file	"action_layer.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.default_layer_state_set_kb,"ax",@progbits
  11               		.weak	default_layer_state_set_kb
  13               	default_layer_state_set_kb:
  14               	.LFB4:
  15               		.file 1 "./tmk_core/common/action_layer.c"
   1:./tmk_core/common/action_layer.c **** #include <stdint.h>
   2:./tmk_core/common/action_layer.c **** #include "keyboard.h"
   3:./tmk_core/common/action_layer.c **** #include "action.h"
   4:./tmk_core/common/action_layer.c **** #include "util.h"
   5:./tmk_core/common/action_layer.c **** #include "action_layer.h"
   6:./tmk_core/common/action_layer.c **** 
   7:./tmk_core/common/action_layer.c **** #ifdef DEBUG_ACTION
   8:./tmk_core/common/action_layer.c **** #include "debug.h"
   9:./tmk_core/common/action_layer.c **** #else
  10:./tmk_core/common/action_layer.c **** #include "nodebug.h"
  11:./tmk_core/common/action_layer.c **** #endif
  12:./tmk_core/common/action_layer.c **** 
  13:./tmk_core/common/action_layer.c **** 
  14:./tmk_core/common/action_layer.c **** /** \brief Default Layer State
  15:./tmk_core/common/action_layer.c ****  */
  16:./tmk_core/common/action_layer.c **** uint32_t default_layer_state = 0;
  17:./tmk_core/common/action_layer.c **** 
  18:./tmk_core/common/action_layer.c **** /** \brief Default Layer State Set At Keyboard Level
  19:./tmk_core/common/action_layer.c ****  *
  20:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
  21:./tmk_core/common/action_layer.c ****  */
  22:./tmk_core/common/action_layer.c **** __attribute__((weak))
  23:./tmk_core/common/action_layer.c **** uint32_t default_layer_state_set_kb(uint32_t state) {
  16               		.loc 1 23 0
  17               		.cfi_startproc
  18               	.LVL0:
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  24:./tmk_core/common/action_layer.c ****     return state;
  25:./tmk_core/common/action_layer.c **** }
  23               		.loc 1 25 0
  24 0000 0895      		ret
  25               		.cfi_endproc
  26               	.LFE4:
  28               		.section	.text.default_layer_state_set,"ax",@progbits
  30               	default_layer_state_set:
  31               	.LFB5:
  26:./tmk_core/common/action_layer.c **** 
  27:./tmk_core/common/action_layer.c **** /** \brief Default Layer State Set
  28:./tmk_core/common/action_layer.c ****  *
  29:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
  30:./tmk_core/common/action_layer.c ****  */
  31:./tmk_core/common/action_layer.c **** static void default_layer_state_set(uint32_t state)
  32:./tmk_core/common/action_layer.c **** {
  32               		.loc 1 32 0
  33               		.cfi_startproc
  34               	.LVL1:
  35               	/* prologue: function */
  36               	/* frame size = 0 */
  37               	/* stack size = 0 */
  38               	.L__stack_usage = 0
  33:./tmk_core/common/action_layer.c ****     state = default_layer_state_set_kb(state);
  39               		.loc 1 33 0
  40 0000 0E94 0000 		call default_layer_state_set_kb
  41               	.LVL2:
  34:./tmk_core/common/action_layer.c ****     debug("default_layer_state: ");
  35:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug(" to ");
  36:./tmk_core/common/action_layer.c ****     default_layer_state = state;
  42               		.loc 1 36 0
  43 0004 6093 0000 		sts default_layer_state,r22
  44 0008 7093 0000 		sts default_layer_state+1,r23
  45 000c 8093 0000 		sts default_layer_state+2,r24
  46 0010 9093 0000 		sts default_layer_state+3,r25
  37:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
  38:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
  47               		.loc 1 38 0
  48 0014 0C94 0000 		jmp clear_keyboard_but_mods
  49               	.LVL3:
  50               		.cfi_endproc
  51               	.LFE5:
  53               		.section	.text.default_layer_debug,"ax",@progbits
  54               	.global	default_layer_debug
  56               	default_layer_debug:
  57               	.LFB6:
  39:./tmk_core/common/action_layer.c **** }
  40:./tmk_core/common/action_layer.c **** 
  41:./tmk_core/common/action_layer.c **** /** \brief Default Layer Print
  42:./tmk_core/common/action_layer.c ****  *
  43:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
  44:./tmk_core/common/action_layer.c ****  */
  45:./tmk_core/common/action_layer.c **** void default_layer_debug(void)
  46:./tmk_core/common/action_layer.c **** {
  58               		.loc 1 46 0
  59               		.cfi_startproc
  60               	/* prologue: function */
  61               	/* frame size = 0 */
  62               	/* stack size = 0 */
  63               	.L__stack_usage = 0
  64 0000 0895      		ret
  65               		.cfi_endproc
  66               	.LFE6:
  68               		.section	.text.default_layer_set,"ax",@progbits
  69               	.global	default_layer_set
  71               	default_layer_set:
  72               	.LFB7:
  47:./tmk_core/common/action_layer.c ****     dprintf("%08lX(%u)", default_layer_state, biton32(default_layer_state));
  48:./tmk_core/common/action_layer.c **** }
  49:./tmk_core/common/action_layer.c **** 
  50:./tmk_core/common/action_layer.c **** /** \brief Default Layer Set
  51:./tmk_core/common/action_layer.c ****  *
  52:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
  53:./tmk_core/common/action_layer.c ****  */
  54:./tmk_core/common/action_layer.c **** void default_layer_set(uint32_t state)
  55:./tmk_core/common/action_layer.c **** {
  73               		.loc 1 55 0
  74               		.cfi_startproc
  75               	.LVL4:
  76               	/* prologue: function */
  77               	/* frame size = 0 */
  78               	/* stack size = 0 */
  79               	.L__stack_usage = 0
  56:./tmk_core/common/action_layer.c ****     default_layer_state_set(state);
  80               		.loc 1 56 0
  81 0000 0C94 0000 		jmp default_layer_state_set
  82               	.LVL5:
  83               		.cfi_endproc
  84               	.LFE7:
  86               		.section	.text.default_layer_or,"ax",@progbits
  87               	.global	default_layer_or
  89               	default_layer_or:
  90               	.LFB8:
  57:./tmk_core/common/action_layer.c **** }
  58:./tmk_core/common/action_layer.c **** 
  59:./tmk_core/common/action_layer.c **** #ifndef NO_ACTION_LAYER
  60:./tmk_core/common/action_layer.c **** /** \brief Default Layer Or
  61:./tmk_core/common/action_layer.c ****  *
  62:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
  63:./tmk_core/common/action_layer.c ****  */
  64:./tmk_core/common/action_layer.c **** void default_layer_or(uint32_t state)
  65:./tmk_core/common/action_layer.c **** {
  91               		.loc 1 65 0
  92               		.cfi_startproc
  93               	.LVL6:
  94 0000 0F93      		push r16
  95               	.LCFI0:
  96               		.cfi_def_cfa_offset 3
  97               		.cfi_offset 16, -2
  98 0002 1F93      		push r17
  99               	.LCFI1:
 100               		.cfi_def_cfa_offset 4
 101               		.cfi_offset 17, -3
 102               	/* prologue: function */
 103               	/* frame size = 0 */
 104               	/* stack size = 2 */
 105               	.L__stack_usage = 2
  66:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state | state);
 106               		.loc 1 66 0
 107 0004 0091 0000 		lds r16,default_layer_state
 108 0008 1091 0000 		lds r17,default_layer_state+1
 109 000c 2091 0000 		lds r18,default_layer_state+2
 110 0010 3091 0000 		lds r19,default_layer_state+3
 111 0014 602B      		or r22,r16
 112 0016 712B      		or r23,r17
 113 0018 822B      		or r24,r18
 114 001a 932B      		or r25,r19
 115               	.LVL7:
 116               	/* epilogue start */
  67:./tmk_core/common/action_layer.c **** }
 117               		.loc 1 67 0
 118 001c 1F91      		pop r17
 119 001e 0F91      		pop r16
  66:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state | state);
 120               		.loc 1 66 0
 121 0020 0C94 0000 		jmp default_layer_state_set
 122               	.LVL8:
 123               		.cfi_endproc
 124               	.LFE8:
 126               		.section	.text.default_layer_and,"ax",@progbits
 127               	.global	default_layer_and
 129               	default_layer_and:
 130               	.LFB9:
  68:./tmk_core/common/action_layer.c **** /** \brief Default Layer And
  69:./tmk_core/common/action_layer.c ****  *
  70:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
  71:./tmk_core/common/action_layer.c ****  */
  72:./tmk_core/common/action_layer.c **** void default_layer_and(uint32_t state)
  73:./tmk_core/common/action_layer.c **** {
 131               		.loc 1 73 0
 132               		.cfi_startproc
 133               	.LVL9:
 134 0000 0F93      		push r16
 135               	.LCFI2:
 136               		.cfi_def_cfa_offset 3
 137               		.cfi_offset 16, -2
 138 0002 1F93      		push r17
 139               	.LCFI3:
 140               		.cfi_def_cfa_offset 4
 141               		.cfi_offset 17, -3
 142               	/* prologue: function */
 143               	/* frame size = 0 */
 144               	/* stack size = 2 */
 145               	.L__stack_usage = 2
  74:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state & state);
 146               		.loc 1 74 0
 147 0004 0091 0000 		lds r16,default_layer_state
 148 0008 1091 0000 		lds r17,default_layer_state+1
 149 000c 2091 0000 		lds r18,default_layer_state+2
 150 0010 3091 0000 		lds r19,default_layer_state+3
 151 0014 6023      		and r22,r16
 152 0016 7123      		and r23,r17
 153 0018 8223      		and r24,r18
 154 001a 9323      		and r25,r19
 155               	.LVL10:
 156               	/* epilogue start */
  75:./tmk_core/common/action_layer.c **** }
 157               		.loc 1 75 0
 158 001c 1F91      		pop r17
 159 001e 0F91      		pop r16
  74:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state & state);
 160               		.loc 1 74 0
 161 0020 0C94 0000 		jmp default_layer_state_set
 162               	.LVL11:
 163               		.cfi_endproc
 164               	.LFE9:
 166               		.section	.text.default_layer_xor,"ax",@progbits
 167               	.global	default_layer_xor
 169               	default_layer_xor:
 170               	.LFB10:
  76:./tmk_core/common/action_layer.c **** /** \brief Default Layer Xor
  77:./tmk_core/common/action_layer.c ****  *
  78:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
  79:./tmk_core/common/action_layer.c ****  */
  80:./tmk_core/common/action_layer.c **** void default_layer_xor(uint32_t state)
  81:./tmk_core/common/action_layer.c **** {
 171               		.loc 1 81 0
 172               		.cfi_startproc
 173               	.LVL12:
 174 0000 0F93      		push r16
 175               	.LCFI4:
 176               		.cfi_def_cfa_offset 3
 177               		.cfi_offset 16, -2
 178 0002 1F93      		push r17
 179               	.LCFI5:
 180               		.cfi_def_cfa_offset 4
 181               		.cfi_offset 17, -3
 182               	/* prologue: function */
 183               	/* frame size = 0 */
 184               	/* stack size = 2 */
 185               	.L__stack_usage = 2
  82:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state ^ state);
 186               		.loc 1 82 0
 187 0004 0091 0000 		lds r16,default_layer_state
 188 0008 1091 0000 		lds r17,default_layer_state+1
 189 000c 2091 0000 		lds r18,default_layer_state+2
 190 0010 3091 0000 		lds r19,default_layer_state+3
 191 0014 6027      		eor r22,r16
 192 0016 7127      		eor r23,r17
 193 0018 8227      		eor r24,r18
 194 001a 9327      		eor r25,r19
 195               	.LVL13:
 196               	/* epilogue start */
  83:./tmk_core/common/action_layer.c **** }
 197               		.loc 1 83 0
 198 001c 1F91      		pop r17
 199 001e 0F91      		pop r16
  82:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state ^ state);
 200               		.loc 1 82 0
 201 0020 0C94 0000 		jmp default_layer_state_set
 202               	.LVL14:
 203               		.cfi_endproc
 204               	.LFE10:
 206               		.section	.text.layer_state_set_user,"ax",@progbits
 207               		.weak	layer_state_set_user
 209               	layer_state_set_user:
 210               	.LFB11:
  84:./tmk_core/common/action_layer.c **** #endif
  85:./tmk_core/common/action_layer.c **** 
  86:./tmk_core/common/action_layer.c **** 
  87:./tmk_core/common/action_layer.c **** #ifndef NO_ACTION_LAYER
  88:./tmk_core/common/action_layer.c **** /** \brief Keymap Layer State
  89:./tmk_core/common/action_layer.c ****  */
  90:./tmk_core/common/action_layer.c **** uint32_t layer_state = 0;
  91:./tmk_core/common/action_layer.c **** 
  92:./tmk_core/common/action_layer.c **** /** \brief Layer state set user
  93:./tmk_core/common/action_layer.c ****  *
  94:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
  95:./tmk_core/common/action_layer.c ****  */
  96:./tmk_core/common/action_layer.c **** __attribute__((weak))
  97:./tmk_core/common/action_layer.c **** uint32_t layer_state_set_user(uint32_t state) {
 211               		.loc 1 97 0
 212               		.cfi_startproc
 213               	.LVL15:
 214               	/* prologue: function */
 215               	/* frame size = 0 */
 216               	/* stack size = 0 */
 217               	.L__stack_usage = 0
  98:./tmk_core/common/action_layer.c ****     return state;
  99:./tmk_core/common/action_layer.c **** }
 218               		.loc 1 99 0
 219 0000 0895      		ret
 220               		.cfi_endproc
 221               	.LFE11:
 223               		.section	.text.layer_state_set_kb,"ax",@progbits
 224               		.weak	layer_state_set_kb
 226               	layer_state_set_kb:
 227               	.LFB12:
 100:./tmk_core/common/action_layer.c **** 
 101:./tmk_core/common/action_layer.c **** /** \brief Layer state set keyboard
 102:./tmk_core/common/action_layer.c ****  *
 103:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 104:./tmk_core/common/action_layer.c ****  */
 105:./tmk_core/common/action_layer.c **** __attribute__((weak))
 106:./tmk_core/common/action_layer.c **** uint32_t layer_state_set_kb(uint32_t state) {
 228               		.loc 1 106 0
 229               		.cfi_startproc
 230               	.LVL16:
 231               	/* prologue: function */
 232               	/* frame size = 0 */
 233               	/* stack size = 0 */
 234               	.L__stack_usage = 0
 107:./tmk_core/common/action_layer.c ****     return layer_state_set_user(state);
 235               		.loc 1 107 0
 236 0000 0C94 0000 		jmp layer_state_set_user
 237               	.LVL17:
 238               		.cfi_endproc
 239               	.LFE12:
 241               		.section	.text.layer_state_set,"ax",@progbits
 242               	.global	layer_state_set
 244               	layer_state_set:
 245               	.LFB13:
 108:./tmk_core/common/action_layer.c **** }
 109:./tmk_core/common/action_layer.c **** 
 110:./tmk_core/common/action_layer.c **** /** \brief Layer state set
 111:./tmk_core/common/action_layer.c ****  *
 112:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 113:./tmk_core/common/action_layer.c ****  */
 114:./tmk_core/common/action_layer.c **** void layer_state_set(uint32_t state)
 115:./tmk_core/common/action_layer.c **** {
 246               		.loc 1 115 0
 247               		.cfi_startproc
 248               	.LVL18:
 249               	/* prologue: function */
 250               	/* frame size = 0 */
 251               	/* stack size = 0 */
 252               	.L__stack_usage = 0
 116:./tmk_core/common/action_layer.c ****     state = layer_state_set_kb(state);
 253               		.loc 1 116 0
 254 0000 0E94 0000 		call layer_state_set_kb
 255               	.LVL19:
 117:./tmk_core/common/action_layer.c ****     dprint("layer_state: ");
 118:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 119:./tmk_core/common/action_layer.c ****     layer_state = state;
 256               		.loc 1 119 0
 257 0004 6093 0000 		sts layer_state,r22
 258 0008 7093 0000 		sts layer_state+1,r23
 259 000c 8093 0000 		sts layer_state+2,r24
 260 0010 9093 0000 		sts layer_state+3,r25
 120:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 121:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 261               		.loc 1 121 0
 262 0014 0C94 0000 		jmp clear_keyboard_but_mods
 263               	.LVL20:
 264               		.cfi_endproc
 265               	.LFE13:
 267               		.section	.text.layer_clear,"ax",@progbits
 268               	.global	layer_clear
 270               	layer_clear:
 271               	.LFB14:
 122:./tmk_core/common/action_layer.c **** }
 123:./tmk_core/common/action_layer.c **** 
 124:./tmk_core/common/action_layer.c **** /** \brief Layer clear
 125:./tmk_core/common/action_layer.c ****  *
 126:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 127:./tmk_core/common/action_layer.c ****  */
 128:./tmk_core/common/action_layer.c **** void layer_clear(void)
 129:./tmk_core/common/action_layer.c **** {
 272               		.loc 1 129 0
 273               		.cfi_startproc
 274               	/* prologue: function */
 275               	/* frame size = 0 */
 276               	/* stack size = 0 */
 277               	.L__stack_usage = 0
 130:./tmk_core/common/action_layer.c ****     layer_state_set(0);
 278               		.loc 1 130 0
 279 0000 60E0      		ldi r22,0
 280 0002 70E0      		ldi r23,0
 281 0004 CB01      		movw r24,r22
 282 0006 0C94 0000 		jmp layer_state_set
 283               	.LVL21:
 284               		.cfi_endproc
 285               	.LFE14:
 287               		.section	.text.layer_state_cmp,"ax",@progbits
 288               	.global	layer_state_cmp
 290               	layer_state_cmp:
 291               	.LFB16:
 131:./tmk_core/common/action_layer.c **** }
 132:./tmk_core/common/action_layer.c **** 
 133:./tmk_core/common/action_layer.c **** /** \brief Layer state is
 134:./tmk_core/common/action_layer.c ****  *
 135:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 136:./tmk_core/common/action_layer.c ****  */
 137:./tmk_core/common/action_layer.c **** bool layer_state_is(uint8_t layer)
 138:./tmk_core/common/action_layer.c **** {
 139:./tmk_core/common/action_layer.c ****     return layer_state_cmp(layer_state, layer);
 140:./tmk_core/common/action_layer.c **** }
 141:./tmk_core/common/action_layer.c **** 
 142:./tmk_core/common/action_layer.c **** /** \brief Layer state compare
 143:./tmk_core/common/action_layer.c ****  *
 144:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 145:./tmk_core/common/action_layer.c ****  */
 146:./tmk_core/common/action_layer.c **** bool layer_state_cmp(uint32_t cmp_layer_state, uint8_t layer) {
 292               		.loc 1 146 0
 293               		.cfi_startproc
 294               	.LVL22:
 295               	/* prologue: function */
 296               	/* frame size = 0 */
 297               	/* stack size = 0 */
 298               	.L__stack_usage = 0
 147:./tmk_core/common/action_layer.c ****     if (!cmp_layer_state) { return layer == 0; }
 299               		.loc 1 147 0
 300 0000 6115      		cp r22,__zero_reg__
 301 0002 7105      		cpc r23,__zero_reg__
 302 0004 8105      		cpc r24,__zero_reg__
 303 0006 9105      		cpc r25,__zero_reg__
 304 0008 01F4      		brne .L13
 305               		.loc 1 147 0 is_stmt 0 discriminator 1
 306 000a 81E0      		ldi r24,lo8(1)
 307 000c 4423      		tst r20
 308 000e 01F0      		breq .L15
 309 0010 80E0      		ldi r24,0
 310 0012 0895      		ret
 311               	.L13:
 148:./tmk_core/common/action_layer.c ****     return (cmp_layer_state & (1UL<<layer)) != 0;
 312               		.loc 1 148 0 is_stmt 1
 313 0014 DC01      		movw r26,r24
 314 0016 CB01      		movw r24,r22
 315 0018 00C0      		rjmp 2f
 316               		1:
 317 001a B695      		lsr r27
 318 001c A795      		ror r26
 319 001e 9795      		ror r25
 320 0020 8795      		ror r24
 321               		2:
 322 0022 4A95      		dec r20
 323 0024 02F4      		brpl 1b
 324 0026 8170      		andi r24,lo8(1)
 325               	.L15:
 149:./tmk_core/common/action_layer.c **** }
 326               		.loc 1 149 0
 327 0028 0895      		ret
 328               		.cfi_endproc
 329               	.LFE16:
 331               		.section	.text.layer_state_is,"ax",@progbits
 332               	.global	layer_state_is
 334               	layer_state_is:
 335               	.LFB15:
 138:./tmk_core/common/action_layer.c **** {
 336               		.loc 1 138 0
 337               		.cfi_startproc
 338               	.LVL23:
 339               	/* prologue: function */
 340               	/* frame size = 0 */
 341               	/* stack size = 0 */
 342               	.L__stack_usage = 0
 343 0000 482F      		mov r20,r24
 139:./tmk_core/common/action_layer.c ****     return layer_state_cmp(layer_state, layer);
 344               		.loc 1 139 0
 345 0002 6091 0000 		lds r22,layer_state
 346 0006 7091 0000 		lds r23,layer_state+1
 347 000a 8091 0000 		lds r24,layer_state+2
 348 000e 9091 0000 		lds r25,layer_state+3
 349 0012 0C94 0000 		jmp layer_state_cmp
 350               	.LVL24:
 351               		.cfi_endproc
 352               	.LFE15:
 354               		.section	.text.layer_move,"ax",@progbits
 355               	.global	layer_move
 357               	layer_move:
 358               	.LFB17:
 150:./tmk_core/common/action_layer.c **** 
 151:./tmk_core/common/action_layer.c **** /** \brief Layer move
 152:./tmk_core/common/action_layer.c ****  *
 153:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 154:./tmk_core/common/action_layer.c ****  */
 155:./tmk_core/common/action_layer.c **** void layer_move(uint8_t layer)
 156:./tmk_core/common/action_layer.c **** {
 359               		.loc 1 156 0
 360               		.cfi_startproc
 361               	.LVL25:
 362               	/* prologue: function */
 363               	/* frame size = 0 */
 364               	/* stack size = 0 */
 365               	.L__stack_usage = 0
 157:./tmk_core/common/action_layer.c ****     layer_state_set(1UL<<layer);
 366               		.loc 1 157 0
 367 0000 41E0      		ldi r20,lo8(1)
 368 0002 50E0      		ldi r21,0
 369 0004 60E0      		ldi r22,0
 370 0006 70E0      		ldi r23,0
 371 0008 00C0      		rjmp 2f
 372               		1:
 373 000a 440F      		lsl r20
 374 000c 551F      		rol r21
 375 000e 661F      		rol r22
 376 0010 771F      		rol r23
 377               		2:
 378 0012 8A95      		dec r24
 379 0014 02F4      		brpl 1b
 380 0016 CB01      		movw r24,r22
 381 0018 BA01      		movw r22,r20
 382 001a 0C94 0000 		jmp layer_state_set
 383               	.LVL26:
 384               		.cfi_endproc
 385               	.LFE17:
 387               		.section	.text.layer_on,"ax",@progbits
 388               	.global	layer_on
 390               	layer_on:
 391               	.LFB18:
 158:./tmk_core/common/action_layer.c **** }
 159:./tmk_core/common/action_layer.c **** 
 160:./tmk_core/common/action_layer.c **** /** \brief Layer on
 161:./tmk_core/common/action_layer.c ****  *
 162:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 163:./tmk_core/common/action_layer.c ****  */
 164:./tmk_core/common/action_layer.c **** void layer_on(uint8_t layer)
 165:./tmk_core/common/action_layer.c **** {
 392               		.loc 1 165 0
 393               		.cfi_startproc
 394               	.LVL27:
 395               	/* prologue: function */
 396               	/* frame size = 0 */
 397               	/* stack size = 0 */
 398               	.L__stack_usage = 0
 166:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state | (1UL<<layer));
 399               		.loc 1 166 0
 400 0000 41E0      		ldi r20,lo8(1)
 401 0002 50E0      		ldi r21,0
 402 0004 60E0      		ldi r22,0
 403 0006 70E0      		ldi r23,0
 404 0008 00C0      		rjmp 2f
 405               		1:
 406 000a 440F      		lsl r20
 407 000c 551F      		rol r21
 408 000e 661F      		rol r22
 409 0010 771F      		rol r23
 410               		2:
 411 0012 8A95      		dec r24
 412 0014 02F4      		brpl 1b
 413 0016 8091 0000 		lds r24,layer_state
 414 001a 9091 0000 		lds r25,layer_state+1
 415 001e A091 0000 		lds r26,layer_state+2
 416 0022 B091 0000 		lds r27,layer_state+3
 417               	.LVL28:
 418 0026 482B      		or r20,r24
 419 0028 592B      		or r21,r25
 420 002a 6A2B      		or r22,r26
 421 002c 7B2B      		or r23,r27
 422 002e CB01      		movw r24,r22
 423 0030 BA01      		movw r22,r20
 424 0032 0C94 0000 		jmp layer_state_set
 425               	.LVL29:
 426               		.cfi_endproc
 427               	.LFE18:
 429               		.section	.text.layer_off,"ax",@progbits
 430               	.global	layer_off
 432               	layer_off:
 433               	.LFB19:
 167:./tmk_core/common/action_layer.c **** }
 168:./tmk_core/common/action_layer.c **** 
 169:./tmk_core/common/action_layer.c **** /** \brief Layer off
 170:./tmk_core/common/action_layer.c ****  *
 171:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 172:./tmk_core/common/action_layer.c ****  */
 173:./tmk_core/common/action_layer.c **** void layer_off(uint8_t layer)
 174:./tmk_core/common/action_layer.c **** {
 434               		.loc 1 174 0
 435               		.cfi_startproc
 436               	.LVL30:
 437               	/* prologue: function */
 438               	/* frame size = 0 */
 439               	/* stack size = 0 */
 440               	.L__stack_usage = 0
 175:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state & ~(1UL<<layer));
 441               		.loc 1 175 0
 442 0000 41E0      		ldi r20,lo8(1)
 443 0002 50E0      		ldi r21,0
 444 0004 60E0      		ldi r22,0
 445 0006 70E0      		ldi r23,0
 446 0008 00C0      		rjmp 2f
 447               		1:
 448 000a 440F      		lsl r20
 449 000c 551F      		rol r21
 450 000e 661F      		rol r22
 451 0010 771F      		rol r23
 452               		2:
 453 0012 8A95      		dec r24
 454 0014 02F4      		brpl 1b
 455 0016 4095      		com r20
 456 0018 5095      		com r21
 457 001a 6095      		com r22
 458 001c 7095      		com r23
 459 001e 8091 0000 		lds r24,layer_state
 460 0022 9091 0000 		lds r25,layer_state+1
 461 0026 A091 0000 		lds r26,layer_state+2
 462 002a B091 0000 		lds r27,layer_state+3
 463               	.LVL31:
 464 002e 4823      		and r20,r24
 465 0030 5923      		and r21,r25
 466 0032 6A23      		and r22,r26
 467 0034 7B23      		and r23,r27
 468 0036 CB01      		movw r24,r22
 469 0038 BA01      		movw r22,r20
 470 003a 0C94 0000 		jmp layer_state_set
 471               	.LVL32:
 472               		.cfi_endproc
 473               	.LFE19:
 475               		.section	.text.layer_invert,"ax",@progbits
 476               	.global	layer_invert
 478               	layer_invert:
 479               	.LFB20:
 176:./tmk_core/common/action_layer.c **** }
 177:./tmk_core/common/action_layer.c **** 
 178:./tmk_core/common/action_layer.c **** /** \brief Layer invert
 179:./tmk_core/common/action_layer.c ****  *
 180:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 181:./tmk_core/common/action_layer.c ****  */
 182:./tmk_core/common/action_layer.c **** void layer_invert(uint8_t layer)
 183:./tmk_core/common/action_layer.c **** {
 480               		.loc 1 183 0
 481               		.cfi_startproc
 482               	.LVL33:
 483               	/* prologue: function */
 484               	/* frame size = 0 */
 485               	/* stack size = 0 */
 486               	.L__stack_usage = 0
 184:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state ^ (1UL<<layer));
 487               		.loc 1 184 0
 488 0000 41E0      		ldi r20,lo8(1)
 489 0002 50E0      		ldi r21,0
 490 0004 60E0      		ldi r22,0
 491 0006 70E0      		ldi r23,0
 492 0008 00C0      		rjmp 2f
 493               		1:
 494 000a 440F      		lsl r20
 495 000c 551F      		rol r21
 496 000e 661F      		rol r22
 497 0010 771F      		rol r23
 498               		2:
 499 0012 8A95      		dec r24
 500 0014 02F4      		brpl 1b
 501 0016 8091 0000 		lds r24,layer_state
 502 001a 9091 0000 		lds r25,layer_state+1
 503 001e A091 0000 		lds r26,layer_state+2
 504 0022 B091 0000 		lds r27,layer_state+3
 505               	.LVL34:
 506 0026 4827      		eor r20,r24
 507 0028 5927      		eor r21,r25
 508 002a 6A27      		eor r22,r26
 509 002c 7B27      		eor r23,r27
 510 002e CB01      		movw r24,r22
 511 0030 BA01      		movw r22,r20
 512 0032 0C94 0000 		jmp layer_state_set
 513               	.LVL35:
 514               		.cfi_endproc
 515               	.LFE20:
 517               		.section	.text.layer_or,"ax",@progbits
 518               	.global	layer_or
 520               	layer_or:
 521               	.LFB21:
 185:./tmk_core/common/action_layer.c **** }
 186:./tmk_core/common/action_layer.c **** 
 187:./tmk_core/common/action_layer.c **** /** \brief Layer or
 188:./tmk_core/common/action_layer.c ****  *
 189:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 190:./tmk_core/common/action_layer.c ****  */
 191:./tmk_core/common/action_layer.c **** void layer_or(uint32_t state)
 192:./tmk_core/common/action_layer.c **** {
 522               		.loc 1 192 0
 523               		.cfi_startproc
 524               	.LVL36:
 525 0000 0F93      		push r16
 526               	.LCFI6:
 527               		.cfi_def_cfa_offset 3
 528               		.cfi_offset 16, -2
 529 0002 1F93      		push r17
 530               	.LCFI7:
 531               		.cfi_def_cfa_offset 4
 532               		.cfi_offset 17, -3
 533               	/* prologue: function */
 534               	/* frame size = 0 */
 535               	/* stack size = 2 */
 536               	.L__stack_usage = 2
 193:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state | state);
 537               		.loc 1 193 0
 538 0004 0091 0000 		lds r16,layer_state
 539 0008 1091 0000 		lds r17,layer_state+1
 540 000c 2091 0000 		lds r18,layer_state+2
 541 0010 3091 0000 		lds r19,layer_state+3
 542 0014 602B      		or r22,r16
 543 0016 712B      		or r23,r17
 544 0018 822B      		or r24,r18
 545 001a 932B      		or r25,r19
 546               	.LVL37:
 547               	/* epilogue start */
 194:./tmk_core/common/action_layer.c **** }
 548               		.loc 1 194 0
 549 001c 1F91      		pop r17
 550 001e 0F91      		pop r16
 193:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state | state);
 551               		.loc 1 193 0
 552 0020 0C94 0000 		jmp layer_state_set
 553               	.LVL38:
 554               		.cfi_endproc
 555               	.LFE21:
 557               		.section	.text.layer_and,"ax",@progbits
 558               	.global	layer_and
 560               	layer_and:
 561               	.LFB22:
 195:./tmk_core/common/action_layer.c **** /** \brief Layer and
 196:./tmk_core/common/action_layer.c ****  *
 197:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 198:./tmk_core/common/action_layer.c ****  */
 199:./tmk_core/common/action_layer.c **** void layer_and(uint32_t state)
 200:./tmk_core/common/action_layer.c **** {
 562               		.loc 1 200 0
 563               		.cfi_startproc
 564               	.LVL39:
 565 0000 0F93      		push r16
 566               	.LCFI8:
 567               		.cfi_def_cfa_offset 3
 568               		.cfi_offset 16, -2
 569 0002 1F93      		push r17
 570               	.LCFI9:
 571               		.cfi_def_cfa_offset 4
 572               		.cfi_offset 17, -3
 573               	/* prologue: function */
 574               	/* frame size = 0 */
 575               	/* stack size = 2 */
 576               	.L__stack_usage = 2
 201:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state & state);
 577               		.loc 1 201 0
 578 0004 0091 0000 		lds r16,layer_state
 579 0008 1091 0000 		lds r17,layer_state+1
 580 000c 2091 0000 		lds r18,layer_state+2
 581 0010 3091 0000 		lds r19,layer_state+3
 582 0014 6023      		and r22,r16
 583 0016 7123      		and r23,r17
 584 0018 8223      		and r24,r18
 585 001a 9323      		and r25,r19
 586               	.LVL40:
 587               	/* epilogue start */
 202:./tmk_core/common/action_layer.c **** }
 588               		.loc 1 202 0
 589 001c 1F91      		pop r17
 590 001e 0F91      		pop r16
 201:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state & state);
 591               		.loc 1 201 0
 592 0020 0C94 0000 		jmp layer_state_set
 593               	.LVL41:
 594               		.cfi_endproc
 595               	.LFE22:
 597               		.section	.text.layer_xor,"ax",@progbits
 598               	.global	layer_xor
 600               	layer_xor:
 601               	.LFB23:
 203:./tmk_core/common/action_layer.c **** /** \brief Layer xor
 204:./tmk_core/common/action_layer.c ****  *
 205:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 206:./tmk_core/common/action_layer.c ****  */
 207:./tmk_core/common/action_layer.c **** void layer_xor(uint32_t state)
 208:./tmk_core/common/action_layer.c **** {
 602               		.loc 1 208 0
 603               		.cfi_startproc
 604               	.LVL42:
 605 0000 0F93      		push r16
 606               	.LCFI10:
 607               		.cfi_def_cfa_offset 3
 608               		.cfi_offset 16, -2
 609 0002 1F93      		push r17
 610               	.LCFI11:
 611               		.cfi_def_cfa_offset 4
 612               		.cfi_offset 17, -3
 613               	/* prologue: function */
 614               	/* frame size = 0 */
 615               	/* stack size = 2 */
 616               	.L__stack_usage = 2
 209:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state ^ state);
 617               		.loc 1 209 0
 618 0004 0091 0000 		lds r16,layer_state
 619 0008 1091 0000 		lds r17,layer_state+1
 620 000c 2091 0000 		lds r18,layer_state+2
 621 0010 3091 0000 		lds r19,layer_state+3
 622 0014 6027      		eor r22,r16
 623 0016 7127      		eor r23,r17
 624 0018 8227      		eor r24,r18
 625 001a 9327      		eor r25,r19
 626               	.LVL43:
 627               	/* epilogue start */
 210:./tmk_core/common/action_layer.c **** }
 628               		.loc 1 210 0
 629 001c 1F91      		pop r17
 630 001e 0F91      		pop r16
 209:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state ^ state);
 631               		.loc 1 209 0
 632 0020 0C94 0000 		jmp layer_state_set
 633               	.LVL44:
 634               		.cfi_endproc
 635               	.LFE23:
 637               		.section	.text.layer_debug,"ax",@progbits
 638               	.global	layer_debug
 640               	layer_debug:
 641               	.LFB24:
 211:./tmk_core/common/action_layer.c **** 
 212:./tmk_core/common/action_layer.c **** /** \brief Layer debug printing
 213:./tmk_core/common/action_layer.c ****  *
 214:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 215:./tmk_core/common/action_layer.c ****  */
 216:./tmk_core/common/action_layer.c **** void layer_debug(void)
 217:./tmk_core/common/action_layer.c **** {
 642               		.loc 1 217 0
 643               		.cfi_startproc
 644               	/* prologue: function */
 645               	/* frame size = 0 */
 646               	/* stack size = 0 */
 647               	.L__stack_usage = 0
 648 0000 0895      		ret
 649               		.cfi_endproc
 650               	.LFE24:
 652               		.section	.text.layer_switch_get_layer,"ax",@progbits
 653               	.global	layer_switch_get_layer
 655               	layer_switch_get_layer:
 656               	.LFB26:
 218:./tmk_core/common/action_layer.c ****     dprintf("%08lX(%u)", layer_state, biton32(layer_state));
 219:./tmk_core/common/action_layer.c **** }
 220:./tmk_core/common/action_layer.c **** #endif
 221:./tmk_core/common/action_layer.c **** 
 222:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 223:./tmk_core/common/action_layer.c **** uint8_t source_layers_cache[(MATRIX_ROWS * MATRIX_COLS + 7) / 8][MAX_LAYER_BITS] = {{0}};
 224:./tmk_core/common/action_layer.c **** 
 225:./tmk_core/common/action_layer.c **** void update_source_layers_cache(keypos_t key, uint8_t layer)
 226:./tmk_core/common/action_layer.c **** {
 227:./tmk_core/common/action_layer.c ****     const uint8_t key_number = key.col + (key.row * MATRIX_COLS);
 228:./tmk_core/common/action_layer.c ****     const uint8_t storage_row = key_number / 8;
 229:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 230:./tmk_core/common/action_layer.c **** 
 231:./tmk_core/common/action_layer.c ****     for (uint8_t bit_number = 0; bit_number < MAX_LAYER_BITS; bit_number++) {
 232:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 233:./tmk_core/common/action_layer.c ****             (-((layer & (1U << bit_number)) != 0)
 234:./tmk_core/common/action_layer.c ****              ^ source_layers_cache[storage_row][bit_number])
 235:./tmk_core/common/action_layer.c ****             & (1U << storage_bit);
 236:./tmk_core/common/action_layer.c ****     }
 237:./tmk_core/common/action_layer.c **** }
 238:./tmk_core/common/action_layer.c **** 
 239:./tmk_core/common/action_layer.c **** uint8_t read_source_layers_cache(keypos_t key)
 240:./tmk_core/common/action_layer.c **** {
 241:./tmk_core/common/action_layer.c ****     const uint8_t key_number = key.col + (key.row * MATRIX_COLS);
 242:./tmk_core/common/action_layer.c ****     const uint8_t storage_row = key_number / 8;
 243:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 244:./tmk_core/common/action_layer.c ****     uint8_t layer = 0;
 245:./tmk_core/common/action_layer.c **** 
 246:./tmk_core/common/action_layer.c ****     for (uint8_t bit_number = 0; bit_number < MAX_LAYER_BITS; bit_number++) {
 247:./tmk_core/common/action_layer.c ****         layer |=
 248:./tmk_core/common/action_layer.c ****             ((source_layers_cache[storage_row][bit_number]
 249:./tmk_core/common/action_layer.c ****               & (1U << storage_bit)) != 0)
 250:./tmk_core/common/action_layer.c ****             << bit_number;
 251:./tmk_core/common/action_layer.c ****     }
 252:./tmk_core/common/action_layer.c **** 
 253:./tmk_core/common/action_layer.c ****     return layer;
 254:./tmk_core/common/action_layer.c **** }
 255:./tmk_core/common/action_layer.c **** #endif
 256:./tmk_core/common/action_layer.c **** 
 257:./tmk_core/common/action_layer.c **** /** \brief Store or get action (FIXME: Needs better summary)
 258:./tmk_core/common/action_layer.c ****  *
 259:./tmk_core/common/action_layer.c ****  * Make sure the action triggered when the key is released is the same
 260:./tmk_core/common/action_layer.c ****  * one as the one triggered on press. It's important for the mod keys
 261:./tmk_core/common/action_layer.c ****  * when the layer is switched after the down event but before the up
 262:./tmk_core/common/action_layer.c ****  * event as they may get stuck otherwise.
 263:./tmk_core/common/action_layer.c ****  */
 264:./tmk_core/common/action_layer.c **** action_t store_or_get_action(bool pressed, keypos_t key)
 265:./tmk_core/common/action_layer.c **** {
 266:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 267:./tmk_core/common/action_layer.c ****     if (disable_action_cache) {
 268:./tmk_core/common/action_layer.c ****         return layer_switch_get_action(key);
 269:./tmk_core/common/action_layer.c ****     }
 270:./tmk_core/common/action_layer.c **** 
 271:./tmk_core/common/action_layer.c ****     uint8_t layer;
 272:./tmk_core/common/action_layer.c **** 
 273:./tmk_core/common/action_layer.c ****     if (pressed) {
 274:./tmk_core/common/action_layer.c ****         layer = layer_switch_get_layer(key);
 275:./tmk_core/common/action_layer.c ****         update_source_layers_cache(key, layer);
 276:./tmk_core/common/action_layer.c ****     }
 277:./tmk_core/common/action_layer.c ****     else {
 278:./tmk_core/common/action_layer.c ****         layer = read_source_layers_cache(key);
 279:./tmk_core/common/action_layer.c ****     }
 280:./tmk_core/common/action_layer.c ****     return action_for_key(layer, key);
 281:./tmk_core/common/action_layer.c **** #else
 282:./tmk_core/common/action_layer.c ****     return layer_switch_get_action(key);
 283:./tmk_core/common/action_layer.c **** #endif
 284:./tmk_core/common/action_layer.c **** }
 285:./tmk_core/common/action_layer.c **** 
 286:./tmk_core/common/action_layer.c **** 
 287:./tmk_core/common/action_layer.c **** /** \brief Layer switch get layer
 288:./tmk_core/common/action_layer.c ****  *
 289:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 290:./tmk_core/common/action_layer.c ****  */
 291:./tmk_core/common/action_layer.c **** int8_t layer_switch_get_layer(keypos_t key)
 292:./tmk_core/common/action_layer.c **** {
 657               		.loc 1 292 0
 658               		.cfi_startproc
 659               	.LVL45:
 660               		.loc 1 292 0
 661 0000 CF92      		push r12
 662               	.LCFI12:
 663               		.cfi_def_cfa_offset 3
 664               		.cfi_offset 12, -2
 665 0002 DF92      		push r13
 666               	.LCFI13:
 667               		.cfi_def_cfa_offset 4
 668               		.cfi_offset 13, -3
 669 0004 EF92      		push r14
 670               	.LCFI14:
 671               		.cfi_def_cfa_offset 5
 672               		.cfi_offset 14, -4
 673 0006 FF92      		push r15
 674               	.LCFI15:
 675               		.cfi_def_cfa_offset 6
 676               		.cfi_offset 15, -5
 677 0008 0F93      		push r16
 678               	.LCFI16:
 679               		.cfi_def_cfa_offset 7
 680               		.cfi_offset 16, -6
 681 000a 1F93      		push r17
 682               	.LCFI17:
 683               		.cfi_def_cfa_offset 8
 684               		.cfi_offset 17, -7
 685 000c CF93      		push r28
 686               	.LCFI18:
 687               		.cfi_def_cfa_offset 9
 688               		.cfi_offset 28, -8
 689 000e DF93      		push r29
 690               	.LCFI19:
 691               		.cfi_def_cfa_offset 10
 692               		.cfi_offset 29, -9
 693               	/* prologue: function */
 694               	/* frame size = 0 */
 695               	/* stack size = 8 */
 696               	.L__stack_usage = 8
 697 0010 EC01      		movw r28,r24
 698               	.LVL46:
 293:./tmk_core/common/action_layer.c **** #ifndef NO_ACTION_LAYER
 294:./tmk_core/common/action_layer.c ****     action_t action;
 295:./tmk_core/common/action_layer.c ****     action.code = ACTION_TRANSPARENT;
 296:./tmk_core/common/action_layer.c **** 
 297:./tmk_core/common/action_layer.c ****     uint32_t layers = layer_state | default_layer_state;
 699               		.loc 1 297 0
 700 0012 C090 0000 		lds r12,default_layer_state
 701 0016 D090 0000 		lds r13,default_layer_state+1
 702 001a E090 0000 		lds r14,default_layer_state+2
 703 001e F090 0000 		lds r15,default_layer_state+3
 704 0022 8091 0000 		lds r24,layer_state
 705 0026 9091 0000 		lds r25,layer_state+1
 706 002a A091 0000 		lds r26,layer_state+2
 707 002e B091 0000 		lds r27,layer_state+3
 708               	.LVL47:
 709 0032 C82A      		or r12,r24
 710 0034 D92A      		or r13,r25
 711 0036 EA2A      		or r14,r26
 712 0038 FB2A      		or r15,r27
 713               	.LVL48:
 714 003a 0FE1      		ldi r16,lo8(31)
 715 003c 10E0      		ldi r17,0
 716               	.LVL49:
 717               	.L34:
 718               	.LBB2:
 298:./tmk_core/common/action_layer.c ****     /* check top layer first */
 299:./tmk_core/common/action_layer.c ****     for (int8_t i = 31; i >= 0; i--) {
 300:./tmk_core/common/action_layer.c ****         if (layers & (1UL<<i)) {
 719               		.loc 1 300 0
 720 003e B701      		movw r22,r14
 721 0040 A601      		movw r20,r12
 722 0042 002E      		mov r0,r16
 723 0044 00C0      		rjmp 2f
 724               		1:
 725 0046 7695      		lsr r23
 726 0048 6795      		ror r22
 727 004a 5795      		ror r21
 728 004c 4795      		ror r20
 729               		2:
 730 004e 0A94      		dec r0
 731 0050 02F4      		brpl 1b
 732 0052 40FD      		sbrc r20,0
 733 0054 00C0      		rjmp .L30
 734               	.L33:
 735               	.LVL50:
 736               	.LVL51:
 737 0056 0150      		subi r16,1
 738 0058 1109      		sbc r17,__zero_reg__
 739 005a 00F4      		brcc .L34
 740               	.LBE2:
 301:./tmk_core/common/action_layer.c ****             action = action_for_key(i, key);
 302:./tmk_core/common/action_layer.c ****             if (action.code != ACTION_TRANSPARENT) {
 303:./tmk_core/common/action_layer.c ****                 return i;
 304:./tmk_core/common/action_layer.c ****             }
 305:./tmk_core/common/action_layer.c ****         }
 306:./tmk_core/common/action_layer.c ****     }
 307:./tmk_core/common/action_layer.c ****     /* fall back to layer 0 */
 308:./tmk_core/common/action_layer.c ****     return 0;
 741               		.loc 1 308 0
 742 005c 80E0      		ldi r24,0
 743 005e 00C0      		rjmp .L32
 744               	.L30:
 745               	.LBB3:
 301:./tmk_core/common/action_layer.c ****             action = action_for_key(i, key);
 746               		.loc 1 301 0
 747 0060 BE01      		movw r22,r28
 748 0062 802F      		mov r24,r16
 749 0064 0E94 0000 		call action_for_key
 750               	.LVL52:
 302:./tmk_core/common/action_layer.c ****             if (action.code != ACTION_TRANSPARENT) {
 751               		.loc 1 302 0
 752 0068 0197      		sbiw r24,1
 753 006a 01F0      		breq .L33
 754 006c 802F      		mov r24,r16
 755               	.LVL53:
 756               	.L32:
 757               	/* epilogue start */
 758               	.LBE3:
 309:./tmk_core/common/action_layer.c **** #else
 310:./tmk_core/common/action_layer.c ****     return biton32(default_layer_state);
 311:./tmk_core/common/action_layer.c **** #endif
 312:./tmk_core/common/action_layer.c **** }
 759               		.loc 1 312 0
 760 006e DF91      		pop r29
 761 0070 CF91      		pop r28
 762               	.LVL54:
 763 0072 1F91      		pop r17
 764 0074 0F91      		pop r16
 765 0076 FF90      		pop r15
 766 0078 EF90      		pop r14
 767 007a DF90      		pop r13
 768 007c CF90      		pop r12
 769               	.LVL55:
 770 007e 0895      		ret
 771               		.cfi_endproc
 772               	.LFE26:
 774               		.section	.text.layer_switch_get_action,"ax",@progbits
 775               	.global	layer_switch_get_action
 777               	layer_switch_get_action:
 778               	.LFB27:
 313:./tmk_core/common/action_layer.c **** 
 314:./tmk_core/common/action_layer.c **** /** \brief Layer switch get layer
 315:./tmk_core/common/action_layer.c ****  *
 316:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 317:./tmk_core/common/action_layer.c ****  */
 318:./tmk_core/common/action_layer.c **** action_t layer_switch_get_action(keypos_t key)
 319:./tmk_core/common/action_layer.c **** {
 779               		.loc 1 319 0
 780               		.cfi_startproc
 781               	.LVL56:
 782 0000 CF93      		push r28
 783               	.LCFI20:
 784               		.cfi_def_cfa_offset 3
 785               		.cfi_offset 28, -2
 786 0002 DF93      		push r29
 787               	.LCFI21:
 788               		.cfi_def_cfa_offset 4
 789               		.cfi_offset 29, -3
 790               	/* prologue: function */
 791               	/* frame size = 0 */
 792               	/* stack size = 2 */
 793               	.L__stack_usage = 2
 794 0004 EC01      		movw r28,r24
 320:./tmk_core/common/action_layer.c ****     return action_for_key(layer_switch_get_layer(key), key);
 795               		.loc 1 320 0
 796 0006 0E94 0000 		call layer_switch_get_layer
 797               	.LVL57:
 798 000a BE01      		movw r22,r28
 799               	.LVL58:
 800 000c 0E94 0000 		call action_for_key
 801               	.LVL59:
 802               	/* epilogue start */
 321:./tmk_core/common/action_layer.c **** }
 803               		.loc 1 321 0
 804 0010 DF91      		pop r29
 805 0012 CF91      		pop r28
 806               	.LVL60:
 807 0014 0895      		ret
 808               		.cfi_endproc
 809               	.LFE27:
 811               		.section	.text.store_or_get_action,"ax",@progbits
 812               	.global	store_or_get_action
 814               	store_or_get_action:
 815               	.LFB25:
 265:./tmk_core/common/action_layer.c **** {
 816               		.loc 1 265 0
 817               		.cfi_startproc
 818               	.LVL61:
 819               	/* prologue: function */
 820               	/* frame size = 0 */
 821               	/* stack size = 0 */
 822               	.L__stack_usage = 0
 823 0000 CB01      		movw r24,r22
 824               	.LVL62:
 282:./tmk_core/common/action_layer.c ****     return layer_switch_get_action(key);
 825               		.loc 1 282 0
 826 0002 0E94 0000 		call layer_switch_get_action
 827               	.LVL63:
 284:./tmk_core/common/action_layer.c **** }
 828               		.loc 1 284 0
 829 0006 0895      		ret
 830               		.cfi_endproc
 831               	.LFE25:
 833               	.global	layer_state
 834               		.section	.bss.layer_state,"aw",@nobits
 837               	layer_state:
 838 0000 0000 0000 		.zero	4
 839               	.global	default_layer_state
 840               		.section	.bss.default_layer_state,"aw",@nobits
 843               	default_layer_state:
 844 0000 0000 0000 		.zero	4
 845               		.text
 846               	.Letext0:
 847               		.file 2 "/usr/lib/avr/include/stdint.h"
 848               		.file 3 "./tmk_core/common/keyboard.h"
 849               		.file 4 "./tmk_core/common/action_code.h"
 850               		.file 5 "./tmk_core/common/action.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 action_layer.c
     /tmp/cclS73gE.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cclS73gE.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cclS73gE.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cclS73gE.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cclS73gE.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cclS73gE.s:13     .text.default_layer_state_set_kb:0000000000000000 default_layer_state_set_kb
     /tmp/cclS73gE.s:30     .text.default_layer_state_set:0000000000000000 default_layer_state_set
     /tmp/cclS73gE.s:843    .bss.default_layer_state:0000000000000000 default_layer_state
     /tmp/cclS73gE.s:56     .text.default_layer_debug:0000000000000000 default_layer_debug
     /tmp/cclS73gE.s:71     .text.default_layer_set:0000000000000000 default_layer_set
     /tmp/cclS73gE.s:89     .text.default_layer_or:0000000000000000 default_layer_or
     /tmp/cclS73gE.s:129    .text.default_layer_and:0000000000000000 default_layer_and
     /tmp/cclS73gE.s:169    .text.default_layer_xor:0000000000000000 default_layer_xor
     /tmp/cclS73gE.s:209    .text.layer_state_set_user:0000000000000000 layer_state_set_user
     /tmp/cclS73gE.s:226    .text.layer_state_set_kb:0000000000000000 layer_state_set_kb
     /tmp/cclS73gE.s:244    .text.layer_state_set:0000000000000000 layer_state_set
     /tmp/cclS73gE.s:837    .bss.layer_state:0000000000000000 layer_state
     /tmp/cclS73gE.s:270    .text.layer_clear:0000000000000000 layer_clear
     /tmp/cclS73gE.s:290    .text.layer_state_cmp:0000000000000000 layer_state_cmp
     /tmp/cclS73gE.s:334    .text.layer_state_is:0000000000000000 layer_state_is
     /tmp/cclS73gE.s:357    .text.layer_move:0000000000000000 layer_move
     /tmp/cclS73gE.s:390    .text.layer_on:0000000000000000 layer_on
     /tmp/cclS73gE.s:432    .text.layer_off:0000000000000000 layer_off
     /tmp/cclS73gE.s:478    .text.layer_invert:0000000000000000 layer_invert
     /tmp/cclS73gE.s:520    .text.layer_or:0000000000000000 layer_or
     /tmp/cclS73gE.s:560    .text.layer_and:0000000000000000 layer_and
     /tmp/cclS73gE.s:600    .text.layer_xor:0000000000000000 layer_xor
     /tmp/cclS73gE.s:640    .text.layer_debug:0000000000000000 layer_debug
     /tmp/cclS73gE.s:655    .text.layer_switch_get_layer:0000000000000000 layer_switch_get_layer
     /tmp/cclS73gE.s:777    .text.layer_switch_get_action:0000000000000000 layer_switch_get_action
     /tmp/cclS73gE.s:814    .text.store_or_get_action:0000000000000000 store_or_get_action

UNDEFINED SYMBOLS
clear_keyboard_but_mods
action_for_key
__do_clear_bss
