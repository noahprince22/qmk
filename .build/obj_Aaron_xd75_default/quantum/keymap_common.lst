   1               		.file	"keymap_common.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.action_get_macro,"ax",@progbits
  11               		.weak	action_get_macro
  13               	action_get_macro:
  14               	.LFB107:
  15               		.file 1 "quantum/keymap_common.c"
   1:quantum/keymap_common.c **** /*
   2:quantum/keymap_common.c **** Copyright 2012-2017 Jun Wako <wakojun@gmail.com>
   3:quantum/keymap_common.c **** 
   4:quantum/keymap_common.c **** This program is free software: you can redistribute it and/or modify
   5:quantum/keymap_common.c **** it under the terms of the GNU General Public License as published by
   6:quantum/keymap_common.c **** the Free Software Foundation, either version 2 of the License, or
   7:quantum/keymap_common.c **** (at your option) any later version.
   8:quantum/keymap_common.c **** 
   9:quantum/keymap_common.c **** This program is distributed in the hope that it will be useful,
  10:quantum/keymap_common.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/keymap_common.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/keymap_common.c **** GNU General Public License for more details.
  13:quantum/keymap_common.c **** 
  14:quantum/keymap_common.c **** You should have received a copy of the GNU General Public License
  15:quantum/keymap_common.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/keymap_common.c **** */
  17:quantum/keymap_common.c **** 
  18:quantum/keymap_common.c **** #include "keymap.h"
  19:quantum/keymap_common.c **** #include "report.h"
  20:quantum/keymap_common.c **** #include "keycode.h"
  21:quantum/keymap_common.c **** #include "action_layer.h"
  22:quantum/keymap_common.c **** #if defined(__AVR__)
  23:quantum/keymap_common.c **** #include <util/delay.h>
  24:quantum/keymap_common.c **** #include <stdio.h>
  25:quantum/keymap_common.c **** #endif
  26:quantum/keymap_common.c **** #include "action.h"
  27:quantum/keymap_common.c **** #include "action_macro.h"
  28:quantum/keymap_common.c **** #include "debug.h"
  29:quantum/keymap_common.c **** #include "backlight.h"
  30:quantum/keymap_common.c **** #include "quantum.h"
  31:quantum/keymap_common.c **** 
  32:quantum/keymap_common.c **** #ifdef MIDI_ENABLE
  33:quantum/keymap_common.c **** 	#include "process_midi.h"
  34:quantum/keymap_common.c **** #endif
  35:quantum/keymap_common.c **** 
  36:quantum/keymap_common.c **** extern keymap_config_t keymap_config;
  37:quantum/keymap_common.c **** 
  38:quantum/keymap_common.c **** #include <inttypes.h>
  39:quantum/keymap_common.c **** 
  40:quantum/keymap_common.c **** /* converts key to action */
  41:quantum/keymap_common.c **** action_t action_for_key(uint8_t layer, keypos_t key)
  42:quantum/keymap_common.c **** {
  43:quantum/keymap_common.c ****     // 16bit keycodes - important
  44:quantum/keymap_common.c ****     uint16_t keycode = keymap_key_to_keycode(layer, key);
  45:quantum/keymap_common.c **** 
  46:quantum/keymap_common.c ****     // keycode remapping
  47:quantum/keymap_common.c ****     keycode = keycode_config(keycode);
  48:quantum/keymap_common.c **** 
  49:quantum/keymap_common.c ****     action_t action;
  50:quantum/keymap_common.c ****     uint8_t action_layer, when, mod;
  51:quantum/keymap_common.c **** 
  52:quantum/keymap_common.c ****     switch (keycode) {
  53:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
  54:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action(FN_INDEX(keycode));
  55:quantum/keymap_common.c ****             break;
  56:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
  57:quantum/keymap_common.c ****         case KC_LCTRL ... KC_RGUI:
  58:quantum/keymap_common.c ****             action.code = ACTION_KEY(keycode);
  59:quantum/keymap_common.c ****             break;
  60:quantum/keymap_common.c ****         case KC_SYSTEM_POWER ... KC_SYSTEM_WAKE:
  61:quantum/keymap_common.c ****             action.code = ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
  62:quantum/keymap_common.c ****             break;
  63:quantum/keymap_common.c ****         case KC_AUDIO_MUTE ... KC_MEDIA_REWIND:
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
  65:quantum/keymap_common.c ****             break;
  66:quantum/keymap_common.c ****         case KC_MS_UP ... KC_MS_ACCEL2:
  67:quantum/keymap_common.c ****             action.code = ACTION_MOUSEKEY(keycode);
  68:quantum/keymap_common.c ****             break;
  69:quantum/keymap_common.c ****         case KC_TRNS:
  70:quantum/keymap_common.c ****             action.code = ACTION_TRANSPARENT;
  71:quantum/keymap_common.c ****             break;
  72:quantum/keymap_common.c ****         case QK_MODS ... QK_MODS_MAX: ;
  73:quantum/keymap_common.c ****             // Has a modifier
  74:quantum/keymap_common.c ****             // Split it up
  75:quantum/keymap_common.c ****             action.code = ACTION_MODS_KEY(keycode >> 8, keycode & 0xFF); // adds modifier to key
  76:quantum/keymap_common.c ****             break;
  77:quantum/keymap_common.c ****         case QK_FUNCTION ... QK_FUNCTION_MAX: ;
  78:quantum/keymap_common.c ****             // Is a shortcut for function action_layer, pull last 12bits
  79:quantum/keymap_common.c ****             // This means we have 4,096 FN macros at our disposal
  80:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action( (int)keycode & 0xFFF );
  81:quantum/keymap_common.c ****             break;
  82:quantum/keymap_common.c ****         case QK_MACRO ... QK_MACRO_MAX:
  83:quantum/keymap_common.c ****             if (keycode & 0x800) // tap macros have upper bit set
  84:quantum/keymap_common.c ****                 action.code = ACTION_MACRO_TAP(keycode & 0xFF);
  85:quantum/keymap_common.c ****             else
  86:quantum/keymap_common.c ****                 action.code = ACTION_MACRO(keycode & 0xFF);
  87:quantum/keymap_common.c ****             break;
  88:quantum/keymap_common.c ****         case QK_LAYER_TAP ... QK_LAYER_TAP_MAX:
  89:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_KEY((keycode >> 0x8) & 0xF, keycode & 0xFF);
  90:quantum/keymap_common.c ****             break;
  91:quantum/keymap_common.c ****         case QK_TO ... QK_TO_MAX: ;
  92:quantum/keymap_common.c ****             // Layer set "GOTO"
  93:quantum/keymap_common.c ****             when = (keycode >> 0x4) & 0x3;
  94:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
  95:quantum/keymap_common.c ****             action.code = ACTION_LAYER_SET(action_layer, when);
  96:quantum/keymap_common.c ****             break;
  97:quantum/keymap_common.c ****         case QK_MOMENTARY ... QK_MOMENTARY_MAX: ;
  98:quantum/keymap_common.c ****             // Momentary action_layer
  99:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 100:quantum/keymap_common.c ****             action.code = ACTION_LAYER_MOMENTARY(action_layer);
 101:quantum/keymap_common.c ****             break;
 102:quantum/keymap_common.c ****         case QK_DEF_LAYER ... QK_DEF_LAYER_MAX: ;
 103:quantum/keymap_common.c ****             // Set default action_layer
 104:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 105:quantum/keymap_common.c ****             action.code = ACTION_DEFAULT_LAYER_SET(action_layer);
 106:quantum/keymap_common.c ****             break;
 107:quantum/keymap_common.c ****         case QK_TOGGLE_LAYER ... QK_TOGGLE_LAYER_MAX: ;
 108:quantum/keymap_common.c ****             // Set toggle
 109:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 110:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TOGGLE(action_layer);
 111:quantum/keymap_common.c ****             break;
 112:quantum/keymap_common.c ****         case QK_ONE_SHOT_LAYER ... QK_ONE_SHOT_LAYER_MAX: ;
 113:quantum/keymap_common.c ****             // OSL(action_layer) - One-shot action_layer
 114:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 115:quantum/keymap_common.c ****             action.code = ACTION_LAYER_ONESHOT(action_layer);
 116:quantum/keymap_common.c ****             break;
 117:quantum/keymap_common.c ****         case QK_ONE_SHOT_MOD ... QK_ONE_SHOT_MOD_MAX: ;
 118:quantum/keymap_common.c ****             // OSM(mod) - One-shot mod
 119:quantum/keymap_common.c ****             mod = keycode & 0xFF;
 120:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 121:quantum/keymap_common.c ****             break;
 122:quantum/keymap_common.c ****         case QK_LAYER_TAP_TOGGLE ... QK_LAYER_TAP_TOGGLE_MAX:
 123:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_TOGGLE(keycode & 0xFF);
 124:quantum/keymap_common.c ****             break;
 125:quantum/keymap_common.c ****         case QK_LAYER_MOD ... QK_LAYER_MOD_MAX:
 126:quantum/keymap_common.c ****             mod = keycode & 0xF;
 127:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 128:quantum/keymap_common.c ****             action.code = ACTION_LAYER_MODS(action_layer, mod);
 129:quantum/keymap_common.c ****             break;
 130:quantum/keymap_common.c ****         case QK_MOD_TAP ... QK_MOD_TAP_MAX:
 131:quantum/keymap_common.c ****             mod = mod_config((keycode >> 0x8) & 0x1F);
 132:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 133:quantum/keymap_common.c ****             break;
 134:quantum/keymap_common.c ****     #ifdef BACKLIGHT_ENABLE
 135:quantum/keymap_common.c ****         case BL_ON:
 136:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_ON();
 137:quantum/keymap_common.c ****             break;
 138:quantum/keymap_common.c ****         case BL_OFF:
 139:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_OFF();
 140:quantum/keymap_common.c ****             break;
 141:quantum/keymap_common.c ****         case BL_DEC:
 142:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_DECREASE();
 143:quantum/keymap_common.c ****             break;
 144:quantum/keymap_common.c ****         case BL_INC:
 145:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_INCREASE();
 146:quantum/keymap_common.c ****             break;
 147:quantum/keymap_common.c ****         case BL_TOGG:
 148:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_TOGGLE();
 149:quantum/keymap_common.c ****             break;
 150:quantum/keymap_common.c ****         case BL_STEP:
 151:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_STEP();
 152:quantum/keymap_common.c ****             break;
 153:quantum/keymap_common.c ****     #endif
 154:quantum/keymap_common.c ****     #ifdef SWAP_HANDS_ENABLE
 155:quantum/keymap_common.c ****         case QK_SWAP_HANDS ... QK_SWAP_HANDS_MAX:
 156:quantum/keymap_common.c ****             action.code = ACTION(ACT_SWAP_HANDS, keycode & 0xff);
 157:quantum/keymap_common.c ****             break;
 158:quantum/keymap_common.c ****     #endif
 159:quantum/keymap_common.c **** 
 160:quantum/keymap_common.c ****         default:
 161:quantum/keymap_common.c ****             action.code = ACTION_NO;
 162:quantum/keymap_common.c ****             break;
 163:quantum/keymap_common.c ****     }
 164:quantum/keymap_common.c ****     return action;
 165:quantum/keymap_common.c **** }
 166:quantum/keymap_common.c **** 
 167:quantum/keymap_common.c **** __attribute__ ((weak))
 168:quantum/keymap_common.c **** const uint16_t PROGMEM fn_actions[] = {
 169:quantum/keymap_common.c **** 
 170:quantum/keymap_common.c **** };
 171:quantum/keymap_common.c **** 
 172:quantum/keymap_common.c **** /* Macro */
 173:quantum/keymap_common.c **** __attribute__ ((weak))
 174:quantum/keymap_common.c **** const macro_t *action_get_macro(keyrecord_t *record, uint8_t id, uint8_t opt)
 175:quantum/keymap_common.c **** {
  16               		.loc 1 175 0
  17               		.cfi_startproc
  18               	.LVL0:
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
 176:quantum/keymap_common.c ****     return MACRO_NONE;
 177:quantum/keymap_common.c **** }
  23               		.loc 1 177 0
  24 0000 80E0      		ldi r24,0
  25 0002 90E0      		ldi r25,0
  26               	.LVL1:
  27 0004 0895      		ret
  28               		.cfi_endproc
  29               	.LFE107:
  31               		.section	.text.action_function,"ax",@progbits
  32               		.weak	action_function
  34               	action_function:
  35               	.LFB108:
 178:quantum/keymap_common.c **** 
 179:quantum/keymap_common.c **** /* Function */
 180:quantum/keymap_common.c **** __attribute__ ((weak))
 181:quantum/keymap_common.c **** void action_function(keyrecord_t *record, uint8_t id, uint8_t opt)
 182:quantum/keymap_common.c **** {
  36               		.loc 1 182 0
  37               		.cfi_startproc
  38               	.LVL2:
  39               	/* prologue: function */
  40               	/* frame size = 0 */
  41               	/* stack size = 0 */
  42               	.L__stack_usage = 0
  43 0000 0895      		ret
  44               		.cfi_endproc
  45               	.LFE108:
  47               		.section	.text.keymap_key_to_keycode,"ax",@progbits
  48               		.weak	keymap_key_to_keycode
  50               	keymap_key_to_keycode:
  51               	.LFB109:
 183:quantum/keymap_common.c **** }
 184:quantum/keymap_common.c **** 
 185:quantum/keymap_common.c **** // translates key to keycode
 186:quantum/keymap_common.c **** __attribute__ ((weak))
 187:quantum/keymap_common.c **** uint16_t keymap_key_to_keycode(uint8_t layer, keypos_t key)
 188:quantum/keymap_common.c **** {
  52               		.loc 1 188 0
  53               		.cfi_startproc
  54               	.LVL3:
  55               	/* prologue: function */
  56               	/* frame size = 0 */
  57               	/* stack size = 0 */
  58               	.L__stack_usage = 0
  59               	.LBB2:
 189:quantum/keymap_common.c ****     // Read entire word (16bits)
 190:quantum/keymap_common.c ****     return pgm_read_word(&keymaps[(layer)][(key.row)][(key.col)]);
  60               		.loc 1 190 0
  61 0000 9FE0      		ldi r25,lo8(15)
  62 0002 799F      		mul r23,r25
  63 0004 F001      		movw r30,r0
  64 0006 1124      		clr __zero_reg__
  65 0008 9BE4      		ldi r25,lo8(75)
  66 000a 899F      		mul r24,r25
  67 000c E00D      		add r30,r0
  68 000e F11D      		adc r31,r1
  69 0010 1124      		clr __zero_reg__
  70 0012 E60F      		add r30,r22
  71 0014 F11D      		adc r31,__zero_reg__
  72 0016 EE0F      		lsl r30
  73 0018 FF1F      		rol r31
  74               	.LVL4:
  75 001a E050      		subi r30,lo8(-(keymaps))
  76 001c F040      		sbci r31,hi8(-(keymaps))
  77               	.LVL5:
  78               	.LBE2:
 191:quantum/keymap_common.c **** }
  79               		.loc 1 191 0
  80               	/* #APP */
  81               	 ;  190 "quantum/keymap_common.c" 1
  82 001e 8591      		lpm r24, Z+
  83 0020 9491      		lpm r25, Z
  84               		
  85               	 ;  0 "" 2
  86               	/* #NOAPP */
  87 0022 0895      		ret
  88               		.cfi_endproc
  89               	.LFE109:
  91               		.section	.text.keymap_function_id_to_action,"ax",@progbits
  92               		.weak	keymap_function_id_to_action
  94               	keymap_function_id_to_action:
  95               	.LFB110:
 192:quantum/keymap_common.c **** 
 193:quantum/keymap_common.c **** // translates function id to action
 194:quantum/keymap_common.c **** __attribute__ ((weak))
 195:quantum/keymap_common.c **** uint16_t keymap_function_id_to_action( uint16_t function_id )
 196:quantum/keymap_common.c **** {
  96               		.loc 1 196 0
  97               		.cfi_startproc
  98               	.LVL6:
  99               	/* prologue: function */
 100               	/* frame size = 0 */
 101               	/* stack size = 0 */
 102               	.L__stack_usage = 0
 103               	.LBB3:
 197:quantum/keymap_common.c ****     // The compiler sees the empty (weak) fn_actions and generates a warning
 198:quantum/keymap_common.c ****     // This function should not be called in that case, so the warning is too strict
 199:quantum/keymap_common.c ****     // If this function is called however, the keymap should have overridden fn_actions, and then t
 200:quantum/keymap_common.c ****     // is comparing against the wrong array
 201:quantum/keymap_common.c ****     #pragma GCC diagnostic push
 202:quantum/keymap_common.c ****     #pragma GCC diagnostic ignored "-Warray-bounds"
 203:quantum/keymap_common.c **** 	return pgm_read_word(&fn_actions[function_id]);
 104               		.loc 1 203 0
 105 0000 880F      		lsl r24
 106 0002 991F      		rol r25
 107               	.LVL7:
 108 0004 8050      		subi r24,lo8(-(fn_actions))
 109 0006 9040      		sbci r25,hi8(-(fn_actions))
 110               	.LVL8:
 111               	.LBE3:
 204:quantum/keymap_common.c ****     #pragma GCC diagnostic pop
 205:quantum/keymap_common.c **** }
 112               		.loc 1 205 0
 113 0008 FC01      		movw r30,r24
 114               	/* #APP */
 115               	 ;  203 "quantum/keymap_common.c" 1
 116 000a 8591      		lpm r24, Z+
 117 000c 9491      		lpm r25, Z
 118               		
 119               	 ;  0 "" 2
 120               	/* #NOAPP */
 121 000e 0895      		ret
 122               		.cfi_endproc
 123               	.LFE110:
 125               		.section	.text.action_for_key,"ax",@progbits
 126               	.global	action_for_key
 128               	action_for_key:
 129               	.LFB106:
  42:quantum/keymap_common.c **** {
 130               		.loc 1 42 0
 131               		.cfi_startproc
 132               	.LVL9:
 133 0000 CF93      		push r28
 134               	.LCFI0:
 135               		.cfi_def_cfa_offset 3
 136               		.cfi_offset 28, -2
 137 0002 DF93      		push r29
 138               	.LCFI1:
 139               		.cfi_def_cfa_offset 4
 140               		.cfi_offset 29, -3
 141               	/* prologue: function */
 142               	/* frame size = 0 */
 143               	/* stack size = 2 */
 144               	.L__stack_usage = 2
  44:quantum/keymap_common.c ****     uint16_t keycode = keymap_key_to_keycode(layer, key);
 145               		.loc 1 44 0
 146 0004 0E94 0000 		call keymap_key_to_keycode
 147               	.LVL10:
  47:quantum/keymap_common.c ****     keycode = keycode_config(keycode);
 148               		.loc 1 47 0
 149 0008 0E94 0000 		call keycode_config
 150               	.LVL11:
 151 000c EC01      		movw r28,r24
 152               	.LVL12:
  52:quantum/keymap_common.c ****     switch (keycode) {
 153               		.loc 1 52 0
 154 000e 8115      		cp r24,__zero_reg__
 155 0010 20E5      		ldi r18,80
 156 0012 9207      		cpc r25,r18
 157 0014 00F0      		brlo .+2
 158 0016 00C0      		rjmp .L7
 159 0018 8115      		cp r24,__zero_reg__
 160 001a 30E4      		ldi r19,64
 161 001c 9307      		cpc r25,r19
 162 001e 00F0      		brlo .+2
 163 0020 00C0      		rjmp .L8
 164 0022 883E      		cpi r24,-24
 165 0024 9105      		cpc r25,__zero_reg__
 166 0026 00F4      		brsh .L9
 167 0028 803E      		cpi r24,-32
 168 002a 9105      		cpc r25,__zero_reg__
 169 002c 00F0      		brlo .+2
 170 002e 00C0      		rjmp .L10
 171 0030 883A      		cpi r24,-88
 172 0032 9105      		cpc r25,__zero_reg__
 173 0034 00F4      		brsh .L11
 174 0036 853A      		cpi r24,-91
 175 0038 9105      		cpc r25,__zero_reg__
 176 003a 00F0      		brlo .+2
 177 003c 00C0      		rjmp .L12
 178 003e 8130      		cpi r24,1
 179 0040 9105      		cpc r25,__zero_reg__
 180 0042 01F4      		brne .+2
 181 0044 00C0      		rjmp .L10
 182 0046 00F4      		brsh .+2
 183 0048 00C0      		rjmp .L6
 184 004a 8430      		cpi r24,4
 185 004c 9105      		cpc r25,__zero_reg__
 186 004e 00F0      		brlo .+2
 187 0050 00C0      		rjmp .L10
 188 0052 00C0      		rjmp .L6
 189               	.L11:
 190 0054 8D3B      		cpi r24,-67
 191 0056 9105      		cpc r25,__zero_reg__
 192 0058 00F4      		brsh .+2
 193 005a 00C0      		rjmp .L13
 194 005c 803C      		cpi r24,-64
 195 005e 9105      		cpc r25,__zero_reg__
 196 0060 00F4      		brsh .+2
 197 0062 00C0      		rjmp .L6
  54:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action(FN_INDEX(keycode));
 198               		.loc 1 54 0
 199 0064 805C      		subi r24,-64
 200 0066 9109      		sbc r25,__zero_reg__
 201               	.LVL13:
 202 0068 00C0      		rjmp .L65
 203               	.LVL14:
 204               	.L9:
  52:quantum/keymap_common.c ****     switch (keycode) {
 205               		.loc 1 52 0
 206 006a C115      		cp r28,__zero_reg__
 207 006c 80E2      		ldi r24,32
 208 006e D807      		cpc r29,r24
 209               	.LVL15:
 210 0070 00F4      		brsh .L15
 211 0072 C115      		cp r28,__zero_reg__
 212 0074 91E0      		ldi r25,1
 213 0076 D907      		cpc r29,r25
 214 0078 00F0      		brlo .+2
 215 007a 00C0      		rjmp .L10
 216 007c C03F      		cpi r28,-16
 217 007e D105      		cpc r29,__zero_reg__
 218 0080 00F4      		brsh .+2
 219 0082 00C0      		rjmp .L6
 220               	.LVL16:
  67:quantum/keymap_common.c ****             action.code = ACTION_MOUSEKEY(keycode);
 221               		.loc 1 67 0
 222 0084 D065      		ori r29,80
 223               	.LVL17:
  68:quantum/keymap_common.c ****             break;
 224               		.loc 1 68 0
 225 0086 00C0      		rjmp .L10
 226               	.LVL18:
 227               	.L15:
  52:quantum/keymap_common.c ****     switch (keycode) {
 228               		.loc 1 52 0
 229 0088 C115      		cp r28,__zero_reg__
 230 008a 20E3      		ldi r18,48
 231 008c D207      		cpc r29,r18
 232 008e 00F0      		brlo .+2
 233 0090 00C0      		rjmp .L60
  80:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action( (int)keycode & 0xFFF );
 234               		.loc 1 80 0
 235 0092 CE01      		movw r24,r28
 236 0094 9F70      		andi r25,15
 237 0096 00C0      		rjmp .L65
 238               	.LVL19:
 239               	.L7:
  52:quantum/keymap_common.c ****     switch (keycode) {
 240               		.loc 1 52 0
 241 0098 8115      		cp r24,__zero_reg__
 242 009a 35E5      		ldi r19,85
 243 009c 9307      		cpc r25,r19
 244 009e 00F0      		brlo .+2
 245 00a0 00C0      		rjmp .L19
 246 00a2 C115      		cp r28,__zero_reg__
 247 00a4 84E5      		ldi r24,84
 248 00a6 D807      		cpc r29,r24
 249               	.LVL20:
 250 00a8 00F0      		brlo .+2
 251 00aa 00C0      		rjmp .L20
 252 00ac C115      		cp r28,__zero_reg__
 253 00ae 92E5      		ldi r25,82
 254 00b0 D907      		cpc r29,r25
 255 00b2 00F4      		brsh .L21
 256 00b4 C115      		cp r28,__zero_reg__
 257 00b6 21E5      		ldi r18,81
 258 00b8 D207      		cpc r29,r18
 259 00ba 00F0      		brlo .+2
 260 00bc 00C0      		rjmp .L67
 261               	.LVL21:
  95:quantum/keymap_common.c ****             action.code = ACTION_LAYER_SET(action_layer, when);
 262               		.loc 1 95 0
 263 00be 2C2F      		mov r18,r28
 264 00c0 2370      		andi r18,lo8(3)
 265 00c2 81E0      		ldi r24,lo8(1)
 266 00c4 90E0      		ldi r25,0
 267 00c6 00C0      		rjmp 2f
 268               		1:
 269 00c8 880F      		lsl r24
 270 00ca 991F      		rol r25
 271               		2:
 272 00cc 2A95      		dec r18
 273 00ce 02F4      		brpl 1b
 274 00d0 9C68      		ori r25,140
  93:quantum/keymap_common.c ****             when = (keycode >> 0x4) & 0x3;
 275               		.loc 1 93 0
 276 00d2 9E01      		movw r18,r28
 277 00d4 E4E0      		ldi r30,4
 278               		1:
 279 00d6 3695      		lsr r19
 280 00d8 2795      		ror r18
 281 00da EA95      		dec r30
 282 00dc 01F4      		brne 1b
 283 00de 2370      		andi r18,lo8(3)
  95:quantum/keymap_common.c ****             action.code = ACTION_LAYER_SET(action_layer, when);
 284               		.loc 1 95 0
 285 00e0 922B      		or r25,r18
  94:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 286               		.loc 1 94 0
 287 00e2 CF70      		andi r28,lo8(15)
 288               	.LVL22:
  95:quantum/keymap_common.c ****             action.code = ACTION_LAYER_SET(action_layer, when);
 289               		.loc 1 95 0
 290 00e4 C695      		lsr r28
 291 00e6 C695      		lsr r28
 292 00e8 30E2      		ldi r19,lo8(32)
 293 00ea C39F      		mul r28,r19
 294 00ec E001      		movw r28,r0
 295 00ee 1124      		clr __zero_reg__
 296               	.LVL23:
 297 00f0 C82B      		or r28,r24
 298 00f2 D92B      		or r29,r25
 299               	.LVL24:
  96:quantum/keymap_common.c ****             break;
 300               		.loc 1 96 0
 301 00f4 00C0      		rjmp .L10
 302               	.LVL25:
 303               	.L21:
 304 00f6 8C2F      		mov r24,r28
 305 00f8 8695      		lsr r24
 306 00fa 8695      		lsr r24
 307 00fc 9E01      		movw r18,r28
 308 00fe 2370      		andi r18,3
 309 0100 3327      		clr r19
  52:quantum/keymap_common.c ****     switch (keycode) {
 310               		.loc 1 52 0
 311 0102 C115      		cp r28,__zero_reg__
 312 0104 D345      		sbci r29,83
 313 0106 00F0      		brlo .+2
 314 0108 00C0      		rjmp .L62
 315               	.LVL26:
 105:quantum/keymap_common.c ****             action.code = ACTION_DEFAULT_LAYER_SET(action_layer);
 316               		.loc 1 105 0
 317 010a 90E2      		ldi r25,lo8(32)
 318 010c 899F      		mul r24,r25
 319 010e E001      		movw r28,r0
 320 0110 1124      		clr __zero_reg__
 321               	.LVL27:
 322 0112 81E0      		ldi r24,lo8(1)
 323 0114 90E0      		ldi r25,0
 324 0116 00C0      		rjmp 2f
 325               		1:
 326 0118 880F      		lsl r24
 327 011a 991F      		rol r25
 328               		2:
 329 011c 2A95      		dec r18
 330 011e 02F4      		brpl 1b
 331 0120 C82B      		or r28,r24
 332 0122 D92B      		or r29,r25
 333               	.LVL28:
 334 0124 DC68      		ori r29,140
 335               	.LVL29:
 106:quantum/keymap_common.c ****             break;
 336               		.loc 1 106 0
 337 0126 00C0      		rjmp .L10
 338               	.LVL30:
 339               	.L19:
  52:quantum/keymap_common.c ****     switch (keycode) {
 340               		.loc 1 52 0
 341 0128 8115      		cp r24,__zero_reg__
 342 012a 29E5      		ldi r18,89
 343 012c 9207      		cpc r25,r18
 344 012e 00F4      		brsh .L26
 345 0130 8115      		cp r24,__zero_reg__
 346 0132 38E5      		ldi r19,88
 347 0134 9307      		cpc r25,r19
 348 0136 00F0      		brlo .+2
 349 0138 00C0      		rjmp .L27
 350 013a C115      		cp r28,__zero_reg__
 351 013c 86E5      		ldi r24,86
 352 013e D807      		cpc r29,r24
 353               	.LVL31:
 354 0140 00F0      		brlo .+2
 355 0142 00C0      		rjmp .L6
 356               	.LVL32:
 120:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 357               		.loc 1 120 0
 358 0144 CF71      		andi r28,31
 359 0146 DD27      		clr r29
 360               	.LVL33:
 361 0148 DC2F      		mov r29,r28
 362 014a CC27      		clr r28
 363               	.LVL34:
 364 014c D062      		ori r29,32
 365               	.LVL35:
 121:quantum/keymap_common.c ****             break;
 366               		.loc 1 121 0
 367 014e 00C0      		rjmp .L10
 368               	.LVL36:
 369               	.L26:
  52:quantum/keymap_common.c ****     switch (keycode) {
 370               		.loc 1 52 0
 371 0150 C115      		cp r28,__zero_reg__
 372 0152 9AE5      		ldi r25,90
 373 0154 D907      		cpc r29,r25
 374 0156 00F4      		brsh .+2
 375 0158 00C0      		rjmp .L29
 376 015a CE01      		movw r24,r28
 377               	.LVL37:
 378 015c 9056      		subi r25,96
 379 015e 8115      		cp r24,__zero_reg__
 380 0160 9042      		sbci r25,32
 381 0162 00F0      		brlo .+2
 382 0164 00C0      		rjmp .L6
 131:quantum/keymap_common.c ****             mod = mod_config((keycode >> 0x8) & 0x1F);
 383               		.loc 1 131 0
 384 0166 8D2F      		mov r24,r29
 385 0168 8F71      		andi r24,lo8(31)
 386 016a 0E94 0000 		call mod_config
 387               	.LVL38:
 132:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 388               		.loc 1 132 0
 389 016e DD27      		clr r29
 390               	.LVL39:
 391 0170 D062      		ori r29,32
 392 0172 8F71      		andi r24,lo8(31)
 393               	.LVL40:
 394 0174 D82B      		or r29,r24
 395               	.LVL41:
 133:quantum/keymap_common.c ****             break;
 396               		.loc 1 133 0
 397 0176 00C0      		rjmp .L10
 398               	.LVL42:
 399               	.L12:
  61:quantum/keymap_common.c ****             action.code = ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
 400               		.loc 1 61 0
 401 0178 853A      		cpi r24,-91
 402 017a 9105      		cpc r25,__zero_reg__
 403 017c 01F4      		brne .+2
 404 017e 00C0      		rjmp .L32
  61:quantum/keymap_common.c ****             action.code = ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
 405               		.loc 1 61 0 is_stmt 0 discriminator 1
 406 0180 863A      		cpi r24,-90
 407 0182 9105      		cpc r25,__zero_reg__
 408 0184 01F4      		brne .+2
 409 0186 00C0      		rjmp .L33
 410               	.LVL43:
  61:quantum/keymap_common.c ****             action.code = ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
 411               		.loc 1 61 0
 412 0188 C3E8      		ldi r28,lo8(-125)
 413 018a D0E4      		ldi r29,lo8(64)
 414 018c 00C0      		rjmp .L10
 415               	.LVL44:
 416               	.L13:
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 417               		.loc 1 64 0 is_stmt 1
 418 018e 883A      		cpi r24,-88
 419 0190 9105      		cpc r25,__zero_reg__
 420 0192 01F4      		brne .+2
 421 0194 00C0      		rjmp .L34
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 422               		.loc 1 64 0 is_stmt 0 discriminator 1
 423 0196 893A      		cpi r24,-87
 424 0198 9105      		cpc r25,__zero_reg__
 425 019a 01F4      		brne .+2
 426 019c 00C0      		rjmp .L35
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 427               		.loc 1 64 0 discriminator 3
 428 019e 8A3A      		cpi r24,-86
 429 01a0 9105      		cpc r25,__zero_reg__
 430 01a2 01F4      		brne .+2
 431 01a4 00C0      		rjmp .L36
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 432               		.loc 1 64 0 discriminator 5
 433 01a6 8B3A      		cpi r24,-85
 434 01a8 9105      		cpc r25,__zero_reg__
 435 01aa 01F4      		brne .+2
 436 01ac 00C0      		rjmp .L37
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 437               		.loc 1 64 0 discriminator 7
 438 01ae 8C3A      		cpi r24,-84
 439 01b0 9105      		cpc r25,__zero_reg__
 440 01b2 01F4      		brne .+2
 441 01b4 00C0      		rjmp .L38
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 442               		.loc 1 64 0 discriminator 9
 443 01b6 8B3B      		cpi r24,-69
 444 01b8 9105      		cpc r25,__zero_reg__
 445 01ba 01F4      		brne .+2
 446 01bc 00C0      		rjmp .L39
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 447               		.loc 1 64 0 discriminator 11
 448 01be 8C3B      		cpi r24,-68
 449 01c0 9105      		cpc r25,__zero_reg__
 450 01c2 01F4      		brne .+2
 451 01c4 00C0      		rjmp .L40
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 452               		.loc 1 64 0 discriminator 13
 453 01c6 8D3A      		cpi r24,-83
 454 01c8 9105      		cpc r25,__zero_reg__
 455 01ca 01F4      		brne .+2
 456 01cc 00C0      		rjmp .L41
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 457               		.loc 1 64 0 discriminator 15
 458 01ce 803B      		cpi r24,-80
 459 01d0 9105      		cpc r25,__zero_reg__
 460 01d2 01F4      		brne .+2
 461 01d4 00C0      		rjmp .L42
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 462               		.loc 1 64 0 discriminator 17
 463 01d6 8E3A      		cpi r24,-82
 464 01d8 9105      		cpc r25,__zero_reg__
 465 01da 01F4      		brne .+2
 466 01dc 00C0      		rjmp .L43
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 467               		.loc 1 64 0 discriminator 19
 468 01de 8F3A      		cpi r24,-81
 469 01e0 9105      		cpc r25,__zero_reg__
 470 01e2 01F4      		brne .+2
 471 01e4 00C0      		rjmp .L44
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 472               		.loc 1 64 0 discriminator 21
 473 01e6 813B      		cpi r24,-79
 474 01e8 9105      		cpc r25,__zero_reg__
 475 01ea 01F4      		brne .+2
 476 01ec 00C0      		rjmp .L45
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 477               		.loc 1 64 0 discriminator 23
 478 01ee 823B      		cpi r24,-78
 479 01f0 9105      		cpc r25,__zero_reg__
 480 01f2 01F4      		brne .+2
 481 01f4 00C0      		rjmp .L46
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 482               		.loc 1 64 0 discriminator 25
 483 01f6 833B      		cpi r24,-77
 484 01f8 9105      		cpc r25,__zero_reg__
 485 01fa 01F4      		brne .+2
 486 01fc 00C0      		rjmp .L47
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 487               		.loc 1 64 0 discriminator 27
 488 01fe 843B      		cpi r24,-76
 489 0200 9105      		cpc r25,__zero_reg__
 490 0202 01F4      		brne .+2
 491 0204 00C0      		rjmp .L48
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 492               		.loc 1 64 0 discriminator 29
 493 0206 853B      		cpi r24,-75
 494 0208 9105      		cpc r25,__zero_reg__
 495 020a 01F4      		brne .+2
 496 020c 00C0      		rjmp .L49
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 497               		.loc 1 64 0 discriminator 31
 498 020e 863B      		cpi r24,-74
 499 0210 9105      		cpc r25,__zero_reg__
 500 0212 01F4      		brne .+2
 501 0214 00C0      		rjmp .L50
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 502               		.loc 1 64 0 discriminator 33
 503 0216 873B      		cpi r24,-73
 504 0218 9105      		cpc r25,__zero_reg__
 505 021a 01F4      		brne .+2
 506 021c 00C0      		rjmp .L51
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 507               		.loc 1 64 0 discriminator 35
 508 021e 883B      		cpi r24,-72
 509 0220 9105      		cpc r25,__zero_reg__
 510 0222 01F4      		brne .+2
 511 0224 00C0      		rjmp .L52
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 512               		.loc 1 64 0 discriminator 37
 513 0226 893B      		cpi r24,-71
 514 0228 9105      		cpc r25,__zero_reg__
 515 022a 01F4      		brne .+2
 516 022c 00C0      		rjmp .L53
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 517               		.loc 1 64 0 discriminator 39
 518 022e 8A3B      		cpi r24,-70
 519 0230 9105      		cpc r25,__zero_reg__
 520 0232 01F0      		breq .+2
 521 0234 00C0      		rjmp .L54
 522               	.LVL45:
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 523               		.loc 1 64 0
 524 0236 CAE2      		ldi r28,lo8(42)
 525 0238 D6E4      		ldi r29,lo8(70)
 526 023a 00C0      		rjmp .L10
 527               	.LVL46:
 528               	.L65:
  80:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action( (int)keycode & 0xFFF );
 529               		.loc 1 80 0 is_stmt 1
 530 023c 0E94 0000 		call keymap_function_id_to_action
 531               	.LVL47:
 532 0240 EC01      		movw r28,r24
 533               	.LVL48:
  81:quantum/keymap_common.c ****             break;
 534               		.loc 1 81 0
 535 0242 00C0      		rjmp .L10
 536               	.LVL49:
 537               	.L60:
 538 0244 CE01      		movw r24,r28
 539 0246 9927      		clr r25
  83:quantum/keymap_common.c ****             if (keycode & 0x800) // tap macros have upper bit set
 540               		.loc 1 83 0
 541 0248 D3FF      		sbrs r29,3
 542 024a 00C0      		rjmp .L31
 543               	.LVL50:
  84:quantum/keymap_common.c ****                 action.code = ACTION_MACRO_TAP(keycode & 0xFF);
 544               		.loc 1 84 0
 545 024c EC01      		movw r28,r24
 546 024e D86C      		ori r29,200
 547               	.LVL51:
 548 0250 00C0      		rjmp .L10
 549               	.LVL52:
 550               	.L31:
  86:quantum/keymap_common.c ****                 action.code = ACTION_MACRO(keycode & 0xFF);
 551               		.loc 1 86 0
 552 0252 EC01      		movw r28,r24
 553 0254 D06C      		ori r29,192
 554               	.LVL53:
 555 0256 00C0      		rjmp .L10
 556               	.LVL54:
 557               	.L8:
  89:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_KEY((keycode >> 0x8) & 0xF, keycode & 0xFF);
 558               		.loc 1 89 0
 559 0258 DF70      		andi r29,15
 560               	.LVL55:
 561 025a D06A      		ori r29,160
 562               	.LVL56:
  90:quantum/keymap_common.c ****             break;
 563               		.loc 1 90 0
 564 025c 00C0      		rjmp .L10
 565               	.LVL57:
 566               	.L67:
 100:quantum/keymap_common.c ****             action.code = ACTION_LAYER_MOMENTARY(action_layer);
 567               		.loc 1 100 0
 568 025e DC2F      		mov r29,r28
 569 0260 CC27      		clr r28
 570               	.LVL58:
 571 0262 C16F      		ori r28,241
 572 0264 D06A      		ori r29,160
 573               	.LVL59:
 101:quantum/keymap_common.c ****             break;
 574               		.loc 1 101 0
 575 0266 00C0      		rjmp .L10
 576               	.LVL60:
 577               	.L62:
 110:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TOGGLE(action_layer);
 578               		.loc 1 110 0
 579 0268 90E2      		ldi r25,lo8(32)
 580 026a 899F      		mul r24,r25
 581 026c E001      		movw r28,r0
 582 026e 1124      		clr __zero_reg__
 583               	.LVL61:
 584 0270 81E0      		ldi r24,lo8(1)
 585 0272 90E0      		ldi r25,0
 586 0274 00C0      		rjmp 2f
 587               		1:
 588 0276 880F      		lsl r24
 589 0278 991F      		rol r25
 590               		2:
 591 027a 2A95      		dec r18
 592 027c 02F4      		brpl 1b
 593 027e C82B      		or r28,r24
 594 0280 D92B      		or r29,r25
 595               	.LVL62:
 596 0282 DA68      		ori r29,138
 597               	.LVL63:
 111:quantum/keymap_common.c ****             break;
 598               		.loc 1 111 0
 599 0284 00C0      		rjmp .L10
 600               	.LVL64:
 601               	.L20:
 115:quantum/keymap_common.c ****             action.code = ACTION_LAYER_ONESHOT(action_layer);
 602               		.loc 1 115 0
 603 0286 DC2F      		mov r29,r28
 604 0288 CC27      		clr r28
 605               	.LVL65:
 606 028a C46F      		ori r28,244
 607 028c D06A      		ori r29,160
 608               	.LVL66:
 116:quantum/keymap_common.c ****             break;
 609               		.loc 1 116 0
 610 028e 00C0      		rjmp .L10
 611               	.LVL67:
 612               	.L27:
 123:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_TOGGLE(keycode & 0xFF);
 613               		.loc 1 123 0
 614 0290 D82F      		mov r29,r24
 615 0292 CC27      		clr r28
 616               	.LVL68:
 617 0294 C06F      		ori r28,240
 618 0296 D06A      		ori r29,160
 619               	.LVL69:
 124:quantum/keymap_common.c ****             break;
 620               		.loc 1 124 0
 621 0298 00C0      		rjmp .L10
 622               	.LVL70:
 623               	.L29:
 126:quantum/keymap_common.c ****             mod = keycode & 0xF;
 624               		.loc 1 126 0
 625 029a 8C2F      		mov r24,r28
 626               	.LVL71:
 627 029c 8F70      		andi r24,lo8(15)
 128:quantum/keymap_common.c ****             action.code = ACTION_LAYER_MODS(action_layer, mod);
 628               		.loc 1 128 0
 629 029e 806E      		ori r24,lo8(-32)
 630 02a0 90E0      		ldi r25,0
 631 02a2 906A      		ori r25,160
 127:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 632               		.loc 1 127 0
 633 02a4 34E0      		ldi r19,4
 634               		1:
 635 02a6 D695      		lsr r29
 636 02a8 C795      		ror r28
 637 02aa 3A95      		dec r19
 638 02ac 01F4      		brne 1b
 639               	.LVL72:
 640 02ae CF70      		andi r28,lo8(15)
 641               	.LVL73:
 128:quantum/keymap_common.c ****             action.code = ACTION_LAYER_MODS(action_layer, mod);
 642               		.loc 1 128 0
 643 02b0 9C01      		movw r18,r24
 644 02b2 3C2B      		or r19,r28
 645 02b4 E901      		movw r28,r18
 646               	.LVL74:
 129:quantum/keymap_common.c ****             break;
 647               		.loc 1 129 0
 648 02b6 00C0      		rjmp .L10
 649               	.LVL75:
 650               	.L6:
 161:quantum/keymap_common.c ****             action.code = ACTION_NO;
 651               		.loc 1 161 0
 652 02b8 C0E0      		ldi r28,0
 653 02ba D0E0      		ldi r29,0
 162:quantum/keymap_common.c ****             break;
 654               		.loc 1 162 0
 655 02bc 00C0      		rjmp .L10
 656               	.LVL76:
 657               	.L32:
  61:quantum/keymap_common.c ****             action.code = ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
 658               		.loc 1 61 0
 659 02be C1E8      		ldi r28,lo8(-127)
 660 02c0 D0E4      		ldi r29,lo8(64)
 661 02c2 00C0      		rjmp .L10
 662               	.LVL77:
 663               	.L33:
 664 02c4 C2E8      		ldi r28,lo8(-126)
 665 02c6 D0E4      		ldi r29,lo8(64)
 666 02c8 00C0      		rjmp .L10
 667               	.LVL78:
 668               	.L34:
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 669               		.loc 1 64 0
 670 02ca C2EE      		ldi r28,lo8(-30)
 671 02cc D4E4      		ldi r29,lo8(68)
 672 02ce 00C0      		rjmp .L10
 673               	.LVL79:
 674               	.L35:
 675 02d0 C9EE      		ldi r28,lo8(-23)
 676 02d2 D4E4      		ldi r29,lo8(68)
 677 02d4 00C0      		rjmp .L10
 678               	.LVL80:
 679               	.L36:
 680 02d6 CAEE      		ldi r28,lo8(-22)
 681 02d8 D4E4      		ldi r29,lo8(68)
 682 02da 00C0      		rjmp .L10
 683               	.LVL81:
 684               	.L37:
 685 02dc C5EB      		ldi r28,lo8(-75)
 686 02de D4E4      		ldi r29,lo8(68)
 687 02e0 00C0      		rjmp .L10
 688               	.LVL82:
 689               	.L38:
 690 02e2 C6EB      		ldi r28,lo8(-74)
 691 02e4 D4E4      		ldi r29,lo8(68)
 692 02e6 00C0      		rjmp .L10
 693               	.LVL83:
 694               	.L39:
 695 02e8 C3EB      		ldi r28,lo8(-77)
 696 02ea D4E4      		ldi r29,lo8(68)
 697 02ec 00C0      		rjmp .L10
 698               	.LVL84:
 699               	.L40:
 700 02ee C4EB      		ldi r28,lo8(-76)
 701 02f0 D4E4      		ldi r29,lo8(68)
 702 02f2 00C0      		rjmp .L10
 703               	.LVL85:
 704               	.L41:
 705 02f4 C7EB      		ldi r28,lo8(-73)
 706 02f6 D4E4      		ldi r29,lo8(68)
 707 02f8 00C0      		rjmp .L10
 708               	.LVL86:
 709               	.L42:
 710 02fa CCEC      		ldi r28,lo8(-52)
 711 02fc D4E4      		ldi r29,lo8(68)
 712 02fe 00C0      		rjmp .L10
 713               	.LVL87:
 714               	.L43:
 715 0300 CDEC      		ldi r28,lo8(-51)
 716 0302 D4E4      		ldi r29,lo8(68)
 717 0304 00C0      		rjmp .L10
 718               	.LVL88:
 719               	.L44:
 720 0306 C3E8      		ldi r28,lo8(-125)
 721 0308 D5E4      		ldi r29,lo8(69)
 722 030a 00C0      		rjmp .L10
 723               	.LVL89:
 724               	.L45:
 725 030c CAE8      		ldi r28,lo8(-118)
 726 030e D5E4      		ldi r29,lo8(69)
 727 0310 00C0      		rjmp .L10
 728               	.LVL90:
 729               	.L46:
 730 0312 C2E9      		ldi r28,lo8(-110)
 731 0314 D5E4      		ldi r29,lo8(69)
 732 0316 00C0      		rjmp .L10
 733               	.LVL91:
 734               	.L47:
 735 0318 C4E9      		ldi r28,lo8(-108)
 736 031a D5E4      		ldi r29,lo8(69)
 737 031c 00C0      		rjmp .L10
 738               	.LVL92:
 739               	.L48:
 740 031e C1E2      		ldi r28,lo8(33)
 741 0320 D6E4      		ldi r29,lo8(70)
 742 0322 00C0      		rjmp .L10
 743               	.LVL93:
 744               	.L49:
 745 0324 C3E2      		ldi r28,lo8(35)
 746 0326 D6E4      		ldi r29,lo8(70)
 747 0328 00C0      		rjmp .L10
 748               	.LVL94:
 749               	.L50:
 750 032a C4E2      		ldi r28,lo8(36)
 751 032c D6E4      		ldi r29,lo8(70)
 752 032e 00C0      		rjmp .L10
 753               	.LVL95:
 754               	.L51:
 755 0330 C5E2      		ldi r28,lo8(37)
 756 0332 D6E4      		ldi r29,lo8(70)
 757 0334 00C0      		rjmp .L10
 758               	.LVL96:
 759               	.L52:
 760 0336 C6E2      		ldi r28,lo8(38)
 761 0338 D6E4      		ldi r29,lo8(70)
 762 033a 00C0      		rjmp .L10
 763               	.LVL97:
 764               	.L53:
 765 033c C7E2      		ldi r28,lo8(39)
 766 033e D6E4      		ldi r29,lo8(70)
 767 0340 00C0      		rjmp .L10
 768               	.LVL98:
 769               	.L54:
 770 0342 C0E0      		ldi r28,0
 771 0344 D4E4      		ldi r29,lo8(68)
 772               	.LVL99:
 773               	.L10:
 165:quantum/keymap_common.c **** }
 774               		.loc 1 165 0
 775 0346 CE01      		movw r24,r28
 776               	/* epilogue start */
 777 0348 DF91      		pop r29
 778 034a CF91      		pop r28
 779 034c 0895      		ret
 780               		.cfi_endproc
 781               	.LFE106:
 783               		.weak	fn_actions
 784               		.section	.progmem.data.fn_actions,"a",@progbits
 787               	fn_actions:
 788               		.text
 789               	.Letext0:
 790               		.file 2 "/usr/lib/avr/include/stdint.h"
 791               		.file 3 "./tmk_core/common/keyboard.h"
 792               		.file 4 "./tmk_core/common/keycode.h"
 793               		.file 5 "./tmk_core/common/action_code.h"
 794               		.file 6 "./tmk_core/common/action_macro.h"
 795               		.file 7 "./tmk_core/common/action.h"
 796               		.file 8 "./tmk_core/common/report.h"
 797               		.file 9 "quantum/quantum_keycodes.h"
 798               		.file 10 "./lib/lufa/LUFA/Drivers/USB/Core/USBTask.h"
 799               		.file 11 "quantum/keymap.h"
 800               		.file 12 "./tmk_core/common/action_util.h"
 801               		.file 13 "quantum/keycode_config.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keymap_common.c
     /tmp/cc1FyMxE.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cc1FyMxE.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cc1FyMxE.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cc1FyMxE.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cc1FyMxE.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cc1FyMxE.s:13     .text.action_get_macro:0000000000000000 action_get_macro
     /tmp/cc1FyMxE.s:34     .text.action_function:0000000000000000 action_function
     /tmp/cc1FyMxE.s:50     .text.keymap_key_to_keycode:0000000000000000 keymap_key_to_keycode
     /tmp/cc1FyMxE.s:94     .text.keymap_function_id_to_action:0000000000000000 keymap_function_id_to_action
     /tmp/cc1FyMxE.s:787    .progmem.data.fn_actions:0000000000000000 fn_actions
     /tmp/cc1FyMxE.s:128    .text.action_for_key:0000000000000000 action_for_key

UNDEFINED SYMBOLS
keymaps
keycode_config
mod_config
