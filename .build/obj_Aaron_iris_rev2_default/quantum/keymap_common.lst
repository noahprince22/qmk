   1               		.file	"keymap_common.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.action_get_macro,"ax",@progbits
  11               		.weak	action_get_macro
  13               	action_get_macro:
  14               	.LFB15:
  15               		.file 1 "quantum/keymap_common.c"
   1:quantum/keymap_common.c **** /*
   2:quantum/keymap_common.c **** Copyright 2012-2017 Jun Wako <wakojun@gmail.com>
   3:quantum/keymap_common.c **** 
   4:quantum/keymap_common.c **** This program is free software: you can redistribute it and/or modify
   5:quantum/keymap_common.c **** it under the terms of the GNU General Public License as published by
   6:quantum/keymap_common.c **** the Free Software Foundation, either version 2 of the License, or
   7:quantum/keymap_common.c **** (at your option) any later version.
   8:quantum/keymap_common.c **** 
   9:quantum/keymap_common.c **** This program is distributed in the hope that it will be useful,
  10:quantum/keymap_common.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/keymap_common.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/keymap_common.c **** GNU General Public License for more details.
  13:quantum/keymap_common.c **** 
  14:quantum/keymap_common.c **** You should have received a copy of the GNU General Public License
  15:quantum/keymap_common.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/keymap_common.c **** */
  17:quantum/keymap_common.c **** 
  18:quantum/keymap_common.c **** #include "keymap.h"
  19:quantum/keymap_common.c **** #include "report.h"
  20:quantum/keymap_common.c **** #include "keycode.h"
  21:quantum/keymap_common.c **** #include "action_layer.h"
  22:quantum/keymap_common.c **** #if defined(__AVR__)
  23:quantum/keymap_common.c **** #include <util/delay.h>
  24:quantum/keymap_common.c **** #include <stdio.h>
  25:quantum/keymap_common.c **** #endif
  26:quantum/keymap_common.c **** #include "action.h"
  27:quantum/keymap_common.c **** #include "action_macro.h"
  28:quantum/keymap_common.c **** #include "debug.h"
  29:quantum/keymap_common.c **** #include "backlight.h"
  30:quantum/keymap_common.c **** #include "quantum.h"
  31:quantum/keymap_common.c **** 
  32:quantum/keymap_common.c **** #ifdef MIDI_ENABLE
  33:quantum/keymap_common.c **** 	#include "process_midi.h"
  34:quantum/keymap_common.c **** #endif
  35:quantum/keymap_common.c **** 
  36:quantum/keymap_common.c **** extern keymap_config_t keymap_config;
  37:quantum/keymap_common.c **** 
  38:quantum/keymap_common.c **** #include <inttypes.h>
  39:quantum/keymap_common.c **** 
  40:quantum/keymap_common.c **** /* converts key to action */
  41:quantum/keymap_common.c **** action_t action_for_key(uint8_t layer, keypos_t key)
  42:quantum/keymap_common.c **** {
  43:quantum/keymap_common.c ****     // 16bit keycodes - important
  44:quantum/keymap_common.c ****     uint16_t keycode = keymap_key_to_keycode(layer, key);
  45:quantum/keymap_common.c **** 
  46:quantum/keymap_common.c ****     // keycode remapping
  47:quantum/keymap_common.c ****     keycode = keycode_config(keycode);
  48:quantum/keymap_common.c **** 
  49:quantum/keymap_common.c ****     action_t action;
  50:quantum/keymap_common.c ****     uint8_t action_layer, when, mod;
  51:quantum/keymap_common.c **** 
  52:quantum/keymap_common.c ****     switch (keycode) {
  53:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
  54:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action(FN_INDEX(keycode));
  55:quantum/keymap_common.c ****             break;
  56:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
  57:quantum/keymap_common.c ****         case KC_LCTRL ... KC_RGUI:
  58:quantum/keymap_common.c ****             action.code = ACTION_KEY(keycode);
  59:quantum/keymap_common.c ****             break;
  60:quantum/keymap_common.c ****         case KC_SYSTEM_POWER ... KC_SYSTEM_WAKE:
  61:quantum/keymap_common.c ****             action.code = ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
  62:quantum/keymap_common.c ****             break;
  63:quantum/keymap_common.c ****         case KC_AUDIO_MUTE ... KC_MEDIA_REWIND:
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
  65:quantum/keymap_common.c ****             break;
  66:quantum/keymap_common.c ****         case KC_MS_UP ... KC_MS_ACCEL2:
  67:quantum/keymap_common.c ****             action.code = ACTION_MOUSEKEY(keycode);
  68:quantum/keymap_common.c ****             break;
  69:quantum/keymap_common.c ****         case KC_TRNS:
  70:quantum/keymap_common.c ****             action.code = ACTION_TRANSPARENT;
  71:quantum/keymap_common.c ****             break;
  72:quantum/keymap_common.c ****         case QK_MODS ... QK_MODS_MAX: ;
  73:quantum/keymap_common.c ****             // Has a modifier
  74:quantum/keymap_common.c ****             // Split it up
  75:quantum/keymap_common.c ****             action.code = ACTION_MODS_KEY(keycode >> 8, keycode & 0xFF); // adds modifier to key
  76:quantum/keymap_common.c ****             break;
  77:quantum/keymap_common.c ****         case QK_FUNCTION ... QK_FUNCTION_MAX: ;
  78:quantum/keymap_common.c ****             // Is a shortcut for function action_layer, pull last 12bits
  79:quantum/keymap_common.c ****             // This means we have 4,096 FN macros at our disposal
  80:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action( (int)keycode & 0xFFF );
  81:quantum/keymap_common.c ****             break;
  82:quantum/keymap_common.c ****         case QK_MACRO ... QK_MACRO_MAX:
  83:quantum/keymap_common.c ****             if (keycode & 0x800) // tap macros have upper bit set
  84:quantum/keymap_common.c ****                 action.code = ACTION_MACRO_TAP(keycode & 0xFF);
  85:quantum/keymap_common.c ****             else
  86:quantum/keymap_common.c ****                 action.code = ACTION_MACRO(keycode & 0xFF);
  87:quantum/keymap_common.c ****             break;
  88:quantum/keymap_common.c ****         case QK_LAYER_TAP ... QK_LAYER_TAP_MAX:
  89:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_KEY((keycode >> 0x8) & 0xF, keycode & 0xFF);
  90:quantum/keymap_common.c ****             break;
  91:quantum/keymap_common.c ****         case QK_TO ... QK_TO_MAX: ;
  92:quantum/keymap_common.c ****             // Layer set "GOTO"
  93:quantum/keymap_common.c ****             when = (keycode >> 0x4) & 0x3;
  94:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
  95:quantum/keymap_common.c ****             action.code = ACTION_LAYER_SET(action_layer, when);
  96:quantum/keymap_common.c ****             break;
  97:quantum/keymap_common.c ****         case QK_MOMENTARY ... QK_MOMENTARY_MAX: ;
  98:quantum/keymap_common.c ****             // Momentary action_layer
  99:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 100:quantum/keymap_common.c ****             action.code = ACTION_LAYER_MOMENTARY(action_layer);
 101:quantum/keymap_common.c ****             break;
 102:quantum/keymap_common.c ****         case QK_DEF_LAYER ... QK_DEF_LAYER_MAX: ;
 103:quantum/keymap_common.c ****             // Set default action_layer
 104:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 105:quantum/keymap_common.c ****             action.code = ACTION_DEFAULT_LAYER_SET(action_layer);
 106:quantum/keymap_common.c ****             break;
 107:quantum/keymap_common.c ****         case QK_TOGGLE_LAYER ... QK_TOGGLE_LAYER_MAX: ;
 108:quantum/keymap_common.c ****             // Set toggle
 109:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 110:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TOGGLE(action_layer);
 111:quantum/keymap_common.c ****             break;
 112:quantum/keymap_common.c ****         case QK_ONE_SHOT_LAYER ... QK_ONE_SHOT_LAYER_MAX: ;
 113:quantum/keymap_common.c ****             // OSL(action_layer) - One-shot action_layer
 114:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 115:quantum/keymap_common.c ****             action.code = ACTION_LAYER_ONESHOT(action_layer);
 116:quantum/keymap_common.c ****             break;
 117:quantum/keymap_common.c ****         case QK_ONE_SHOT_MOD ... QK_ONE_SHOT_MOD_MAX: ;
 118:quantum/keymap_common.c ****             // OSM(mod) - One-shot mod
 119:quantum/keymap_common.c ****             mod = keycode & 0xFF;
 120:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 121:quantum/keymap_common.c ****             break;
 122:quantum/keymap_common.c ****         case QK_LAYER_TAP_TOGGLE ... QK_LAYER_TAP_TOGGLE_MAX:
 123:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_TOGGLE(keycode & 0xFF);
 124:quantum/keymap_common.c ****             break;
 125:quantum/keymap_common.c ****         case QK_LAYER_MOD ... QK_LAYER_MOD_MAX:
 126:quantum/keymap_common.c ****             mod = keycode & 0xF;
 127:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 128:quantum/keymap_common.c ****             action.code = ACTION_LAYER_MODS(action_layer, mod);
 129:quantum/keymap_common.c ****             break;
 130:quantum/keymap_common.c ****         case QK_MOD_TAP ... QK_MOD_TAP_MAX:
 131:quantum/keymap_common.c ****             mod = mod_config((keycode >> 0x8) & 0x1F);
 132:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 133:quantum/keymap_common.c ****             break;
 134:quantum/keymap_common.c ****     #ifdef BACKLIGHT_ENABLE
 135:quantum/keymap_common.c ****         case BL_ON:
 136:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_ON();
 137:quantum/keymap_common.c ****             break;
 138:quantum/keymap_common.c ****         case BL_OFF:
 139:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_OFF();
 140:quantum/keymap_common.c ****             break;
 141:quantum/keymap_common.c ****         case BL_DEC:
 142:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_DECREASE();
 143:quantum/keymap_common.c ****             break;
 144:quantum/keymap_common.c ****         case BL_INC:
 145:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_INCREASE();
 146:quantum/keymap_common.c ****             break;
 147:quantum/keymap_common.c ****         case BL_TOGG:
 148:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_TOGGLE();
 149:quantum/keymap_common.c ****             break;
 150:quantum/keymap_common.c ****         case BL_STEP:
 151:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_STEP();
 152:quantum/keymap_common.c ****             break;
 153:quantum/keymap_common.c ****     #endif
 154:quantum/keymap_common.c ****     #ifdef SWAP_HANDS_ENABLE
 155:quantum/keymap_common.c ****         case QK_SWAP_HANDS ... QK_SWAP_HANDS_MAX:
 156:quantum/keymap_common.c ****             action.code = ACTION(ACT_SWAP_HANDS, keycode & 0xff);
 157:quantum/keymap_common.c ****             break;
 158:quantum/keymap_common.c ****     #endif
 159:quantum/keymap_common.c **** 
 160:quantum/keymap_common.c ****         default:
 161:quantum/keymap_common.c ****             action.code = ACTION_NO;
 162:quantum/keymap_common.c ****             break;
 163:quantum/keymap_common.c ****     }
 164:quantum/keymap_common.c ****     return action;
 165:quantum/keymap_common.c **** }
 166:quantum/keymap_common.c **** 
 167:quantum/keymap_common.c **** __attribute__ ((weak))
 168:quantum/keymap_common.c **** const uint16_t PROGMEM fn_actions[] = {
 169:quantum/keymap_common.c **** 
 170:quantum/keymap_common.c **** };
 171:quantum/keymap_common.c **** 
 172:quantum/keymap_common.c **** /* Macro */
 173:quantum/keymap_common.c **** __attribute__ ((weak))
 174:quantum/keymap_common.c **** const macro_t *action_get_macro(keyrecord_t *record, uint8_t id, uint8_t opt)
 175:quantum/keymap_common.c **** {
  16               		.loc 1 175 0
  17               		.cfi_startproc
  18               	.LVL0:
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
 176:quantum/keymap_common.c ****     return MACRO_NONE;
 177:quantum/keymap_common.c **** }
  23               		.loc 1 177 0
  24 0000 80E0      		ldi r24,0
  25 0002 90E0      		ldi r25,0
  26               	.LVL1:
  27 0004 0895      		ret
  28               		.cfi_endproc
  29               	.LFE15:
  31               		.section	.text.action_function,"ax",@progbits
  32               		.weak	action_function
  34               	action_function:
  35               	.LFB16:
 178:quantum/keymap_common.c **** 
 179:quantum/keymap_common.c **** /* Function */
 180:quantum/keymap_common.c **** __attribute__ ((weak))
 181:quantum/keymap_common.c **** void action_function(keyrecord_t *record, uint8_t id, uint8_t opt)
 182:quantum/keymap_common.c **** {
  36               		.loc 1 182 0
  37               		.cfi_startproc
  38               	.LVL2:
  39               	/* prologue: function */
  40               	/* frame size = 0 */
  41               	/* stack size = 0 */
  42               	.L__stack_usage = 0
  43 0000 0895      		ret
  44               		.cfi_endproc
  45               	.LFE16:
  47               		.section	.text.keymap_key_to_keycode,"ax",@progbits
  48               		.weak	keymap_key_to_keycode
  50               	keymap_key_to_keycode:
  51               	.LFB17:
 183:quantum/keymap_common.c **** }
 184:quantum/keymap_common.c **** 
 185:quantum/keymap_common.c **** // translates key to keycode
 186:quantum/keymap_common.c **** __attribute__ ((weak))
 187:quantum/keymap_common.c **** uint16_t keymap_key_to_keycode(uint8_t layer, keypos_t key)
 188:quantum/keymap_common.c **** {
  52               		.loc 1 188 0
  53               		.cfi_startproc
  54               	.LVL3:
  55               	/* prologue: function */
  56               	/* frame size = 0 */
  57               	/* stack size = 0 */
  58               	.L__stack_usage = 0
  59               	.LBB2:
 189:quantum/keymap_common.c ****     // Read entire word (16bits)
 190:quantum/keymap_common.c ****     return pgm_read_word(&keymaps[(layer)][(key.row)][(key.col)]);
  60               		.loc 1 190 0
  61 0000 96E0      		ldi r25,lo8(6)
  62 0002 799F      		mul r23,r25
  63 0004 F001      		movw r30,r0
  64 0006 1124      		clr __zero_reg__
  65 0008 9CE3      		ldi r25,lo8(60)
  66 000a 899F      		mul r24,r25
  67 000c E00D      		add r30,r0
  68 000e F11D      		adc r31,r1
  69 0010 1124      		clr __zero_reg__
  70 0012 E60F      		add r30,r22
  71 0014 F11D      		adc r31,__zero_reg__
  72 0016 EE0F      		lsl r30
  73 0018 FF1F      		rol r31
  74               	.LVL4:
  75 001a E050      		subi r30,lo8(-(keymaps))
  76 001c F040      		sbci r31,hi8(-(keymaps))
  77               	.LVL5:
  78               	.LBE2:
 191:quantum/keymap_common.c **** }
  79               		.loc 1 191 0
  80               	/* #APP */
  81               	 ;  190 "quantum/keymap_common.c" 1
  82 001e 8591      		lpm r24, Z+
  83 0020 9491      		lpm r25, Z
  84               		
  85               	 ;  0 "" 2
  86               	/* #NOAPP */
  87 0022 0895      		ret
  88               		.cfi_endproc
  89               	.LFE17:
  91               		.section	.text.keymap_function_id_to_action,"ax",@progbits
  92               		.weak	keymap_function_id_to_action
  94               	keymap_function_id_to_action:
  95               	.LFB18:
 192:quantum/keymap_common.c **** 
 193:quantum/keymap_common.c **** // translates function id to action
 194:quantum/keymap_common.c **** __attribute__ ((weak))
 195:quantum/keymap_common.c **** uint16_t keymap_function_id_to_action( uint16_t function_id )
 196:quantum/keymap_common.c **** {
  96               		.loc 1 196 0
  97               		.cfi_startproc
  98               	.LVL6:
  99               	/* prologue: function */
 100               	/* frame size = 0 */
 101               	/* stack size = 0 */
 102               	.L__stack_usage = 0
 103               	.LBB3:
 197:quantum/keymap_common.c ****     // The compiler sees the empty (weak) fn_actions and generates a warning
 198:quantum/keymap_common.c ****     // This function should not be called in that case, so the warning is too strict
 199:quantum/keymap_common.c ****     // If this function is called however, the keymap should have overridden fn_actions, and then t
 200:quantum/keymap_common.c ****     // is comparing against the wrong array
 201:quantum/keymap_common.c ****     #pragma GCC diagnostic push
 202:quantum/keymap_common.c ****     #pragma GCC diagnostic ignored "-Warray-bounds"
 203:quantum/keymap_common.c **** 	return pgm_read_word(&fn_actions[function_id]);
 104               		.loc 1 203 0
 105 0000 880F      		lsl r24
 106 0002 991F      		rol r25
 107               	.LVL7:
 108 0004 8050      		subi r24,lo8(-(fn_actions))
 109 0006 9040      		sbci r25,hi8(-(fn_actions))
 110               	.LVL8:
 111               	.LBE3:
 204:quantum/keymap_common.c ****     #pragma GCC diagnostic pop
 205:quantum/keymap_common.c **** }
 112               		.loc 1 205 0
 113 0008 FC01      		movw r30,r24
 114               	/* #APP */
 115               	 ;  203 "quantum/keymap_common.c" 1
 116 000a 8591      		lpm r24, Z+
 117 000c 9491      		lpm r25, Z
 118               		
 119               	 ;  0 "" 2
 120               	/* #NOAPP */
 121 000e 0895      		ret
 122               		.cfi_endproc
 123               	.LFE18:
 125               		.section	.text.action_for_key,"ax",@progbits
 126               	.global	action_for_key
 128               	action_for_key:
 129               	.LFB14:
  42:quantum/keymap_common.c **** {
 130               		.loc 1 42 0
 131               		.cfi_startproc
 132               	.LVL9:
 133 0000 CF93      		push r28
 134               	.LCFI0:
 135               		.cfi_def_cfa_offset 3
 136               		.cfi_offset 28, -2
 137 0002 DF93      		push r29
 138               	.LCFI1:
 139               		.cfi_def_cfa_offset 4
 140               		.cfi_offset 29, -3
 141               	/* prologue: function */
 142               	/* frame size = 0 */
 143               	/* stack size = 2 */
 144               	.L__stack_usage = 2
  44:quantum/keymap_common.c ****     uint16_t keycode = keymap_key_to_keycode(layer, key);
 145               		.loc 1 44 0
 146 0004 0E94 0000 		call keymap_key_to_keycode
 147               	.LVL10:
  47:quantum/keymap_common.c ****     keycode = keycode_config(keycode);
 148               		.loc 1 47 0
 149 0008 0E94 0000 		call keycode_config
 150               	.LVL11:
 151 000c EC01      		movw r28,r24
 152               	.LVL12:
  52:quantum/keymap_common.c ****     switch (keycode) {
 153               		.loc 1 52 0
 154 000e 8115      		cp r24,__zero_reg__
 155 0010 21E5      		ldi r18,81
 156 0012 9207      		cpc r25,r18
 157 0014 00F0      		brlo .+2
 158 0016 00C0      		rjmp .L7
 159 0018 8115      		cp r24,__zero_reg__
 160 001a 30E5      		ldi r19,80
 161 001c 9307      		cpc r25,r19
 162 001e 00F0      		brlo .+2
 163 0020 00C0      		rjmp .L8
 164 0022 883E      		cpi r24,-24
 165 0024 9105      		cpc r25,__zero_reg__
 166 0026 00F4      		brsh .L9
 167 0028 803E      		cpi r24,-32
 168 002a 9105      		cpc r25,__zero_reg__
 169 002c 00F0      		brlo .+2
 170 002e 00C0      		rjmp .L10
 171 0030 883A      		cpi r24,-88
 172 0032 9105      		cpc r25,__zero_reg__
 173 0034 00F4      		brsh .L11
 174 0036 853A      		cpi r24,-91
 175 0038 9105      		cpc r25,__zero_reg__
 176 003a 00F0      		brlo .+2
 177 003c 00C0      		rjmp .L12
 178 003e 8130      		cpi r24,1
 179 0040 9105      		cpc r25,__zero_reg__
 180 0042 01F4      		brne .+2
 181 0044 00C0      		rjmp .L10
 182 0046 00F4      		brsh .+2
 183 0048 00C0      		rjmp .L6
 184 004a 8430      		cpi r24,4
 185 004c 9105      		cpc r25,__zero_reg__
 186 004e 00F0      		brlo .+2
 187 0050 00C0      		rjmp .L10
 188 0052 00C0      		rjmp .L6
 189               	.L11:
 190 0054 8D3B      		cpi r24,-67
 191 0056 9105      		cpc r25,__zero_reg__
 192 0058 00F4      		brsh .+2
 193 005a 00C0      		rjmp .L13
 194 005c 803C      		cpi r24,-64
 195 005e 9105      		cpc r25,__zero_reg__
 196 0060 00F4      		brsh .+2
 197 0062 00C0      		rjmp .L6
  54:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action(FN_INDEX(keycode));
 198               		.loc 1 54 0
 199 0064 805C      		subi r24,-64
 200 0066 9109      		sbc r25,__zero_reg__
 201               	.LVL13:
 202 0068 00C0      		rjmp .L71
 203               	.LVL14:
 204               	.L9:
  52:quantum/keymap_common.c ****     switch (keycode) {
 205               		.loc 1 52 0
 206 006a C115      		cp r28,__zero_reg__
 207 006c 80E3      		ldi r24,48
 208 006e D807      		cpc r29,r24
 209               	.LVL15:
 210 0070 00F4      		brsh .L15
 211 0072 C115      		cp r28,__zero_reg__
 212 0074 20E2      		ldi r18,32
 213 0076 D207      		cpc r29,r18
 214 0078 00F0      		brlo .+2
 215 007a 00C0      		rjmp .L16
 216 007c C03F      		cpi r28,-16
 217 007e D105      		cpc r29,__zero_reg__
 218 0080 00F4      		brsh .+2
 219 0082 00C0      		rjmp .L6
 220 0084 CF3F      		cpi r28,-1
 221 0086 D105      		cpc r29,__zero_reg__
 222 0088 01F0      		breq .+4
 223 008a 00F0      		brlo .+2
 224 008c 00C0      		rjmp .L10
  67:quantum/keymap_common.c ****             action.code = ACTION_MOUSEKEY(keycode);
 225               		.loc 1 67 0
 226 008e D065      		ori r29,80
 227               	.LVL16:
  68:quantum/keymap_common.c ****             break;
 228               		.loc 1 68 0
 229 0090 00C0      		rjmp .L10
 230               	.LVL17:
 231               	.L15:
  52:quantum/keymap_common.c ****     switch (keycode) {
 232               		.loc 1 52 0
 233 0092 C115      		cp r28,__zero_reg__
 234 0094 30E4      		ldi r19,64
 235 0096 D307      		cpc r29,r19
 236 0098 00F0      		brlo .+2
 237 009a 00C0      		rjmp .L66
 238 009c 00C0      		rjmp .L73
 239               	.LVL18:
 240               	.L7:
 241 009e C115      		cp r28,__zero_reg__
 242 00a0 89E5      		ldi r24,89
 243 00a2 D807      		cpc r29,r24
 244               	.LVL19:
 245 00a4 00F4      		brsh .L20
 246 00a6 C115      		cp r28,__zero_reg__
 247 00a8 28E5      		ldi r18,88
 248 00aa D207      		cpc r29,r18
 249 00ac 00F0      		brlo .+2
 250 00ae 00C0      		rjmp .L21
 251 00b0 C115      		cp r28,__zero_reg__
 252 00b2 34E5      		ldi r19,84
 253 00b4 D307      		cpc r29,r19
 254 00b6 00F4      		brsh .L22
 255 00b8 C115      		cp r28,__zero_reg__
 256 00ba 83E5      		ldi r24,83
 257 00bc D807      		cpc r29,r24
 258 00be 00F0      		brlo .+2
 259 00c0 00C0      		rjmp .L23
 260 00c2 C115      		cp r28,__zero_reg__
 261 00c4 22E5      		ldi r18,82
 262 00c6 D207      		cpc r29,r18
 263 00c8 00F0      		brlo .+2
 264 00ca 00C0      		rjmp .L67
 265               	.LVL20:
 100:quantum/keymap_common.c ****             action.code = ACTION_LAYER_MOMENTARY(action_layer);
 266               		.loc 1 100 0
 267 00cc DC2F      		mov r29,r28
 268 00ce CC27      		clr r28
 269               	.LVL21:
 270 00d0 C16F      		ori r28,241
 271 00d2 D06A      		ori r29,160
 272               	.LVL22:
 101:quantum/keymap_common.c ****             break;
 273               		.loc 1 101 0
 274 00d4 00C0      		rjmp .L10
 275               	.LVL23:
 276               	.L22:
  52:quantum/keymap_common.c ****     switch (keycode) {
 277               		.loc 1 52 0
 278 00d6 C115      		cp r28,__zero_reg__
 279 00d8 35E5      		ldi r19,85
 280 00da D307      		cpc r29,r19
 281 00dc 00F4      		brsh .+2
 282 00de 00C0      		rjmp .L26
 283 00e0 C115      		cp r28,__zero_reg__
 284 00e2 86E5      		ldi r24,86
 285 00e4 D807      		cpc r29,r24
 286 00e6 00F0      		brlo .+2
 287 00e8 00C0      		rjmp .L6
 288               	.LVL24:
 120:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 289               		.loc 1 120 0
 290 00ea CF71      		andi r28,31
 291 00ec DD27      		clr r29
 292               	.LVL25:
 293 00ee DC2F      		mov r29,r28
 294 00f0 CC27      		clr r28
 295 00f2 D062      		ori r29,32
 296               	.LVL26:
 121:quantum/keymap_common.c ****             break;
 297               		.loc 1 121 0
 298 00f4 00C0      		rjmp .L10
 299               	.LVL27:
 300               	.L20:
  52:quantum/keymap_common.c ****     switch (keycode) {
 301               		.loc 1 52 0
 302 00f6 CB3B      		cpi r28,-69
 303 00f8 2CE5      		ldi r18,92
 304 00fa D207      		cpc r29,r18
 305 00fc 01F4      		brne .+2
 306 00fe 00C0      		rjmp .L28
 307 0100 00F4      		brsh .L29
 308 0102 C93B      		cpi r28,-71
 309 0104 8CE5      		ldi r24,92
 310 0106 D807      		cpc r29,r24
 311 0108 01F4      		brne .+2
 312 010a 00C0      		rjmp .L30
 313 010c 00F0      		brlo .+2
 314 010e 00C0      		rjmp .L31
 315 0110 C115      		cp r28,__zero_reg__
 316 0112 3AE5      		ldi r19,90
 317 0114 D307      		cpc r29,r19
 318 0116 00F0      		brlo .+2
 319 0118 00C0      		rjmp .L6
 320               	.LVL28:
 126:quantum/keymap_common.c ****             mod = keycode & 0xF;
 321               		.loc 1 126 0
 322 011a 8C2F      		mov r24,r28
 323 011c 8F70      		andi r24,lo8(15)
 128:quantum/keymap_common.c ****             action.code = ACTION_LAYER_MODS(action_layer, mod);
 324               		.loc 1 128 0
 325 011e 806E      		ori r24,lo8(-32)
 326 0120 90E0      		ldi r25,0
 327 0122 906A      		ori r25,160
 127:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 328               		.loc 1 127 0
 329 0124 34E0      		ldi r19,4
 330               		1:
 331 0126 D695      		lsr r29
 332 0128 C795      		ror r28
 333 012a 3A95      		dec r19
 334 012c 01F4      		brne 1b
 335               	.LVL29:
 336 012e CF70      		andi r28,lo8(15)
 128:quantum/keymap_common.c ****             action.code = ACTION_LAYER_MODS(action_layer, mod);
 337               		.loc 1 128 0
 338 0130 9C01      		movw r18,r24
 339 0132 3C2B      		or r19,r28
 340 0134 E901      		movw r28,r18
 129:quantum/keymap_common.c ****             break;
 341               		.loc 1 129 0
 342 0136 00C0      		rjmp .L10
 343               	.LVL30:
 344               	.L29:
  52:quantum/keymap_common.c ****     switch (keycode) {
 345               		.loc 1 52 0
 346 0138 CE3B      		cpi r28,-66
 347 013a 8CE5      		ldi r24,92
 348 013c D807      		cpc r29,r24
 349 013e 01F4      		brne .+2
 350 0140 00C0      		rjmp .L33
 351 0142 00F4      		brsh .L34
 352 0144 CC3B      		cpi r28,-68
 353 0146 3CE5      		ldi r19,92
 354 0148 D307      		cpc r29,r19
 355 014a 01F4      		brne .+2
 356 014c 00C0      		rjmp .L35
 357 014e CD3B      		cpi r28,-67
 358 0150 DC45      		sbci r29,92
 359 0152 01F0      		breq .+2
 360 0154 00C0      		rjmp .L6
 361               	.LVL31:
 148:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_TOGGLE();
 362               		.loc 1 148 0
 363 0156 C0E0      		ldi r28,0
 364 0158 D2ED      		ldi r29,lo8(-46)
 365               	.LVL32:
 149:quantum/keymap_common.c ****             break;
 366               		.loc 1 149 0
 367 015a 00C0      		rjmp .L10
 368               	.LVL33:
 369               	.L34:
  52:quantum/keymap_common.c ****     switch (keycode) {
 370               		.loc 1 52 0
 371 015c CE01      		movw r24,r28
 372 015e 9056      		subi r25,96
 373 0160 8115      		cp r24,__zero_reg__
 374 0162 9042      		sbci r25,32
 375 0164 00F0      		brlo .+2
 376 0166 00C0      		rjmp .L6
 131:quantum/keymap_common.c ****             mod = mod_config((keycode >> 0x8) & 0x1F);
 377               		.loc 1 131 0
 378 0168 8D2F      		mov r24,r29
 379 016a 8F71      		andi r24,lo8(31)
 380 016c 0E94 0000 		call mod_config
 381               	.LVL34:
 132:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 382               		.loc 1 132 0
 383 0170 DD27      		clr r29
 384               	.LVL35:
 385 0172 D062      		ori r29,32
 386 0174 8F71      		andi r24,lo8(31)
 387               	.LVL36:
 388 0176 D82B      		or r29,r24
 389               	.LVL37:
 133:quantum/keymap_common.c ****             break;
 390               		.loc 1 133 0
 391 0178 00C0      		rjmp .L10
 392               	.LVL38:
 393               	.L12:
  61:quantum/keymap_common.c ****             action.code = ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
 394               		.loc 1 61 0
 395 017a 853A      		cpi r24,-91
 396 017c 9105      		cpc r25,__zero_reg__
 397 017e 01F4      		brne .+2
 398 0180 00C0      		rjmp .L39
  61:quantum/keymap_common.c ****             action.code = ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
 399               		.loc 1 61 0 is_stmt 0 discriminator 1
 400 0182 863A      		cpi r24,-90
 401 0184 9105      		cpc r25,__zero_reg__
 402 0186 01F4      		brne .+2
 403 0188 00C0      		rjmp .L40
  61:quantum/keymap_common.c ****             action.code = ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
 404               		.loc 1 61 0
 405 018a C3E8      		ldi r28,lo8(-125)
 406 018c D0E4      		ldi r29,lo8(64)
 407 018e 00C0      		rjmp .L10
 408               	.L13:
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 409               		.loc 1 64 0 is_stmt 1
 410 0190 883A      		cpi r24,-88
 411 0192 9105      		cpc r25,__zero_reg__
 412 0194 01F4      		brne .+2
 413 0196 00C0      		rjmp .L41
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 414               		.loc 1 64 0 is_stmt 0 discriminator 1
 415 0198 893A      		cpi r24,-87
 416 019a 9105      		cpc r25,__zero_reg__
 417 019c 01F4      		brne .+2
 418 019e 00C0      		rjmp .L42
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 419               		.loc 1 64 0 discriminator 3
 420 01a0 8A3A      		cpi r24,-86
 421 01a2 9105      		cpc r25,__zero_reg__
 422 01a4 01F4      		brne .+2
 423 01a6 00C0      		rjmp .L43
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 424               		.loc 1 64 0 discriminator 5
 425 01a8 8B3A      		cpi r24,-85
 426 01aa 9105      		cpc r25,__zero_reg__
 427 01ac 01F4      		brne .+2
 428 01ae 00C0      		rjmp .L44
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 429               		.loc 1 64 0 discriminator 7
 430 01b0 8C3A      		cpi r24,-84
 431 01b2 9105      		cpc r25,__zero_reg__
 432 01b4 01F4      		brne .+2
 433 01b6 00C0      		rjmp .L45
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 434               		.loc 1 64 0 discriminator 9
 435 01b8 8B3B      		cpi r24,-69
 436 01ba 9105      		cpc r25,__zero_reg__
 437 01bc 01F4      		brne .+2
 438 01be 00C0      		rjmp .L46
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 439               		.loc 1 64 0 discriminator 11
 440 01c0 8C3B      		cpi r24,-68
 441 01c2 9105      		cpc r25,__zero_reg__
 442 01c4 01F4      		brne .+2
 443 01c6 00C0      		rjmp .L47
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 444               		.loc 1 64 0 discriminator 13
 445 01c8 8D3A      		cpi r24,-83
 446 01ca 9105      		cpc r25,__zero_reg__
 447 01cc 01F4      		brne .+2
 448 01ce 00C0      		rjmp .L48
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 449               		.loc 1 64 0 discriminator 15
 450 01d0 803B      		cpi r24,-80
 451 01d2 9105      		cpc r25,__zero_reg__
 452 01d4 01F4      		brne .+2
 453 01d6 00C0      		rjmp .L49
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 454               		.loc 1 64 0 discriminator 17
 455 01d8 8E3A      		cpi r24,-82
 456 01da 9105      		cpc r25,__zero_reg__
 457 01dc 01F4      		brne .+2
 458 01de 00C0      		rjmp .L50
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 459               		.loc 1 64 0 discriminator 19
 460 01e0 8F3A      		cpi r24,-81
 461 01e2 9105      		cpc r25,__zero_reg__
 462 01e4 01F4      		brne .+2
 463 01e6 00C0      		rjmp .L51
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 464               		.loc 1 64 0 discriminator 21
 465 01e8 813B      		cpi r24,-79
 466 01ea 9105      		cpc r25,__zero_reg__
 467 01ec 01F4      		brne .+2
 468 01ee 00C0      		rjmp .L52
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 469               		.loc 1 64 0 discriminator 23
 470 01f0 823B      		cpi r24,-78
 471 01f2 9105      		cpc r25,__zero_reg__
 472 01f4 01F4      		brne .+2
 473 01f6 00C0      		rjmp .L53
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 474               		.loc 1 64 0 discriminator 25
 475 01f8 833B      		cpi r24,-77
 476 01fa 9105      		cpc r25,__zero_reg__
 477 01fc 01F4      		brne .+2
 478 01fe 00C0      		rjmp .L54
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 479               		.loc 1 64 0 discriminator 27
 480 0200 843B      		cpi r24,-76
 481 0202 9105      		cpc r25,__zero_reg__
 482 0204 01F4      		brne .+2
 483 0206 00C0      		rjmp .L55
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 484               		.loc 1 64 0 discriminator 29
 485 0208 853B      		cpi r24,-75
 486 020a 9105      		cpc r25,__zero_reg__
 487 020c 01F4      		brne .+2
 488 020e 00C0      		rjmp .L56
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 489               		.loc 1 64 0 discriminator 31
 490 0210 863B      		cpi r24,-74
 491 0212 9105      		cpc r25,__zero_reg__
 492 0214 01F4      		brne .+2
 493 0216 00C0      		rjmp .L57
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 494               		.loc 1 64 0 discriminator 33
 495 0218 873B      		cpi r24,-73
 496 021a 9105      		cpc r25,__zero_reg__
 497 021c 01F4      		brne .+2
 498 021e 00C0      		rjmp .L58
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 499               		.loc 1 64 0 discriminator 35
 500 0220 883B      		cpi r24,-72
 501 0222 9105      		cpc r25,__zero_reg__
 502 0224 01F4      		brne .+2
 503 0226 00C0      		rjmp .L59
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 504               		.loc 1 64 0 discriminator 37
 505 0228 893B      		cpi r24,-71
 506 022a 9105      		cpc r25,__zero_reg__
 507 022c 01F4      		brne .+2
 508 022e 00C0      		rjmp .L60
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 509               		.loc 1 64 0 discriminator 39
 510 0230 8A3B      		cpi r24,-70
 511 0232 9105      		cpc r25,__zero_reg__
 512 0234 01F0      		breq .+2
 513 0236 00C0      		rjmp .L61
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 514               		.loc 1 64 0
 515 0238 CAE2      		ldi r28,lo8(42)
 516 023a D6E4      		ldi r29,lo8(70)
 517 023c 00C0      		rjmp .L10
 518               	.LVL39:
 519               	.L16:
  80:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action( (int)keycode & 0xFFF );
 520               		.loc 1 80 0 is_stmt 1
 521 023e CE01      		movw r24,r28
 522 0240 9F70      		andi r25,15
 523               	.L71:
 524 0242 0E94 0000 		call keymap_function_id_to_action
 525               	.LVL40:
 526 0246 EC01      		movw r28,r24
 527               	.LVL41:
  81:quantum/keymap_common.c ****             break;
 528               		.loc 1 81 0
 529 0248 00C0      		rjmp .L10
 530               	.LVL42:
 531               	.L73:
 532 024a CE01      		movw r24,r28
 533 024c 9927      		clr r25
  83:quantum/keymap_common.c ****             if (keycode & 0x800) // tap macros have upper bit set
 534               		.loc 1 83 0
 535 024e D3FF      		sbrs r29,3
 536 0250 00C0      		rjmp .L38
  84:quantum/keymap_common.c ****                 action.code = ACTION_MACRO_TAP(keycode & 0xFF);
 537               		.loc 1 84 0
 538 0252 EC01      		movw r28,r24
 539               	.LVL43:
 540 0254 D86C      		ori r29,200
 541               	.LVL44:
 542 0256 00C0      		rjmp .L10
 543               	.LVL45:
 544               	.L38:
  86:quantum/keymap_common.c ****                 action.code = ACTION_MACRO(keycode & 0xFF);
 545               		.loc 1 86 0
 546 0258 EC01      		movw r28,r24
 547               	.LVL46:
 548 025a D06C      		ori r29,192
 549               	.LVL47:
 550 025c 00C0      		rjmp .L10
 551               	.LVL48:
 552               	.L66:
  89:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_KEY((keycode >> 0x8) & 0xF, keycode & 0xFF);
 553               		.loc 1 89 0
 554 025e DF70      		andi r29,15
 555               	.LVL49:
 556 0260 D06A      		ori r29,160
 557               	.LVL50:
  90:quantum/keymap_common.c ****             break;
 558               		.loc 1 90 0
 559 0262 00C0      		rjmp .L10
 560               	.LVL51:
 561               	.L8:
  95:quantum/keymap_common.c ****             action.code = ACTION_LAYER_SET(action_layer, when);
 562               		.loc 1 95 0
 563 0264 282F      		mov r18,r24
 564 0266 2370      		andi r18,lo8(3)
 565 0268 81E0      		ldi r24,lo8(1)
 566 026a 90E0      		ldi r25,0
 567               	.LVL52:
 568 026c 00C0      		rjmp 2f
 569               		1:
 570 026e 880F      		lsl r24
 571 0270 991F      		rol r25
 572               		2:
 573 0272 2A95      		dec r18
 574 0274 02F4      		brpl 1b
 575 0276 9C68      		ori r25,140
  93:quantum/keymap_common.c ****             when = (keycode >> 0x4) & 0x3;
 576               		.loc 1 93 0
 577 0278 9E01      		movw r18,r28
 578 027a E4E0      		ldi r30,4
 579               		1:
 580 027c 3695      		lsr r19
 581 027e 2795      		ror r18
 582 0280 EA95      		dec r30
 583 0282 01F4      		brne 1b
 584 0284 2370      		andi r18,lo8(3)
  95:quantum/keymap_common.c ****             action.code = ACTION_LAYER_SET(action_layer, when);
 585               		.loc 1 95 0
 586 0286 922B      		or r25,r18
  94:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 587               		.loc 1 94 0
 588 0288 CF70      		andi r28,lo8(15)
 589               	.LVL53:
  95:quantum/keymap_common.c ****             action.code = ACTION_LAYER_SET(action_layer, when);
 590               		.loc 1 95 0
 591 028a C695      		lsr r28
 592 028c C695      		lsr r28
 593 028e 30E2      		ldi r19,lo8(32)
 594 0290 C39F      		mul r28,r19
 595 0292 E001      		movw r28,r0
 596 0294 1124      		clr __zero_reg__
 597 0296 C82B      		or r28,r24
 598 0298 D92B      		or r29,r25
 599               	.LVL54:
  96:quantum/keymap_common.c ****             break;
 600               		.loc 1 96 0
 601 029a 00C0      		rjmp .L10
 602               	.LVL55:
 603               	.L67:
 105:quantum/keymap_common.c ****             action.code = ACTION_DEFAULT_LAYER_SET(action_layer);
 604               		.loc 1 105 0
 605 029c 8C2F      		mov r24,r28
 606 029e 8695      		lsr r24
 607 02a0 8695      		lsr r24
 608 02a2 20E2      		ldi r18,lo8(32)
 609 02a4 829F      		mul r24,r18
 610 02a6 C001      		movw r24,r0
 611 02a8 1124      		clr __zero_reg__
 612 02aa 9E01      		movw r18,r28
 613 02ac 2370      		andi r18,3
 614 02ae 3327      		clr r19
 615 02b0 C1E0      		ldi r28,lo8(1)
 616 02b2 D0E0      		ldi r29,0
 617               	.LVL56:
 618 02b4 00C0      		rjmp 2f
 619               		1:
 620 02b6 CC0F      		lsl r28
 621 02b8 DD1F      		rol r29
 622               		2:
 623 02ba 2A95      		dec r18
 624 02bc 02F4      		brpl 1b
 625 02be C82B      		or r28,r24
 626 02c0 D92B      		or r29,r25
 627 02c2 DC68      		ori r29,140
 628               	.LVL57:
 106:quantum/keymap_common.c ****             break;
 629               		.loc 1 106 0
 630 02c4 00C0      		rjmp .L10
 631               	.LVL58:
 632               	.L23:
 110:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TOGGLE(action_layer);
 633               		.loc 1 110 0
 634 02c6 8C2F      		mov r24,r28
 635 02c8 8695      		lsr r24
 636 02ca 8695      		lsr r24
 637 02cc 30E2      		ldi r19,lo8(32)
 638 02ce 839F      		mul r24,r19
 639 02d0 C001      		movw r24,r0
 640 02d2 1124      		clr __zero_reg__
 641 02d4 9E01      		movw r18,r28
 642 02d6 2370      		andi r18,3
 643 02d8 3327      		clr r19
 644 02da C1E0      		ldi r28,lo8(1)
 645 02dc D0E0      		ldi r29,0
 646               	.LVL59:
 647 02de 00C0      		rjmp 2f
 648               		1:
 649 02e0 CC0F      		lsl r28
 650 02e2 DD1F      		rol r29
 651               		2:
 652 02e4 2A95      		dec r18
 653 02e6 02F4      		brpl 1b
 654 02e8 C82B      		or r28,r24
 655 02ea D92B      		or r29,r25
 656 02ec DA68      		ori r29,138
 657               	.LVL60:
 111:quantum/keymap_common.c ****             break;
 658               		.loc 1 111 0
 659 02ee 00C0      		rjmp .L10
 660               	.LVL61:
 661               	.L26:
 115:quantum/keymap_common.c ****             action.code = ACTION_LAYER_ONESHOT(action_layer);
 662               		.loc 1 115 0
 663 02f0 DC2F      		mov r29,r28
 664 02f2 CC27      		clr r28
 665               	.LVL62:
 666 02f4 C46F      		ori r28,244
 667 02f6 D06A      		ori r29,160
 668               	.LVL63:
 116:quantum/keymap_common.c ****             break;
 669               		.loc 1 116 0
 670 02f8 00C0      		rjmp .L10
 671               	.LVL64:
 672               	.L21:
 123:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_TOGGLE(keycode & 0xFF);
 673               		.loc 1 123 0
 674 02fa DC2F      		mov r29,r28
 675 02fc CC27      		clr r28
 676               	.LVL65:
 677 02fe C06F      		ori r28,240
 678 0300 D06A      		ori r29,160
 679               	.LVL66:
 124:quantum/keymap_common.c ****             break;
 680               		.loc 1 124 0
 681 0302 00C0      		rjmp .L10
 682               	.LVL67:
 683               	.L30:
 136:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_ON();
 684               		.loc 1 136 0
 685 0304 C0E0      		ldi r28,0
 686 0306 D4ED      		ldi r29,lo8(-44)
 687               	.LVL68:
 137:quantum/keymap_common.c ****             break;
 688               		.loc 1 137 0
 689 0308 00C0      		rjmp .L10
 690               	.LVL69:
 691               	.L31:
 139:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_OFF();
 692               		.loc 1 139 0
 693 030a C0E0      		ldi r28,0
 694 030c D5ED      		ldi r29,lo8(-43)
 695               	.LVL70:
 140:quantum/keymap_common.c ****             break;
 696               		.loc 1 140 0
 697 030e 00C0      		rjmp .L10
 698               	.LVL71:
 699               	.L28:
 142:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_DECREASE();
 700               		.loc 1 142 0
 701 0310 C0E0      		ldi r28,0
 702 0312 D1ED      		ldi r29,lo8(-47)
 703               	.LVL72:
 143:quantum/keymap_common.c ****             break;
 704               		.loc 1 143 0
 705 0314 00C0      		rjmp .L10
 706               	.LVL73:
 707               	.L35:
 145:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_INCREASE();
 708               		.loc 1 145 0
 709 0316 C0E0      		ldi r28,0
 710 0318 D0ED      		ldi r29,lo8(-48)
 711               	.LVL74:
 146:quantum/keymap_common.c ****             break;
 712               		.loc 1 146 0
 713 031a 00C0      		rjmp .L10
 714               	.LVL75:
 715               	.L33:
 151:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_STEP();
 716               		.loc 1 151 0
 717 031c C0E0      		ldi r28,0
 718 031e D3ED      		ldi r29,lo8(-45)
 719               	.LVL76:
 152:quantum/keymap_common.c ****             break;
 720               		.loc 1 152 0
 721 0320 00C0      		rjmp .L10
 722               	.LVL77:
 723               	.L6:
 161:quantum/keymap_common.c ****             action.code = ACTION_NO;
 724               		.loc 1 161 0
 725 0322 C0E0      		ldi r28,0
 726 0324 D0E0      		ldi r29,0
 727               	.LVL78:
 162:quantum/keymap_common.c ****             break;
 728               		.loc 1 162 0
 729 0326 00C0      		rjmp .L10
 730               	.LVL79:
 731               	.L39:
  61:quantum/keymap_common.c ****             action.code = ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
 732               		.loc 1 61 0
 733 0328 C1E8      		ldi r28,lo8(-127)
 734 032a D0E4      		ldi r29,lo8(64)
 735 032c 00C0      		rjmp .L10
 736               	.L40:
 737 032e C2E8      		ldi r28,lo8(-126)
 738 0330 D0E4      		ldi r29,lo8(64)
 739 0332 00C0      		rjmp .L10
 740               	.L41:
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 741               		.loc 1 64 0
 742 0334 C2EE      		ldi r28,lo8(-30)
 743 0336 D4E4      		ldi r29,lo8(68)
 744 0338 00C0      		rjmp .L10
 745               	.L42:
 746 033a C9EE      		ldi r28,lo8(-23)
 747 033c D4E4      		ldi r29,lo8(68)
 748 033e 00C0      		rjmp .L10
 749               	.L43:
 750 0340 CAEE      		ldi r28,lo8(-22)
 751 0342 D4E4      		ldi r29,lo8(68)
 752 0344 00C0      		rjmp .L10
 753               	.L44:
 754 0346 C5EB      		ldi r28,lo8(-75)
 755 0348 D4E4      		ldi r29,lo8(68)
 756 034a 00C0      		rjmp .L10
 757               	.L45:
 758 034c C6EB      		ldi r28,lo8(-74)
 759 034e D4E4      		ldi r29,lo8(68)
 760 0350 00C0      		rjmp .L10
 761               	.L46:
 762 0352 C3EB      		ldi r28,lo8(-77)
 763 0354 D4E4      		ldi r29,lo8(68)
 764 0356 00C0      		rjmp .L10
 765               	.L47:
 766 0358 C4EB      		ldi r28,lo8(-76)
 767 035a D4E4      		ldi r29,lo8(68)
 768 035c 00C0      		rjmp .L10
 769               	.L48:
 770 035e C7EB      		ldi r28,lo8(-73)
 771 0360 D4E4      		ldi r29,lo8(68)
 772 0362 00C0      		rjmp .L10
 773               	.L49:
 774 0364 CCEC      		ldi r28,lo8(-52)
 775 0366 D4E4      		ldi r29,lo8(68)
 776 0368 00C0      		rjmp .L10
 777               	.L50:
 778 036a CDEC      		ldi r28,lo8(-51)
 779 036c D4E4      		ldi r29,lo8(68)
 780 036e 00C0      		rjmp .L10
 781               	.L51:
 782 0370 C3E8      		ldi r28,lo8(-125)
 783 0372 D5E4      		ldi r29,lo8(69)
 784 0374 00C0      		rjmp .L10
 785               	.L52:
 786 0376 CAE8      		ldi r28,lo8(-118)
 787 0378 D5E4      		ldi r29,lo8(69)
 788 037a 00C0      		rjmp .L10
 789               	.L53:
 790 037c C2E9      		ldi r28,lo8(-110)
 791 037e D5E4      		ldi r29,lo8(69)
 792 0380 00C0      		rjmp .L10
 793               	.L54:
 794 0382 C4E9      		ldi r28,lo8(-108)
 795 0384 D5E4      		ldi r29,lo8(69)
 796 0386 00C0      		rjmp .L10
 797               	.L55:
 798 0388 C1E2      		ldi r28,lo8(33)
 799 038a D6E4      		ldi r29,lo8(70)
 800 038c 00C0      		rjmp .L10
 801               	.L56:
 802 038e C3E2      		ldi r28,lo8(35)
 803 0390 D6E4      		ldi r29,lo8(70)
 804 0392 00C0      		rjmp .L10
 805               	.L57:
 806 0394 C4E2      		ldi r28,lo8(36)
 807 0396 D6E4      		ldi r29,lo8(70)
 808 0398 00C0      		rjmp .L10
 809               	.L58:
 810 039a C5E2      		ldi r28,lo8(37)
 811 039c D6E4      		ldi r29,lo8(70)
 812 039e 00C0      		rjmp .L10
 813               	.L59:
 814 03a0 C6E2      		ldi r28,lo8(38)
 815 03a2 D6E4      		ldi r29,lo8(70)
 816 03a4 00C0      		rjmp .L10
 817               	.L60:
 818 03a6 C7E2      		ldi r28,lo8(39)
 819 03a8 D6E4      		ldi r29,lo8(70)
 820 03aa 00C0      		rjmp .L10
 821               	.L61:
 822 03ac C0E0      		ldi r28,0
 823 03ae D4E4      		ldi r29,lo8(68)
 824               	.LVL80:
 825               	.L10:
 165:quantum/keymap_common.c **** }
 826               		.loc 1 165 0
 827 03b0 CE01      		movw r24,r28
 828               	/* epilogue start */
 829 03b2 DF91      		pop r29
 830 03b4 CF91      		pop r28
 831               	.LVL81:
 832 03b6 0895      		ret
 833               		.cfi_endproc
 834               	.LFE14:
 836               		.weak	fn_actions
 837               		.section	.progmem.data.fn_actions,"a",@progbits
 840               	fn_actions:
 841               		.text
 842               	.Letext0:
 843               		.file 2 "/usr/lib/avr/include/stdint.h"
 844               		.file 3 "./tmk_core/common/keyboard.h"
 845               		.file 4 "./tmk_core/common/keycode.h"
 846               		.file 5 "./tmk_core/common/action_code.h"
 847               		.file 6 "./tmk_core/common/action_macro.h"
 848               		.file 7 "./tmk_core/common/action.h"
 849               		.file 8 "./tmk_core/common/report.h"
 850               		.file 9 "quantum/quantum_keycodes.h"
 851               		.file 10 "quantum/keymap.h"
 852               		.file 11 "./tmk_core/common/action_util.h"
 853               		.file 12 "quantum/keycode_config.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keymap_common.c
     /tmp/ccZG6cIq.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccZG6cIq.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccZG6cIq.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccZG6cIq.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccZG6cIq.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccZG6cIq.s:13     .text.action_get_macro:0000000000000000 action_get_macro
     /tmp/ccZG6cIq.s:34     .text.action_function:0000000000000000 action_function
     /tmp/ccZG6cIq.s:50     .text.keymap_key_to_keycode:0000000000000000 keymap_key_to_keycode
     /tmp/ccZG6cIq.s:94     .text.keymap_function_id_to_action:0000000000000000 keymap_function_id_to_action
     /tmp/ccZG6cIq.s:840    .progmem.data.fn_actions:0000000000000000 fn_actions
     /tmp/ccZG6cIq.s:128    .text.action_for_key:0000000000000000 action_for_key

UNDEFINED SYMBOLS
keymaps
keycode_config
mod_config
